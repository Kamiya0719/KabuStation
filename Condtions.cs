using System;
using System.Collections.Generic;
using System.Linq;

namespace CSharp_sample
{
	class Condtions
	{
		private const bool IsAllCheck = true;


		/** 2500コード*2000日*数千パターンの51チェックを全て行って保存する */
		public static void SaveCond51All()
		{
			CsvControll.CreateFolders();
			foreach (string symbol in CsvControll.GetCodeList()) {
				List<string[]> codeInfo = CsvControll.GetCodeInfo(symbol);
				for (int diffDayIdx = 0; diffDayIdx < diffDayList.Length; diffDayIdx++) {
					for (int ratioIdx = 0; ratioIdx < ratioList.Length; ratioIdx++) {
						SaveCond51(symbol, codeInfo, diffDayIdx, ratioIdx);
					}
				}
				Common.DebugInfo("SaveCond51All", symbol);
			}
		}

		private static void SaveCond51(string symbol, List<string[]> codeInfo, int diffDayIdx, int ratioIdx)
		{
			int diffDay = diffDayList[diffDayIdx];
			double ratio = ratioList[ratioIdx];

			Dictionary<string, bool> list = new Dictionary<string, bool>();
			for (int i = codeInfo.Count - 1; i >= diffDay; i--) {
				list[codeInfo[i][0]] = Double.Parse(codeInfo[i - diffDay][4]) * ratio <= Double.Parse(codeInfo[i][4]);
			}

			List<string[]> saveData = new List<string[]>();
			for (int i = codeInfo.Count - 1; i >= 120; i--) {
				string[] saveRow = new string[periodCntList.GetLength(0) + 1];
				DateTime date = DateTime.Parse(codeInfo[i][0]); // 日付
				saveRow[0] = Common.GetDateIdx(date).ToString();
				for (int p = 0; p < periodCntList.GetLength(0); p++) {
					int cnt = periodCntList[p, 1];
					for (int j = 1; j <= periodCntList[p, 0]; j++) {
						if (list[codeInfo[i - j][0]]) cnt--;
						if (0 >= cnt) break;
					}
					saveRow[p + 1] = 0 >= cnt ? "1" : "0";
				}
				saveData.Add(saveRow);
			}

			// 保存
			CsvControll.SaveCond51All(saveData, symbol, diffDayIdx, ratioIdx);
		}



		/** 利益情報を全て保存する */
		public static void SaveBenefitAll()
		{
			foreach (string symbol in CsvControll.GetCodeList()) {
				if (false) {
					SaveBenefit(symbol);
				} else {
					SaveBenefit2(symbol);
				}
			}
		}

		private static void SaveBenefit(string symbol)
		{
			// 買って
			List<string[]> saveData = new List<string[]>();
			List<string[]> codeInfo = CsvControll.GetCodeInfo(symbol);
			for (int i = 0; i < codeInfo.Count - 42; i++) {
				// 
				DateTime date = DateTime.Parse(codeInfo[i][0]);
				double buyPrice = Double.Parse(codeInfo[i][4]); // 終値で購入

				double sellPrice = Double.Parse(codeInfo[i + 42][4]);
				int sellPeriod = 0;
				for (int havePeriod = 1; havePeriod <= 42; havePeriod++) {
					sellPeriod = havePeriod;

					double sellRatio = 1.01;
					foreach (KeyValuePair<int, double> pair in Def.idealSellRatio) {
						if (havePeriod <= pair.Key) sellRatio = pair.Value;
					}
					// 理想売り
					if (Double.Parse(codeInfo[i + havePeriod][2]) >= buyPrice * sellRatio) {
						sellPrice = buyPrice * sellRatio;
						break;
					}
					// 損切 損失/前日比
					if (Double.Parse(codeInfo[i + havePeriod][3]) * 100 < buyPrice * (100 - Def.LossCutRatio[0, 0])
						|| Double.Parse(codeInfo[i + havePeriod][3]) * 100 < Double.Parse(codeInfo[i + havePeriod - 1][4]) * (100 - Def.LossCutRatio[0, 1])) {
						sellPrice = Double.Parse(codeInfo[i + havePeriod][4]);
						break;
					}
				}

				int benefit = (int)Math.Round((sellPrice / buyPrice - 1) * 100, MidpointRounding.AwayFromZero);
				//Common.DebugInfo("SaveBenefit", benefit, sellPeriod);
				saveData.Add(new string[3] { codeInfo[i][0], benefit.ToString(), sellPeriod.ToString() });
			}

			CsvControll.SaveBenefitAll(saveData, symbol);
		}

		/** 空売り用の利益を算出してセーブ */
		private static void SaveBenefit2(string symbol)
		{
			// 買って
			List<string[]> saveData = new List<string[]>();
			List<string[]> codeInfo = CsvControll.GetCodeInfo(symbol);
			int num = 20;
			for (int i = 0; i < codeInfo.Count - num; i++) {
				DateTime date = DateTime.Parse(codeInfo[i][0]);
				double buyPrice = Double.Parse(codeInfo[i][4]); // 終値で売却

				double sellPrice = Double.Parse(codeInfo[i + num][4]);
				int sellPeriod = 0;
				for (int havePeriod = 1; havePeriod <= num; havePeriod++) {
					sellPeriod = havePeriod;
					double sellRatio = 0.95;
					// 理想売り
					if (Double.Parse(codeInfo[i + havePeriod][3]) <= buyPrice * sellRatio) {
						sellPrice = buyPrice * sellRatio;
						break;
					}
					// 前日終値より3％および当日高値が7％以上増えてたら損切 でも前日より13％増しは流石にいったんステイ
					if (havePeriod >= 2
						&& Double.Parse(codeInfo[i + havePeriod - 1][4]) >= buyPrice * 1.03
						&& Double.Parse(codeInfo[i + havePeriod][4]) >= buyPrice * 1.08
						&& Double.Parse(codeInfo[i + havePeriod][4]) < Double.Parse(codeInfo[i + havePeriod - 1][4]) * 1.13
					) {
						sellPrice = Double.Parse(codeInfo[i + havePeriod][4]);
						break;
					}
				}

				int benefit = (int)Math.Round((1 - sellPrice / buyPrice) * 100, MidpointRounding.AwayFromZero);
				//Common.DebugInfo("SaveBenefit", benefit, sellPeriod);
				saveData.Add(new string[3] { codeInfo[i][0], benefit.ToString(), sellPeriod.ToString() });
			}

			CsvControll.SaveBenefitAll(saveData, "Kara_" + symbol);
		}


		private const int AllTrueCondIdx = 1;
		private static readonly int[] OldPro500 = new int[] {
			// 2024/06/10
			//1332,1333,1414,1417,1605,1662,1719,1720,1721,1812,1820,1832,1861,1911,1925,1928,1930,1934,1941,1959,1961,1964,1965,1969,1973,1975,2121,2124,2146,2154,2212,2216,2229,2327,2337,2501,2502,2503,2579,2585,2670,2674,2678,2685,2702,2749,2751,2760,2768,2782,2791,2801,2802,2805,2809,2811,2871,2875,2914,2915,2928,3002,3003,3038,3048,3050,3064,3075,3076,3086,3092,3093,3097,3099,3104,3107,3110,3132,3179,3196,3231,3289,3302,3355,3374,3382,3388,3401,3405,3407,3433,3434,3436,3445,3480,3498,3539,3569,3591,3608,3612,3679,3692,3733,3774,3791,3864,3901,3941,3964,3993,3994,4004,4022,4028,4042,4043,4045,4047,4063,4088,4091,4095,4107,4114,4116,4118,4182,4183,4186,4188,4189,4194,4203,4204,4206,4208,4212,4216,4218,4228,4275,4307,4369,4373,4374,4401,4413,4417,4419,4452,4486,4493,4502,4507,4519,4526,4543,4568,4578,4611,4617,4619,4661,4676,4681,4684,4687,4704,4725,4733,4743,4746,4751,4755,4765,4768,4886,4901,4956,4972,4980,4992,5013,5019,5020,5027,5101,5105,5108,5110,5161,5191,5201,5254,5310,5333,5334,5344,5384,5393,5401,5411,5595,5703,5706,5711,5713,5714,5715,5741,5801,5802,5803,5834,5838,5842,5857,5911,5943,5975,5991,6055,6062,6088,6098,6113,6135,6140,6141,6146,6178,6196,6201,6228,6254,6255,6258,6266,6269,6272,6273,6278,6282,6294,6301,6305,6315,6323,6326,6330,6339,6357,6361,6363,6367,6368,6369,6370,6371,6376,6383,6395,6432,6454,6458,6463,6465,6471,6472,6479,6480,6481,6486,6490,6501,6503,6504,6506,6508,6516,6524,6526,6544,6547,6563,6594,6670,6701,6702,6723,6724,6728,6741,6752,6758,6762,6777,6787,6841,6857,6861,6871,6877,6902,6920,6946,6954,6971,6981,7003,7004,7011,7012,7013,7059,7085,7105,7148,7157,7163,7167,7172,7180,7181,7182,7186,7187,7199,7201,7203,7226,7240,7259,7267,7269,7270,7272,7276,7287,7313,7318,7320,7352,7414,7420,7451,7453,7460,7516,7532,7545,7581,7599,7611,7634,7649,7701,7729,7731,7732,7733,7735,7739,7740,7741,7751,7752,7762,7867,7911,7912,7936,7942,7966,7972,7974,7976,7979,7984,7994,7995,8001,8002,8012,8014,8015,8016,8020,8022,8031,8035,8043,8050,8053,8058,8060,8074,8088,8097,8104,8113,8136,8174,8194,8218,8233,8242,8252,8253,8267,8279,8291,8306,8308,8309,8316,8354,8377,8411,8424,8425,8473,8566,8591,8593,8595,8596,8601,8604,8630,8697,8698,8725,8750,8766,8793,8795,8801,8802,8804,8830,8848,8923,8929,8934,9009,9020,9022,9024,9025,9066,9068,9069,9101,9104,9142,9201,9237,9267,9268,9275,9278,9279,9301,9303,9338,9384,9404,9409,9412,9418,9432,9433,9434,9435,9436,9503,9506,9551,9552,9600,9613,9616,9697,9719,9731,9735,9746,9765,9766,9769,9823,9837,9843,9882,9889,9956,9983,9984,
			// 2024/3/21
			1332,1414,1417,1605,1719,1721,1762,1812,1861,1885,1898,1909,1911,1925,1928,1930,1939,1959,1964,1973,2004,2154,2206,2212,2222,2282,2327,2354,2374,2415,2469,2501,2502,2585,2588,2607,2664,2669,2670,2674,2676,2685,2702,2726,2730,2733,2749,2751,2760,2768,2791,2801,2802,2805,2811,2875,2897,2914,2915,2932,3002,3003,3038,3048,3087,3092,3097,3099,3105,3107,3110,3132,3156,3197,3221,3231,3289,3382,3391,3395,3397,3436,3496,3498,3539,3549,3558,3569,3591,3692,3697,3741,3769,3773,3774,3778,3791,3798,3817,3843,3923,3941,3983,3993,4042,4043,4046,4062,4063,4088,4091,4095,4116,4180,4182,4183,4186,4188,4194,4202,4203,4204,4206,4249,4307,4310,4318,4323,4369,4373,4377,4413,4432,4434,4452,4502,4503,4507,4519,4523,4527,4543,4554,4568,4578,4617,4619,4626,4661,4665,4681,4684,4687,4689,4704,4709,4718,4732,4733,4743,4746,4765,4768,4812,4886,4901,4956,4966,4980,5011,5013,5018,5020,5021,5033,5105,5108,5161,5195,5201,5253,5334,5351,5352,5393,5401,5406,5585,5595,5706,5714,5715,5741,5802,5834,5838,5842,5844,5851,5901,5930,6023,6036,6055,6078,6088,6098,6113,6141,6146,6178,6201,6226,6228,6231,6254,6258,6269,6272,6273,6282,6294,6301,6315,6316,6323,6326,6328,6331,6332,6351,6358,6361,6363,6367,6368,6369,6371,6383,6390,6417,6418,6432,6436,6454,6458,6459,6463,6465,6479,6481,6490,6498,6501,6503,6504,6506,6507,6508,6525,6544,6547,6564,6592,6594,6617,6622,6645,6670,6677,6701,6702,6723,6728,6752,6754,6758,6762,6777,6814,6856,6857,6859,6861,6864,6871,6902,6905,6920,6946,6954,6971,6981,6988,7003,7004,7011,7014,7033,7038,7047,7059,7065,7088,7105,7148,7164,7172,7180,7182,7199,7201,7202,7203,7226,7229,7239,7241,7259,7261,7267,7269,7270,7278,7287,7292,7318,7342,7352,7388,7419,7420,7451,7453,7455,7460,7467,7532,7537,7545,7550,7552,7581,7611,7649,7721,7729,7730,7733,7735,7739,7740,7741,7744,7747,7751,7762,7817,7818,7832,7840,7867,7868,7871,7874,7911,7912,7931,7936,7944,7952,7966,7972,7974,7976,7979,7984,7994,7995,8001,8002,8007,8011,8014,8015,8020,8022,8031,8035,8050,8053,8056,8058,8060,8074,8081,8085,8101,8104,8113,8117,8136,8153,8174,8214,8218,8219,8227,8233,8252,8253,8267,8279,8291,8306,8316,8411,8424,8425,8473,8566,8584,8591,8593,8601,8604,8630,8697,8698,8725,8750,8766,8772,8793,8801,8802,8804,8830,8864,8897,8923,8934,9001,9009,9020,9022,9024,9039,9069,9072,9101,9104,9107,9119,9145,9201,9202,9248,9260,9267,9268,9302,9303,9404,9412,9418,9432,9433,9434,9435,9436,9551,9552,9605,9613,9616,9621,9697,9699,9701,9719,9735,9744,9765,9769,9787,9823,9828,9837,9842,9843,9861,9869,9880,9887,9889,9900,9956,9983,9984,
		};
		// skip   T0:23732,  T1:0.195, T2:10.2  #End#
		// noskip T0:116276, T1:0.256, T2:12.9  #End#
		private static readonly int[] OldAnd51List = new int[] {
			6335,6767,6559,7439,7215,6991,7855,6783,2580,1684,2806,1254,806,1686,134,2356,5696,1460,358,136,584,1236,1462,1480,3926,2132,360,790,788,808,1238,566,4765,3629,568,120,792,398,5641,8105,
			3197,342,7936,5645,3631,479,8323,5423,4287,6077,3671,7887,6079,8303,5685,7679,8135,8329,6093,8125,6105,8111,8127,8319,7903,4573,7037,5673,6103,5907,2747,6109,5909,3005,7919,6119,8378,
		};
		private static readonly int[] OldOr51List = new int[] {
			708,2322,1604,24,278,38,1202,4582,5026,3456,4907,6600,4558,6588,7266,3656,4308,4320,6112,6824,8352,1870,7046,6824,4094,6590,3014,6826,72,6826,4893,7706,78,3676,
		};
		private static readonly int[] Old2And51List = new int[7] {
			6130,2796,737,8046,8368,8344,51,
		};
		private static readonly int[] Old2Or51List = new int[14] {
			472,66,1977,2203,1618,7436,4954,2639,52,6717,6433,5059,2998,1069,
		};

		private static readonly int[] NotCond = new int[]{
			2,4,16,32,161,177,193,195,209,211,213,215,224,226,228,230,240,242,256,258,272,288,401,417,419,433,435,437,448,450,452,464,
			466,480,496,512,593,609,625,641,643,657,659,661,663,672,674,688,801,817,833,835,849,851,865,867,869,881,883,885,887,896,898,
			900,902,912,914,916,928,930,932,944,946,960,962,976,1073,1089,1105,1107,1120,1122,1124,1126,1136,1138,1152,1154,1168,1170,1184,
			1265,1281,1297,1299,1313,1315,1329,1331,1333,1335,1344,1346,1348,1360,1362,1376,1392,1408,1473,1489,1505,1507,1521,1523,1537,
			1539,1541,1553,1555,1557,1559,1568,1570,1584,1681,1697,1699,1713,1715,1729,1731,1733,1745,1747,1749,1761,1763,1765,1767,1777,
			1779,1781,1783,1792,1794,1796,1798,1808,1810,1812,1814,1824,1826,1828,1840,1842,1844,1856,1858,1872,1874,1969,1985,2001,2003,
			2016,2018,2020,2022,2032,2034,2036,2048,2050,2052,2064,2066,2080,2082,2096,2161,2177,2193,2209,2211,2225,2227,2229,2240,2242,
			2244,2246,2256,2258,2260,2272,2274,2288,2290,2304,2320,2369,2385,2401,2403,2417,2419,2433,2435,2437,2449,2451,2453,2455,2464,
			2466,2468,2480,2482,2496,2498,2512,2528,2577,2593,2609,2611,2625,2627,2629,2641,2643,2645,2657,2659,2661,2663,2673,2675,2677,
			2679,2688,2704,2801,2803,2817,2819,2833,2835,2837,2849,2851,2853,2865,2867,2869,2871,2881,2883,2885,2887,2897,2899,2901,2903,
			2905,2912,2914,2916,2918,2920,2928,2930,2932,2934,2936,2944,2946,2948,2950,2960,2962,2964,2966,2976,2978,2980,2992,2994,3008,
			3089,3105,3121,3136,3138,3140,3142,3144,3152,3154,3156,3158,3168,3170,3172,3174,3184,3186,3188,3190,3200,3202,3204,3216,3218,
			3232,3297,3313,3329,3331,3345,3347,3360,3362,3364,3366,3368,3376,3378,3380,3382,3392,3394,3396,3398,3408,3410,3412,3424,3426,
			3440,3442,3505,3521,3537,3539,3553,3555,3569,3571,3573,3584,3586,3588,3590,3600,3602,3604,3606,3616,3618,3620,3632,3634,3636,
			3648,3650,3664,3713,3729,3745,3747,3761,3763,3765,3777,3779,3781,3793,3795,3797,3799,3808,3810,3812,3814,3824,3826,3828,3840,
			3842,3844,3856,3858,3872,3874,3888,3921,3937,3953,3955,3969,3971,3973,3985,3987,3989,4001,4003,4005,4007,4017,4019,4021,4023,
			4032,4034,4036,4048,4050,4064,4066,4080,4096,4145,4147,4161,4163,4177,4179,4181,4193,4195,4197,4199,4209,4211,4213,4215,4225,
			4227,4229,4231,4241,4243,4245,4247,4249,4256,4369,4371,4373,4385,4387,4389,4391,4401,4403,4405,4407,4417,4419,4421,4423,4433,
			4435,4437,4439,4441,4449,4451,4453,4455,4457,4465,4467,4469,4471,4473,4475,4480,4482,4484,4486,4488,4490,4496,4498,4500,4502,
			4504,4512,4514,4516,4518,4520,4528,4530,4532,4534,4544,4546,4548,4550,4560,4562,4564,4566,4576,4578,4673,4689,4704,4706,4708,
			4710,4712,4714,4720,4722,4724,4726,4728,4736,4738,4740,4742,4744,4752,4754,4756,4758,4768,4770,4772,4774,4784,4786,4788,4800,
			4865,4881,4897,4899,4913,4915,4928,4930,4932,4934,4936,4944,4946,4948,4950,4952,4960,4962,4964,4966,4976,4978,4980,4982,4992,
			4994,4996,5008,5010,5024,5073,5089,5091,5105,5107,5121,5123,5125,5137,5139,5141,5152,5154,5156,5158,5160,5168,5170,5172,5174,
			5184,5186,5188,5190,5200,5202,5204,5216,5218,5220,5232,5234,5281,5297,5299,5313,5315,5329,5331,5333,5345,5347,5349,5351,5361,
			5363,5365,5367,5376,5378,5380,5382,5392,5394,5396,5398,5408,5410,5412,5424,5426,5428,5440,5442,5456,5489,5505,5507,5521,5523,
			5525,5537,5539,5541,5553,5555,5557,5559,5569,5571,5573,5575,5585,5587,5589,5591,5600,5602,5604,5606,5616,5618,5620,5632,5634,
			5636,5648,5650,5664,5680,5713,5715,5729,5731,5733,5745,5747,5749,5761,5763,5765,5767,5777,5779,5781,5783,5793,5795,5797,5799,
			5801,5809,5811,5813,5815,5817,5824,5826,5828,5840,5842,5856,5858,5872,5888,5937,5939,5941,5953,5955,5957,5969,5971,5973,5975,
			5985,5987,5989,5991,6001,6003,6005,6007,6009,6017,6019,6021,6023,6025,6033,6035,6037,6039,6041,6043,6048,6161,6163,6165,6167,
			6177,6179,6181,6183,6193,6195,6197,6199,6209,6211,6213,6215,6217,6225,6227,6229,6231,6233,6241,6243,6245,6247,6249,6251,6257,
			6259,6261,6263,6265,6267,6272,6274,6276,6278,6280,6282,6284,6288,6290,6292,6294,6296,6298,6304,6306,6308,6310,6312,6314,6320,
			6322,6324,6326,6328,6336,6338,6340,6342,6344,6352,6354,6356,6358,6368,6370,6372,6465,6481,6496,6498,6500,6502,6504,6506,6508,
			6512,6514,6516,6518,6520,6522,6528,6530,6532,6534,6536,6538,6544,6546,6548,6550,6552,6560,6562,6564,6566,6576,6578,6580,6582,
			6592,6594,6596,6657,6673,6689,6705,6707,6720,6722,6724,6726,6728,6730,6736,6738,6740,6742,6744,6746,6752,6754,6756,6758,6760,
			6768,6770,6772,6774,6776,6784,6786,6788,6790,6800,6802,6804,6806,6816,6818,6865,6881,6897,6899,6913,6915,6929,6931,6933,6944,
			6946,6948,6950,6952,6954,6960,6962,6964,6966,6968,6970,6976,6978,6980,6982,6984,6992,6994,6996,6998,7008,7010,7012,7014,7024,
			7026,7028,7040,7073,7089,7105,7107,7121,7123,7125,7137,7139,7141,7153,7155,7157,7159,7168,7170,7172,7174,7176,7178,7184,7186,
			7188,7190,7192,7200,7202,7204,7206,7208,7216,7218,7220,7222,7232,7234,7236,7238,7248,7250,7252,7264,7297,7313,7315,7329,7331,
			7333,7345,7347,7349,7361,7363,7365,7367,7377,7379,7381,7383,7392,7394,7396,7398,7400,7402,7408,7410,7412,7414,7416,7424,7426,
			7428,7430,7440,7442,7444,7446,7456,7458,7460,7472,7474,7505,7521,7523,7537,7539,7541,7553,7555,7557,7569,7571,7573,7575,7585,
			7587,7589,7591,7601,7603,7605,7607,7609,7616,7618,7620,7622,7624,7632,7634,7636,7638,7648,7650,7652,7654,7664,7666,7668,7680,
			7682,7684,7696,7729,7745,7747,7761,7763,7765,7777,7779,7781,7783,7793,7795,7797,7799,7809,7811,7813,7815,7817,7825,7827,7829,
			7831,7833,7840,7842,7844,7846,7848,7856,7858,7860,7862,7872,7874,7876,7878,7888,7890,7892,7904,7906,7920,7953,7955,7969,7971,
			7973,7985,7987,7989,7991,8001,8003,8005,8007,8017,8019,8021,8023,8033,8035,8037,8039,8041,8049,8051,8053,8055,8057,8059,8064,
			8066,8068,8070,8080,8082,8084,8096,8098,8112,8114,8128,8177,8179,8181,8193,8195,8197,8199,8209,8211,8213,8215,8225,8227,8229,
			8231,8233,8241,8243,8245,8247,8249,8257,8259,8261,8263,8265,8267,8273,8275,8277,8279,8281,8283,8288,8401,8403,8405,8407,8417,
			8419,8421,8423,8425,8433,8435,8437,8439,8441,8449,8451,8453,8455,8457,8459,8465,8467,8469,8471,8473,8475,8481,8483,8485,8487,
			8489,8491,8493,8497,8499,8501,8503,8505,8507,8509,
		};
		private static readonly int[] ConfirmAnds = new int[] {
			/* 旧設定
			6130, // Cond:6130, Score:4880.38, sT:52635, sP:3.1429, sB:0.7679, nT:163309, nP:3.7239, nB:0.7812
			2796, // Cond:2796, Score:4880.38, sT:52635, sP:3.1429, sB:0.7679, nT:163309, nP:3.7239, nB:0.7812
			737, // Cond:737, Score:4880.38, sT:52635, sP:3.1429, sB:0.7679, nT:163309, nP:3.7239, nB:0.7812
			8046, // Cond:8046, Score:4974.193, sT:56628, sP:3.1063, sB:0.7335, nT:175983, nP:3.6702, nB:0.728
			8368, // Cond:8354, Score:4880.38, sT:52635, sP:3.1429, sB:0.7679, nT:163309, nP:3.7239, nB:0.7812
			8344, // Cond:8344, Score:4880.38, sT:52635, sP:3.1429, sB:0.7679, nT:163309, nP:3.7239, nB:0.7812
			51,
			*/
			//AllTrueCondIdx, // 全部を許可するやつ 全スルーチェックとかOrのみチェック用
			6014,8414,1666,2101,182,4356,6823,206,3582,1664,4305,5015,6444,
		};
		private static readonly int[] ConfirmOrs = new int[] {
			/* 旧設定
			472,  // Cond:3444, Score:4839.551, sT:51450, sP:3.1411, sB:0.7736, nT:157219, nP:3.7187, nB:0.8079
			66,   // Cond:5904, Score:4707.361, sT:50150, sP:3.0857, sB:0.7569, nT:161393, nP:3.7145, nB:0.7789
			1977, // Cond:1977, Score:4864.97, sT:51332, sP:3.1188, sB:0.7739, nT:158137, nP:3.6953, nB:0.8106
			2203, // Cond:1083, Score:4876.456, sT:51314, sP:3.1596, sB:0.7885, nT:157830, nP:3.7373, nB:0.7994
			1618, // Cond:1602, Score:4847.739, sT:51510, sP:3.0996, sB:0.7727, nT:157259, nP:3.664, nB:0.7833
			7436, // Cond:8298, Score:4771.598, sT:51574, sP:3.0373, sB:0.745, nT:158351, nP:3.5353, nB:0.7652
			4954, // Cond:7642, Score:4878.302, sT:52784, sP:3.1533, sB:0.7683, nT:163227, nP:3.7368, nB:0.7798
			2639, // Cond:1083, Score:4863.172, sT:52714, sP:3.1514, sB:0.7662, nT:163416, nP:3.7414, nB:0.7782
			52,   // Cond:1424, Score:4813.474, sT:52168, sP:3.1161, sB:0.7588, nT:161722, nP:3.7236, nB:0.7772
			6717, // Cond:6717, Score:4880.38, sT:52635, sP:3.1429, sB:0.7679, nT:163309, nP:3.7239, nB:0.7812
			6433, // Cond:6433, Score:5031.917, sT:54780, sP:3.0866, sB:0.7562, nT:169701, nP:3.6544, nB:0.7707
			5059,
			2998,
			1069,
			*/
			//AllTrueCondIdx, // 全部を許可するやつ Andのみチェック用
			528,6625,2615,8203,3234,992,8296,8393,4762,6151,3012,3456,1939,5612,4806,7910,2086,
			8165,7995,2280,6096,7787,4100,3359,8031,6068,2147,2738,7077,7979,6905,24,

/*
LowScoreRank , T0:False , T1:0 , T2:32 , T3:
96, //Score:8729305.3968455, Beny:【Be1】And:6014,Or:-1,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
8371, //Score:8490299.19320836, Beny:【Be1】And:6014,Or:-1,DAll:-151136,Sum:151136,Sub:8490299.19320836,Sub2:4318,SB:0.3224,0:-2486(0.016),1:-20644(0.137),2:-27275(0.18),3:-12949(0.086),4:-37584(0.249),5:-50198(0.332),, 【Be2】2486,20644,27275,12949,37584,50198, , isAndC:False, sT:26944, sP:7.3194, sB:0.3224, nT:151136, nP:10.3077, nB:0.3343,
544, //Score:8442336.19184688, Beny:【Be1】And:6014,Or:-1,DAll:-236925,Sum:236925,Sub:8442336.19184688,Sub2:3937,SB:0.2205,0:-4528(0.019),1:-31725(0.134),2:-47559(0.201),3:-22261(0.094),4:-47762(0.202),5:-83090(0.351),, 【Be2】4528,31725,47559,22261,47762,83090, , isAndC:False, sT:55334, sP:6.766, sB:0.2205, nT:236925, nP:8.6582, nB:0.2363,
6133, //Score:8368016.65106104, Beny:【Be1】And:6014,Or:-1,DAll:-165818,Sum:165818,Sub:8368016.65106104,Sub2:4095,SB:0.3082,0:-2716(0.016),1:-22730(0.137),2:-30764(0.186),3:-14662(0.088),4:-40497(0.244),5:-54449(0.328),, 【Be2】2716,22730,30764,14662,40497,54449, , isAndC:False, sT:30535, sP:7.3461, sB:0.3082, nT:165818, nP:10.1409, nB:0.2845,
8373, //Score:8348529.16051795, Beny:【Be1】And:6014,Or:-1,DAll:-107896,Sum:107896,Sub:8348529.16051795,Sub2:4713,SB:0.4136,0:-1722(0.016),1:-13869(0.129),2:-19714(0.183),3:-9981(0.093),4:-26001(0.241),5:-36609(0.339),, 【Be2】1722,13869,19714,9981,26001,36609, , isAndC:False, sT:21903, sP:6.9656, sB:0.4136, nT:107896, nP:10.0274, nB:0.4279,
322, //Score:8261394.69348019, Beny:【Be1】And:6014,Or:-1,DAll:-154137,Sum:154137,Sub:8261394.69348019,Sub2:4474,SB:0.283,0:-2835(0.018),1:-19544(0.127),2:-31223(0.203),3:-15027(0.097),4:-29588(0.192),5:-55920(0.363),, 【Be2】2835,19544,31223,15027,29588,55920, , isAndC:False, sT:43987, sP:6.9422, sB:0.283, nT:154137, nP:8.2298, nB:0.3406,
8375, //Score:8247260.42944439, Beny:【Be1】And:6014,Or:-1,DAll:-94367,Sum:94367,Sub:8247260.42944439,Sub2:4899,SB:0.4497,0:-1450(0.015),1:-11950(0.127),2:-17559(0.186),3:-9013(0.096),4:-21722(0.23),5:-32673(0.346),, 【Be2】1450,11950,17559,9013,21722,32673, , isAndC:False, sT:20368, sP:6.7709, sB:0.4497, nT:94367, nP:9.6196, nB:0.4634,  #End#
LowScoreRank , T0:False , T1:1 , T2:32 , T3:
96, //Score:8558736.85344683, Beny:【Be1】And:8414,Or:-1,DAll:-245953,Sum:245953,Sub:8558736.85344683,Sub2:3600,SB:0.2581,0:-4859(0.02),1:-33606(0.137),2:-49806(0.203),3:-23034(0.094),4:-49778(0.202),5:-84870(0.345),, 【Be2】4859,33606,49806,23034,49778,84870, , isAndC:False, sT:61925, sP:6.7722, sB:0.2581, nT:245953, nP:8.7255, nB:0.1746,
544, //Score:8193355.61216188, Beny:【Be1】And:8414,Or:-1,DAll:-247047,Sum:247047,Sub:8193355.61216188,Sub2:3834,SB:0.207,0:-4734(0.019),1:-33359(0.135),2:-49704(0.201),3:-23110(0.094),4:-50096(0.203),5:-86044(0.348),, 【Be2】4734,33359,49704,23110,50096,86044, , isAndC:False, sT:57091, sP:6.8055, sB:0.207, nT:247047, nP:8.7168, nB:0.2143,
322, //Score:8097857.45817595, Beny:【Be1】And:8414,Or:-1,DAll:-160404,Sum:160404,Sub:8097857.45817595,Sub2:4364,SB:0.2707,0:-2947(0.018),1:-20548(0.128),2:-32574(0.203),3:-15580(0.097),4:-31008(0.193),5:-57747(0.36),, 【Be2】2947,20548,32574,15580,31008,57747, , isAndC:False, sT:45330, sP:6.9901, sB:0.2707, nT:160404, nP:8.3052, nB:0.3158,
1216, //Score:7964300.86032336, Beny:【Be1】And:8414,Or:-1,DAll:-173352,Sum:173352,Sub:7964300.86032336,Sub2:4352,SB:0.2406,0:-3247(0.019),1:-22489(0.13),2:-34619(0.2),3:-16622(0.096),4:-33824(0.195),5:-62551(0.361),, 【Be2】3247,22489,34619,16622,33824,62551, , isAndC:False, sT:43202, sP:6.8015, sB:0.2406, nT:173352, nP:8.4007, nB:0.3212,
8373, //Score:7960557.27682424, Beny:【Be1】And:8414,Or:-1,DAll:-116878,Sum:116878,Sub:7960557.27682424,Sub2:4438,SB:0.3803,0:-1854(0.016),1:-15486(0.132),2:-21538(0.184),3:-10727(0.092),4:-28244(0.242),5:-39029(0.334),, 【Be2】1854,15486,21538,10727,28244,39029, , isAndC:False, sT:23039, sP:7.0534, sB:0.3803, nT:116878, nP:10.1135, nB:0.364,
6133, //Score:7912420.38818161, Beny:【Be1】And:8414,Or:-1,DAll:-177105,Sum:177105,Sub:7912420.38818161,Sub2:3916,SB:0.2758,0:-2891(0.016),1:-24705(0.139),2:-33132(0.187),3:-15618(0.088),4:-43148(0.244),5:-57611(0.325),, 【Be2】2891,24705,33132,15618,43148,57611, , isAndC:False, sT:32020, sP:7.3965, sB:0.2758, nT:177105, nP:10.1696, nB:0.2421,
8371, //Score:7867147.92096752, Beny:【Be1】And:8414,Or:-1,DAll:-162502,Sum:162502,Sub:7867147.92096752,Sub2:4084,SB:0.2806,0:-2697(0.017),1:-22651(0.139),2:-29584(0.182),3:-13866(0.085),4:-40343(0.248),5:-53361(0.328),, 【Be2】2697,22651,29584,13866,40343,53361, , isAndC:False, sT:28351, sP:7.3819, sB:0.2806, nT:162502, nP:10.3399, nB:0.2836,  #End#
LowScoreRank , T0:False , T1:2 , T2:32 , T3:
322, //Score:8199222.46493098, Beny:【Be1】And:1666,Or:-1,DAll:-158078,Sum:158078,Sub:8199222.46493098,Sub2:4480,SB:0.2697,0:-2877(0.018),1:-19982(0.126),2:-32209(0.204),3:-15540(0.098),4:-30125(0.191),5:-57345(0.363),, 【Be2】2877,19982,32209,15540,30125,57345, , isAndC:False, sT:44585, sP:6.9014, sB:0.2697, nT:158078, nP:8.1824, nB:0.3384,
1216, //Score:8085343.43845399, Beny:【Be1】And:1666,Or:-1,DAll:-170791,Sum:170791,Sub:8085343.43845399,Sub2:4468,SB:0.241,0:-3159(0.018),1:-21896(0.128),2:-34247(0.201),3:-16575(0.097),4:-32812(0.192),5:-62102(0.364),, 【Be2】3159,21896,34247,16575,32812,62102, , isAndC:False, sT:42582, sP:6.7231, sB:0.241, nT:170791, nP:8.2834, nB:0.3415,
544, //Score:8081984.06961419, Beny:【Be1】And:1666,Or:-1,DAll:-245575,Sum:245575,Sub:8081984.06961419,Sub2:3937,SB:0.1932,0:-4647(0.019),1:-32866(0.134),2:-49463(0.201),3:-23233(0.095),4:-49315(0.201),5:-86051(0.35),, 【Be2】4647,32866,49463,23233,49315,86051, , isAndC:False, sT:56515, sP:6.7432, sB:0.1932, nT:245575, nP:8.6403, nB:0.232,
8375, //Score:8049484.30931452, Beny:【Be1】And:1666,Or:-1,DAll:-103084,Sum:103084,Sub:8049484.30931452,Sub2:4839,SB:0.3926,0:-1546(0.015),1:-13097(0.127),2:-19333(0.188),3:-9900(0.096),4:-23796(0.231),5:-35412(0.344),, 【Be2】1546,13097,19333,9900,23796,35412, , isAndC:False, sT:21194, sP:6.7167, sB:0.3926, nT:103084, nP:9.6403, nB:0.4427,
8373, //Score:8007553.63838124, Beny:【Be1】And:1666,Or:-1,DAll:-118143,Sum:118143,Sub:8007553.63838124,Sub2:4647,SB:0.3484,0:-1849(0.016),1:-15247(0.129),2:-21752(0.184),3:-10972(0.093),4:-28548(0.242),5:-39775(0.337),, 【Be2】1849,15247,21752,10972,28548,39775, , isAndC:False, sT:22763, sP:6.9365, sB:0.3484, nT:118143, nP:10.0419, nB:0.4069,
320, //Score:7911411.25930341, Beny:【Be1】And:1666,Or:-1,DAll:-92985,Sum:92985,Sub:7911411.25930341,Sub2:5058,SB:0.3954,0:-1649(0.018),1:-10997(0.118),2:-19175(0.206),3:-9802(0.105),4:-16082(0.173),5:-35280(0.379),, 【Be2】1649,10997,19175,9802,16082,35280, , isAndC:False, sT:32461, sP:6.7865, sB:0.3954, nT:92985, nP:7.4775, nB:0.4767,
8371, //Score:7895596.6933121, Beny:【Be1】And:1666,Or:-1,DAll:-165658,Sum:165658,Sub:7895596.6933121,Sub2:4225,SB:0.2591,0:-2689(0.016),1:-22768(0.137),2:-30162(0.182),3:-14246(0.086),4:-41187(0.249),5:-54606(0.33),, 【Be2】2689,22768,30162,14246,41187,54606, , isAndC:False, sT:28074, sP:7.269, sB:0.2591, nT:165658, nP:10.3191, nB:0.3098,  #End#
LowScoreRank , T0:False , T1:3 , T2:32 , T3:
96, //Score:8098976.40157742, Beny:【Be1】And:2101,Or:-1,DAll:-243048,Sum:243048,Sub:8098976.40157742,Sub2:3594,SB:0.2384,0:-4934(0.02),1:-32901(0.135),2:-49455(0.203),3:-23143(0.095),4:-48092(0.198),5:-84523(0.348),, 【Be2】4934,32901,49455,23143,48092,84523, , isAndC:False, sT:62134, sP:6.5687, sB:0.2384, nT:243048, nP:8.5002, nB:0.1886,
8371, //Score:7836940.44583278, Beny:【Be1】And:2101,Or:-1,DAll:-156967,Sum:156967,Sub:7836940.44583278,Sub2:4183,SB:0.2839,0:-2714(0.017),1:-21369(0.136),2:-28694(0.183),3:-13745(0.088),4:-38089(0.243),5:-52356(0.334),, 【Be2】2714,21369,28694,13745,38089,52356, , isAndC:False, sT:28764, sP:6.9796, sB:0.2839, nT:156967, nP:10.0279, nB:0.3258,
6133, //Score:7782686.86608062, Beny:【Be1】And:2101,Or:-1,DAll:-171646,Sum:171646,Sub:7782686.86608062,Sub2:3979,SB:0.2745,0:-2944(0.017),1:-23455(0.137),2:-32183(0.187),3:-15458(0.09),4:-41001(0.239),5:-56605(0.33),, 【Be2】2944,23455,32183,15458,41001,56605, , isAndC:False, sT:32356, sP:7.0423, sB:0.2745, nT:171646, nP:9.8907, nB:0.2783,
544, //Score:7666893.53891572, Beny:【Be1】And:2101,Or:-1,DAll:-244378,Sum:244378,Sub:7666893.53891572,Sub2:3820,SB:0.1875,0:-4810(0.02),1:-32711(0.134),2:-49444(0.202),3:-23272(0.095),4:-48399(0.198),5:-85742(0.351),, 【Be2】4810,32711,49444,23272,48399,85742, , isAndC:False, sT:57388, sP:6.595, sB:0.1875, nT:244378, nP:8.4885, nB:0.2261,
8373, //Score:7597821.17049418, Beny:【Be1】And:2101,Or:-1,DAll:-113724,Sum:113724,Sub:7597821.17049418,Sub2:4507,SB:0.3579,0:-1950(0.017),1:-14594(0.128),2:-21133(0.186),3:-10777(0.095),4:-26505(0.233),5:-38765(0.341),, 【Be2】1950,14594,21133,10777,26505,38765, , isAndC:False, sT:23727, sP:6.5801, sB:0.3579, nT:113724, nP:9.6556, nB:0.4113,
6139, //Score:7557274.09318239, Beny:【Be1】And:2101,Or:-1,DAll:-156081,Sum:156081,Sub:7557274.09318239,Sub2:4304,SB:0.2561,0:-2596(0.017),1:-20861(0.134),2:-30111(0.193),3:-14655(0.094),4:-34080(0.218),5:-53778(0.345),, 【Be2】2596,20861,30111,14655,34080,53778, , isAndC:False, sT:31027, sP:6.6564, sB:0.2561, nT:156081, nP:9.2419, nB:0.3158,
8365, //Score:7538732.03737007, Beny:【Be1】And:2101,Or:-1,DAll:-215836,Sum:215836,Sub:7538732.03737007,Sub2:4179,SB:0.1747,0:-3729(0.017),1:-29259(0.136),2:-40716(0.189),3:-18781(0.087),4:-50488(0.234),5:-72863(0.338),, 【Be2】3729,29259,40716,18781,50488,72863, , isAndC:False, sT:36972, sP:6.9088, sB:0.1747, nT:215836, nP:9.6914, nB:0.2942,  #End#
LowScoreRank , T0:False , T1:4 , T2:32 , T3:
96, //Score:8686077.00593913, Beny:【Be1】And:182,Or:-1,DAll:-235953,Sum:235953,Sub:8686077.00593913,Sub2:3700,SB:0.2663,0:-4659(0.02),1:-31967(0.135),2:-47673(0.202),3:-22191(0.094),4:-47474(0.201),5:-81989(0.347),, 【Be2】4659,31967,47673,22191,47474,81989, , isAndC:False, sT:60044, sP:6.7301, sB:0.2663, nT:235953, nP:8.6639, nB:0.1965,
8371, //Score:8424712.32936733, Beny:【Be1】And:182,Or:-1,DAll:-151233,Sum:151233,Sub:8424712.32936733,Sub2:4308,SB:0.3187,0:-2496(0.017),1:-20661(0.137),2:-27299(0.181),3:-12963(0.086),4:-37586(0.249),5:-50228(0.332),, 【Be2】2496,20661,27299,12963,37586,50228, , isAndC:False, sT:26965, sP:7.3152, sB:0.3187, nT:151233, nP:10.3024, nB:0.3331,
544, //Score:8406112.2312178, Beny:【Be1】And:182,Or:-1,DAll:-237022,Sum:237022,Sub:8406112.2312178,Sub2:3931,SB:0.2192,0:-4538(0.019),1:-31742(0.134),2:-47583(0.201),3:-22275(0.094),4:-47764(0.202),5:-83120(0.351),, 【Be2】4538,31742,47583,22275,47764,83120, , isAndC:False, sT:55354, sP:6.7643, sB:0.2192, nT:237022, nP:8.6555, nB:0.2356,
6133, //Score:8308779.9687679, Beny:【Be1】And:182,Or:-1,DAll:-165915,Sum:165915,Sub:8308779.9687679,Sub2:4086,SB:0.305,0:-2726(0.016),1:-22747(0.137),2:-30788(0.186),3:-14676(0.088),4:-40499(0.244),5:-54479(0.328),, 【Be2】2726,22747,30788,14676,40499,54479, , isAndC:False, sT:30556, sP:7.3424, sB:0.305, nT:165915, nP:10.1362, nB:0.2834,
8373, //Score:8280700.79983673, Beny:【Be1】And:182,Or:-1,DAll:-107993,Sum:107993,Sub:8280700.79983673,Sub2:4699,SB:0.409,0:-1732(0.016),1:-13886(0.129),2:-19738(0.183),3:-9995(0.093),4:-26003(0.241),5:-36639(0.339),, 【Be2】1732,13886,19738,9995,26003,36639, , isAndC:False, sT:21924, sP:6.9607, sB:0.409, nT:107993, nP:10.0202, nB:0.4262,
322, //Score:8208316.5681122, Beny:【Be1】And:182,Or:-1,DAll:-154234,Sum:154234,Sub:8208316.5681122,Sub2:4464,SB:0.2804,0:-2845(0.018),1:-19561(0.127),2:-31247(0.203),3:-15041(0.098),4:-29590(0.192),5:-55950(0.363),, 【Be2】2845,19561,31247,15041,29590,55950, , isAndC:False, sT:44005, sP:6.9403, sB:0.2804, nT:154234, nP:8.2259, nB:0.3395,
8375, //Score:8178115.42286682, Beny:【Be1】And:182,Or:-1,DAll:-94464,Sum:94464,Sub:8178115.42286682,Sub2:4882,SB:0.4447,0:-1460(0.015),1:-11967(0.127),2:-17583(0.186),3:-9027(0.096),4:-21724(0.23),5:-32703(0.346),, 【Be2】1460,11967,17583,9027,21724,32703, , isAndC:False, sT:20389, sP:6.7659, sB:0.4447, nT:94464, nP:9.6119, nB:0.4615,  #End#
LowScoreRank , T0:False , T1:5 , T2:32 , T3:
96, //Score:8672296.5945507, Beny:【Be1】And:4356,Or:-1,DAll:-237140,Sum:237140,Sub:8672296.5945507,Sub2:3702,SB:0.2634,0:-4659(0.02),1:-32121(0.135),2:-47973(0.202),3:-22300(0.094),4:-47769(0.201),5:-82318(0.347),, 【Be2】4659,32121,47973,22300,47769,82318, , isAndC:False, sT:60222, sP:6.7327, sB:0.2634, nT:237140, nP:8.6691, nB:0.1953,
8371, //Score:8467685.44213205, Beny:【Be1】And:4356,Or:-1,DAll:-152266,Sum:152266,Sub:8467685.44213205,Sub2:4309,SB:0.3189,0:-2494(0.016),1:-20808(0.137),2:-27513(0.181),3:-13055(0.086),4:-37897(0.249),5:-50499(0.332),, 【Be2】2494,20808,27513,13055,37897,50499, , isAndC:False, sT:27064, sP:7.3166, sB:0.3189, nT:152266, nP:10.3066, nB:0.3317,
544, //Score:8351747.78675969, Beny:【Be1】And:4356,Or:-1,DAll:-238131,Sum:238131,Sub:8351747.78675969,Sub2:3930,SB:0.2151,0:-4537(0.019),1:-31892(0.134),2:-47868(0.201),3:-22381(0.094),4:-48033(0.202),5:-83420(0.35),, 【Be2】4537,31892,47868,22381,48033,83420, , isAndC:False, sT:55526, sP:6.7694, sB:0.2151, nT:238131, nP:8.6601, nB:0.2338,
8373, //Score:8342027.38427294, Beny:【Be1】And:4356,Or:-1,DAll:-108758,Sum:108758,Sub:8342027.38427294,Sub2:4708,SB:0.4096,0:-1727(0.016),1:-13978(0.129),2:-19902(0.183),3:-10062(0.093),4:-26245(0.241),5:-36844(0.339),, 【Be2】1727,13978,19902,10062,26245,36844, , isAndC:False, sT:21992, sP:6.966, sB:0.4096, nT:108758, nP:10.03, nB:0.4256,
6133, //Score:8307853.22473968, Beny:【Be1】And:4356,Or:-1,DAll:-167301,Sum:167301,Sub:8307853.22473968,Sub2:4084,SB:0.3019,0:-2725(0.016),1:-22962(0.137),2:-31083(0.186),3:-14802(0.088),4:-40876(0.244),5:-54853(0.328),, 【Be2】2725,22962,31083,14802,40876,54853, , isAndC:False, sT:30681, sP:7.3451, sB:0.3019, nT:167301, nP:10.1373, nB:0.281,
8375, //Score:8226705.14370646, Beny:【Be1】And:4356,Or:-1,DAll:-95148,Sum:95148,Sub:8226705.14370646,Sub2:4891,SB:0.4441,0:-1454(0.015),1:-12045(0.127),2:-17739(0.186),3:-9086(0.095),4:-21942(0.231),5:-32882(0.346),, 【Be2】1454,12045,17739,9086,21942,32882, , isAndC:False, sT:20457, sP:6.7684, sB:0.4441, nT:95148, nP:9.6233, nB:0.4604,
322, //Score:8219853.11596278, Beny:【Be1】And:4356,Or:-1,DAll:-154727,Sum:154727,Sub:8219853.11596278,Sub2:4469,SB:0.2795,0:-2841(0.018),1:-19617(0.127),2:-31383(0.203),3:-15084(0.097),4:-29707(0.192),5:-56095(0.363),, 【Be2】2841,19617,31383,15084,29707,56095, , isAndC:False, sT:44082, sP:6.9412, sB:0.2795, nT:154727, nP:8.2308, nB:0.3387,  #End#
LowScoreRank , T0:False , T1:6 , T2:32 , T3:
96, //Score:8639158.69641529, Beny:【Be1】And:6823,Or:-1,DAll:-238783,Sum:238783,Sub:8639158.69641529,Sub2:3696,SB:0.2604,0:-4716(0.02),1:-32421(0.136),2:-48288(0.202),3:-22452(0.094),4:-47794(0.2),5:-83112(0.348),, 【Be2】4716,32421,48288,22452,47794,83112, , isAndC:False, sT:60664, sP:6.7012, sB:0.2604, nT:238783, nP:8.6379, nB:0.1957,
544, //Score:8277330.88698123, Beny:【Be1】And:6823,Or:-1,DAll:-239844,Sum:239844,Sub:8277330.88698123,Sub2:3923,SB:0.2105,0:-4596(0.019),1:-32190(0.134),2:-48209(0.201),3:-22529(0.094),4:-48084(0.2),5:-84236(0.351),, 【Be2】4596,32190,48209,22529,48084,84236, , isAndC:False, sT:55967, sP:6.7328, sB:0.2105, nT:239844, nP:8.6295, nB:0.2342,
8371, //Score:8211123.51287216, Beny:【Be1】And:6823,Or:-1,DAll:-153661,Sum:153661,Sub:8211123.51287216,Sub2:4296,SB:0.2992,0:-2549(0.017),1:-21049(0.137),2:-27806(0.181),3:-13181(0.086),4:-37861(0.246),5:-51215(0.333),, 【Be2】2549,21049,27806,13181,37861,51215, , isAndC:False, sT:27513, sP:7.2531, sB:0.2992, nT:153661, nP:10.2438, nB:0.3309,
6133, //Score:8196662.39338418, Beny:【Be1】And:6823,Or:-1,DAll:-168303,Sum:168303,Sub:8196662.39338418,Sub2:4078,SB:0.2934,0:-2777(0.017),1:-23135(0.137),2:-31282(0.186),3:-14895(0.089),4:-40764(0.242),5:-55450(0.329),, 【Be2】2777,23135,31282,14895,40764,55450, , isAndC:False, sT:31100, sP:7.2859, sB:0.2934, nT:168303, nP:10.0845, nB:0.2821,
322, //Score:8134435.5958725, Beny:【Be1】And:6823,Or:-1,DAll:-156870,Sum:156870,Sub:8134435.5958725,Sub2:4451,SB:0.2716,0:-2897(0.018),1:-19975(0.127),2:-31823(0.203),3:-15281(0.097),4:-29880(0.19),5:-57014(0.363),, 【Be2】2897,19975,31823,15281,29880,57014, , isAndC:False, sT:44609, sP:6.9013, sB:0.2716, nT:156870, nP:8.1948, nB:0.3367,
8373, //Score:8125738.4658564, Beny:【Be1】And:6823,Or:-1,DAll:-110312,Sum:110312,Sub:8125738.4658564,Sub2:4677,SB:0.3882,0:-1783(0.016),1:-14252(0.129),2:-20224(0.183),3:-10213(0.093),4:-26245(0.238),5:-37595(0.341),, 【Be2】1783,14252,20224,10213,26245,37595, , isAndC:False, sT:22463, sP:6.8934, sB:0.3882, nT:110312, nP:9.9434, nB:0.4218,
1216, //Score:8051733.48946711, Beny:【Be1】And:6823,Or:-1,DAll:-169247,Sum:169247,Sub:8051733.48946711,Sub2:4443,SB:0.2446,0:-3178(0.019),1:-21828(0.129),2:-33787(0.2),3:-16289(0.096),4:-32499(0.192),5:-61666(0.364),, 【Be2】3178,21828,33787,16289,32499,61666, , isAndC:False, sT:42543, sP:6.7148, sB:0.2446, nT:169247, nP:8.2925, nB:0.3413,  #End#
LowScoreRank , T0:False , T1:7 , T2:32 , T3:
96, //Score:8729652.84828205, Beny:【Be1】And:206,Or:-1,DAll:-235858,Sum:235858,Sub:8729652.84828205,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47473(0.201),5:-81960(0.347),, 【Be2】4649,31950,47649,22177,47473,81960, , isAndC:False, sT:60028, sP:6.7313, sB:0.2682, nT:235858, nP:8.6665, nB:0.1972,
8371, //Score:8492073.21337978, Beny:【Be1】And:206,Or:-1,DAll:-151138,Sum:151138,Sub:8492073.21337978,Sub2:4318,SB:0.3225,0:-2486(0.016),1:-20644(0.137),2:-27275(0.18),3:-12949(0.086),4:-37585(0.249),5:-50199(0.332),, 【Be2】2486,20644,27275,12949,37585,50199, , isAndC:False, sT:26945, sP:7.3193, sB:0.3225, nT:151138, nP:10.3076, nB:0.3343,
544, //Score:8442648.36306881, Beny:【Be1】And:206,Or:-1,DAll:-236927,Sum:236927,Sub:8442648.36306881,Sub2:3937,SB:0.2205,0:-4528(0.019),1:-31725(0.134),2:-47559(0.201),3:-22261(0.094),4:-47763(0.202),5:-83091(0.351),, 【Be2】4528,31725,47559,22261,47763,83091, , isAndC:False, sT:55335, sP:6.7659, sB:0.2205, nT:236927, nP:8.6582, nB:0.2363,
6133, //Score:8369808.78867916, Beny:【Be1】And:206,Or:-1,DAll:-165820,Sum:165820,Sub:8369808.78867916,Sub2:4095,SB:0.3083,0:-2716(0.016),1:-22730(0.137),2:-30764(0.186),3:-14662(0.088),4:-40498(0.244),5:-54450(0.328),, 【Be2】2716,22730,30764,14662,40498,54450, , isAndC:False, sT:30536, sP:7.346, sB:0.3083, nT:165820, nP:10.1408, nB:0.2845,
8373, //Score:8350092.64080625, Beny:【Be1】And:206,Or:-1,DAll:-107898,Sum:107898,Sub:8350092.64080625,Sub2:4713,SB:0.4137,0:-1722(0.016),1:-13869(0.129),2:-19714(0.183),3:-9981(0.093),4:-26002(0.241),5:-36610(0.339),, 【Be2】1722,13869,19714,9981,26002,36610, , isAndC:False, sT:21904, sP:6.9654, sB:0.4137, nT:107898, nP:10.0272, nB:0.428,
322, //Score:8263271.48039854, Beny:【Be1】And:206,Or:-1,DAll:-154139,Sum:154139,Sub:8263271.48039854,Sub2:4474,SB:0.2831,0:-2835(0.018),1:-19544(0.127),2:-31223(0.203),3:-15027(0.097),4:-29589(0.192),5:-55921(0.363),, 【Be2】2835,19544,31223,15027,29589,55921, , isAndC:False, sT:43988, sP:6.9421, sB:0.2831, nT:154139, nP:8.2297, nB:0.3407,
8375, //Score:8248781.76683917, Beny:【Be1】And:206,Or:-1,DAll:-94369,Sum:94369,Sub:8248781.76683917,Sub2:4899,SB:0.4498,0:-1450(0.015),1:-11950(0.127),2:-17559(0.186),3:-9013(0.096),4:-21723(0.23),5:-32674(0.346),, 【Be2】1450,11950,17559,9013,21723,32674, , isAndC:False, sT:20369, sP:6.7707, sB:0.4498, nT:94369, nP:9.6194, nB:0.4635,  #End#
LowScoreRank , T0:False , T1:8 , T2:32 , T3:
96, //Score:8729305.3968455, Beny:【Be1】And:3582,Or:-1,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
8371, //Score:8490299.19320836, Beny:【Be1】And:3582,Or:-1,DAll:-151136,Sum:151136,Sub:8490299.19320836,Sub2:4318,SB:0.3224,0:-2486(0.016),1:-20644(0.137),2:-27275(0.18),3:-12949(0.086),4:-37584(0.249),5:-50198(0.332),, 【Be2】2486,20644,27275,12949,37584,50198, , isAndC:False, sT:26944, sP:7.3194, sB:0.3224, nT:151136, nP:10.3077, nB:0.3343,
544, //Score:8442336.19184688, Beny:【Be1】And:3582,Or:-1,DAll:-236925,Sum:236925,Sub:8442336.19184688,Sub2:3937,SB:0.2205,0:-4528(0.019),1:-31725(0.134),2:-47559(0.201),3:-22261(0.094),4:-47762(0.202),5:-83090(0.351),, 【Be2】4528,31725,47559,22261,47762,83090, , isAndC:False, sT:55334, sP:6.766, sB:0.2205, nT:236925, nP:8.6582, nB:0.2363,
6133, //Score:8368016.65106104, Beny:【Be1】And:3582,Or:-1,DAll:-165818,Sum:165818,Sub:8368016.65106104,Sub2:4095,SB:0.3082,0:-2716(0.016),1:-22730(0.137),2:-30764(0.186),3:-14662(0.088),4:-40497(0.244),5:-54449(0.328),, 【Be2】2716,22730,30764,14662,40497,54449, , isAndC:False, sT:30535, sP:7.3461, sB:0.3082, nT:165818, nP:10.1409, nB:0.2845,
8373, //Score:8348529.16051795, Beny:【Be1】And:3582,Or:-1,DAll:-107896,Sum:107896,Sub:8348529.16051795,Sub2:4713,SB:0.4136,0:-1722(0.016),1:-13869(0.129),2:-19714(0.183),3:-9981(0.093),4:-26001(0.241),5:-36609(0.339),, 【Be2】1722,13869,19714,9981,26001,36609, , isAndC:False, sT:21903, sP:6.9656, sB:0.4136, nT:107896, nP:10.0274, nB:0.4279,
322, //Score:8261394.69348019, Beny:【Be1】And:3582,Or:-1,DAll:-154137,Sum:154137,Sub:8261394.69348019,Sub2:4474,SB:0.283,0:-2835(0.018),1:-19544(0.127),2:-31223(0.203),3:-15027(0.097),4:-29588(0.192),5:-55920(0.363),, 【Be2】2835,19544,31223,15027,29588,55920, , isAndC:False, sT:43987, sP:6.9422, sB:0.283, nT:154137, nP:8.2298, nB:0.3406,
8375, //Score:8247260.42944439, Beny:【Be1】And:3582,Or:-1,DAll:-94367,Sum:94367,Sub:8247260.42944439,Sub2:4899,SB:0.4497,0:-1450(0.015),1:-11950(0.127),2:-17559(0.186),3:-9013(0.096),4:-21722(0.23),5:-32673(0.346),, 【Be2】1450,11950,17559,9013,21722,32673, , isAndC:False, sT:20368, sP:6.7709, sB:0.4497, nT:94367, nP:9.6196, nB:0.4634,  #End#
LowScoreRank , T0:False , T1:9 , T2:32 , T3:
96, //Score:8708575.92805109, Beny:【Be1】And:1664,Or:-1,DAll:-236471,Sum:236471,Sub:8708575.92805109,Sub2:3705,SB:0.2663,0:-4663(0.02),1:-32018(0.135),2:-47801(0.202),3:-22257(0.094),4:-47552(0.201),5:-82180(0.348),, 【Be2】4663,32018,47801,22257,47552,82180, , isAndC:False, sT:60115, sP:6.7267, sB:0.2663, nT:236471, nP:8.6582, nB:0.1969,
544, //Score:8451087.63216591, Beny:【Be1】And:1664,Or:-1,DAll:-237540,Sum:237540,Sub:8451087.63216591,Sub2:3935,SB:0.2205,0:-4542(0.019),1:-31793(0.134),2:-47711(0.201),3:-22341(0.094),4:-47842(0.201),5:-83311(0.351),, 【Be2】4542,31793,47711,22341,47842,83311, , isAndC:False, sT:55423, sP:6.7611, sB:0.2205, nT:237540, nP:8.6499, nB:0.2359,
8371, //Score:8409325.17482932, Beny:【Be1】And:1664,Or:-1,DAll:-152814,Sum:152814,Sub:8409325.17482932,Sub2:4290,SB:0.316,0:-2521(0.016),1:-20888(0.137),2:-27647(0.181),3:-13116(0.086),4:-37936(0.248),5:-50706(0.332),, 【Be2】2521,20888,27647,13116,37936,50706, , isAndC:False, sT:27084, sP:7.3081, sB:0.316, nT:152814, nP:10.2949, nB:0.3283,
6133, //Score:8362647.66662224, Beny:【Be1】And:1664,Or:-1,DAll:-167694,Sum:167694,Sub:8362647.66662224,Sub2:4065,SB:0.308,0:-2762(0.016),1:-22973(0.137),2:-31209(0.186),3:-14858(0.089),4:-40887(0.244),5:-55005(0.328),, 【Be2】2762,22973,31209,14858,40887,55005, , isAndC:False, sT:30696, sP:7.3316, sB:0.308, nT:167694, nP:10.1273, nB:0.2785,
8373, //Score:8316306.30034656, Beny:【Be1】And:1664,Or:-1,DAll:-109175,Sum:109175,Sub:8316306.30034656,Sub2:4682,SB:0.4098,0:-1750(0.016),1:-14034(0.129),2:-20013(0.183),3:-10119(0.093),4:-26255(0.24),5:-37004(0.339),, 【Be2】1750,14034,20013,10119,26255,37004, , isAndC:False, sT:22020, sP:6.9525, sB:0.4098, nT:109175, nP:10.0118, nB:0.4214,
322, //Score:8243851.20967051, Beny:【Be1】And:1664,Or:-1,DAll:-154752,Sum:154752,Sub:8243851.20967051,Sub2:4469,SB:0.2811,0:-2849(0.018),1:-19612(0.127),2:-31375(0.203),3:-15107(0.098),4:-29668(0.192),5:-56141(0.363),, 【Be2】2849,19612,31375,15107,29668,56141, , isAndC:False, sT:44078, sP:6.9357, sB:0.2811, nT:154752, nP:8.2188, nB:0.3396,
1216, //Score:8205717.46397561, Beny:【Be1】And:1664,Or:-1,DAll:-167100,Sum:167100,Sub:8205717.46397561,Sub2:4461,SB:0.2558,0:-3130(0.019),1:-21463(0.128),2:-33330(0.199),3:-16109(0.096),4:-32277(0.193),5:-60791(0.364),, 【Be2】3130,21463,33330,16109,32277,60791, , isAndC:False, sT:42016, sP:6.7475, sB:0.2558, nT:167100, nP:8.315, nB:0.3441,  #End#
LowScoreRank , T0:False , T1:10 , T2:32 , T3:
96, //Score:8609635.08824264, Beny:【Be1】And:4305,Or:-1,DAll:-240744,Sum:240744,Sub:8609635.08824264,Sub2:3678,SB:0.2584,0:-4741(0.02),1:-32535(0.135),2:-48999(0.204),3:-22906(0.095),4:-47884(0.199),5:-83679(0.348),, 【Be2】4741,32535,48999,22906,47884,83679, , isAndC:False, sT:60941, sP:6.6972, sB:0.2584, nT:240744, nP:8.5946, nB:0.1923,
8371, //Score:8130719.34811323, Beny:【Be1】And:4305,Or:-1,DAll:-156024,Sum:156024,Sub:8130719.34811323,Sub2:4256,SB:0.294,0:-2578(0.017),1:-21229(0.136),2:-28625(0.183),3:-13678(0.088),4:-37996(0.244),5:-51918(0.333),, 【Be2】2578,21229,28625,13678,37996,51918, , isAndC:False, sT:27995, sP:7.1956, sB:0.294, nT:156024, nP:10.1452, nB:0.3225,
544, //Score:8101330.52574956, Beny:【Be1】And:4305,Or:-1,DAll:-241813,Sum:241813,Sub:8101330.52574956,Sub2:3905,SB:0.2015,0:-4620(0.019),1:-32310(0.134),2:-48909(0.202),3:-22990(0.095),4:-48174(0.199),5:-84810(0.351),, 【Be2】4620,32310,48909,22990,48174,84810, , isAndC:False, sT:56284, sP:6.7248, sB:0.2015, nT:241813, nP:8.5867, nB:0.2307,
322, //Score:8073720.25173212, Beny:【Be1】And:4305,Or:-1,DAll:-159025,Sum:159025,Sub:8073720.25173212,Sub2:4409,SB:0.2683,0:-2927(0.018),1:-20129(0.127),2:-32573(0.205),3:-15756(0.099),4:-30000(0.189),5:-57640(0.362),, 【Be2】2927,20129,32573,15756,30000,57640, , isAndC:False, sT:45001, sP:6.8787, sB:0.2683, nT:159025, nP:8.1343, nB:0.3288,
6133, //Score:7998019.0971615, Beny:【Be1】And:4305,Or:-1,DAll:-170706,Sum:170706,Sub:7998019.0971615,Sub2:4045,SB:0.2796,0:-2808(0.016),1:-23315(0.137),2:-32114(0.188),3:-15391(0.09),4:-40909(0.24),5:-56169(0.329),, 【Be2】2808,23315,32114,15391,40909,56169, , isAndC:False, sT:31595, sP:7.2341, sB:0.2796, nT:170706, nP:9.9972, nB:0.2751,
1216, //Score:7912422.24889028, Beny:【Be1】And:4305,Or:-1,DAll:-171373,Sum:171373,Sub:7912422.24889028,Sub2:4405,SB:0.2368,0:-3208(0.019),1:-21980(0.128),2:-34528(0.201),3:-16758(0.098),4:-32609(0.19),5:-62290(0.363),, 【Be2】3208,21980,34528,16758,32609,62290, , isAndC:False, sT:42918, sP:6.6929, sB:0.2368, nT:171373, nP:8.2341, nB:0.334,
8373, //Score:7899599.75853598, Beny:【Be1】And:4305,Or:-1,DAll:-112784,Sum:112784,Sub:7899599.75853598,Sub2:4610,SB:0.3683,0:-1814(0.016),1:-14454(0.128),2:-21064(0.187),3:-10710(0.095),4:-26413(0.234),5:-38329(0.34),, 【Be2】1814,14454,21064,10710,26413,38329, , isAndC:False, sT:22980, sP:6.827, sB:0.3683, nT:112784, nP:9.8148, nB:0.4075,  #End#
LowScoreRank , T0:False , T1:11 , T2:32 , T3:
96, //Score:8623881.26640362, Beny:【Be1】And:5015,Or:-1,DAll:-236707,Sum:236707,Sub:8623881.26640362,Sub2:3694,SB:0.2626,0:-4675(0.02),1:-32055(0.135),2:-47896(0.202),3:-22306(0.094),4:-47521(0.201),5:-82254(0.347),, 【Be2】4675,32055,47896,22306,47521,82254, , isAndC:False, sT:60282, sP:6.7118, sB:0.2626, nT:236707, nP:8.6475, nB:0.1956,
544, //Score:8289401.89710379, Beny:【Be1】And:5015,Or:-1,DAll:-237773,Sum:237773,Sub:8289401.89710379,Sub2:3924,SB:0.2133,0:-4554(0.019),1:-31829(0.134),2:-47806(0.201),3:-22389(0.094),4:-47811(0.201),5:-83384(0.351),, 【Be2】4554,31829,47806,22389,47811,83384, , isAndC:False, sT:55600, sP:6.7436, sB:0.2133, nT:237773, nP:8.6394, nB:0.2345,
8371, //Score:8282843.22364053, Beny:【Be1】And:5015,Or:-1,DAll:-151976,Sum:151976,Sub:8282843.22364053,Sub2:4295,SB:0.3087,0:-2512(0.017),1:-20748(0.137),2:-27519(0.181),3:-13075(0.086),4:-37632(0.248),5:-50490(0.332),, 【Be2】2512,20748,27519,13075,37632,50490, , isAndC:False, sT:27204, sP:7.2696, sB:0.3087, nT:151976, nP:10.2694, nB:0.331,
6133, //Score:8188235.46518414, Beny:【Be1】And:5015,Or:-1,DAll:-166658,Sum:166658,Sub:8188235.46518414,Sub2:4075,SB:0.2967,0:-2742(0.016),1:-22834(0.137),2:-31008(0.186),3:-14788(0.089),4:-40545(0.243),5:-54741(0.328),, 【Be2】2742,22834,31008,14788,40545,54741, , isAndC:False, sT:30794, sP:7.302, sB:0.2967, nT:166658, nP:10.1069, nB:0.2817,
8373, //Score:8133254.63535972, Beny:【Be1】And:5015,Or:-1,DAll:-108736,Sum:108736,Sub:8133254.63535972,Sub2:4678,SB:0.3957,0:-1748(0.016),1:-13973(0.129),2:-19958(0.184),3:-10107(0.093),4:-26049(0.24),5:-36901(0.339),, 【Be2】1748,13973,19958,10107,26049,36901, , isAndC:False, sT:22163, sP:6.9085, sB:0.3957, nT:108736, nP:9.976, nB:0.4226,
322, //Score:8111555.28463802, Beny:【Be1】And:5015,Or:-1,DAll:-154979,Sum:154979,Sub:8111555.28463802,Sub2:4451,SB:0.2742,0:-2861(0.018),1:-19648(0.127),2:-31469(0.203),3:-15153(0.098),4:-29636(0.191),5:-56212(0.363),, 【Be2】2861,19648,31469,15153,29636,56212, , isAndC:False, sT:44253, sP:6.9132, sB:0.2742, nT:154979, nP:8.2034, nB:0.3373,
1216, //Score:8071118.31964819, Beny:【Be1】And:5015,Or:-1,DAll:-167331,Sum:167331,Sub:8071118.31964819,Sub2:4444,SB:0.2492,0:-3142(0.019),1:-21499(0.128),2:-33424(0.2),3:-16156(0.097),4:-32246(0.193),5:-60864(0.364),, 【Be2】3142,21499,33424,16156,32246,60864, , isAndC:False, sT:42186, sP:6.7248, sB:0.2492, nT:167331, nP:8.3005, nB:0.3421,  #End#
LowScoreRank , T0:False , T1:12 , T2:32 , T3:
96, //Score:8525493.81386845, Beny:【Be1】And:6444,Or:-1,DAll:-312499,Sum:312499,Sub:8525493.81386845,Sub2:3567,SB:0.1983,0:-6164(0.02),1:-41314(0.132),2:-66672(0.213),3:-32520(0.104),4:-55845(0.179),5:-109984(0.352),, 【Be2】6164,41314,66672,32520,55845,109984, , isAndC:False, sT:80702, sP:6.1759, sB:0.1983, nT:312499, nP:7.9454, nB:0.1668,
6133, //Score:7833949.68419216, Beny:【Be1】And:6444,Or:-1,DAll:-221010,Sum:221010,Sub:7833949.68419216,Sub2:3918,SB:0.2141,0:-3734(0.017),1:-29278(0.132),2:-44555(0.202),3:-22186(0.1),4:-46661(0.211),5:-74596(0.338),, 【Be2】3734,29278,44555,22186,46661,74596, , isAndC:False, sT:44233, sP:6.4356, sB:0.2141, nT:221010, nP:9.0427, nB:0.2435,
8371, //Score:7740695.32296709, Beny:【Be1】And:6444,Or:-1,DAll:-203061,Sum:203061,Sub:7740695.32296709,Sub2:4084,SB:0.2158,0:-3447(0.017),1:-26852(0.132),2:-40163(0.198),3:-20058(0.099),4:-43298(0.213),5:-69243(0.341),, 【Be2】3447,26852,40163,20058,43298,69243, , isAndC:False, sT:40028, sP:6.3628, sB:0.2158, nT:203061, nP:9.1328, nB:0.2814,
320, //Score:7726398.89060155, Beny:【Be1】And:6444,Or:-1,DAll:-140554,Sum:140554,Sub:7726398.89060155,Sub2:4518,SB:0.2886,0:-2593(0.018),1:-16456(0.117),2:-31068(0.221),3:-16566(0.118),4:-20795(0.148),5:-53076(0.378),, 【Be2】2593,16456,31068,16566,20795,53076, , isAndC:False, sT:46966, sP:6.0808, sB:0.2886, nT:140554, nP:6.7253, nB:0.3729,
544, //Score:7705445.89848568, Beny:【Be1】And:6444,Or:-1,DAll:-313996,Sum:313996,Sub:7705445.89848568,Sub2:3763,SB:0.1446,0:-6048(0.019),1:-41081(0.131),2:-66655(0.212),3:-32632(0.104),4:-56163(0.179),5:-111417(0.355),, 【Be2】6048,41081,66655,32632,56163,111417, , isAndC:False, sT:75161, sP:6.1803, sB:0.1446, nT:313996, nP:7.9434, nB:0.2003,
322, //Score:7691641.27448961, Beny:【Be1】And:6444,Or:-1,DAll:-216989,Sum:216989,Sub:7691641.27448961,Sub2:4187,SB:0.187,0:-4017(0.019),1:-26940(0.124),2:-46851(0.216),3:-23725(0.109),4:-36257(0.167),5:-79199(0.365),, 【Be2】4017,26940,46851,23725,36257,79199, , isAndC:False, sT:61465, sP:6.2713, sB:0.187, nT:216989, nP:7.4531, nB:0.2838,
4341, //Score:7613620.85533883, Beny:【Be1】And:6444,Or:-1,DAll:-280769,Sum:280769,Sub:7613620.85533883,Sub2:3640,SB:0.1704,0:-4860(0.017),1:-38362(0.137),2:-57017(0.203),3:-27609(0.098),4:-58926(0.21),5:-93995(0.335),, 【Be2】4860,38362,57017,27609,58926,93995, , isAndC:False, sT:54064, sP:6.5543, sB:0.1704, nT:280769, nP:9.0619, nB:0.1743,  #End#
LowScoreRank , T0:False , T1:13 , T2:0 , T3:
96, //Score:8732556.33410533, Beny:【Be1】And:-1,Or:528,DAll:-235779,Sum:235779,Sub:8732556.33410533,Sub2:3706,SB:0.2685,0:-4646(0.02),1:-31947(0.135),2:-47626(0.202),3:-22170(0.094),4:-47460(0.201),5:-81930(0.347),, 【Be2】4646,31947,47626,22170,47460,81930, , isAndC:False, sT:60015, sP:6.7324, sB:0.2685, nT:235779, nP:8.6681, nB:0.197,
544, //Score:8442336.19184688, Beny:【Be1】And:-1,Or:528,DAll:-236925,Sum:236925,Sub:8442336.19184688,Sub2:3937,SB:0.2205,0:-4528(0.019),1:-31725(0.134),2:-47559(0.201),3:-22261(0.094),4:-47762(0.202),5:-83090(0.351),, 【Be2】4528,31725,47559,22261,47762,83090, , isAndC:False, sT:55334, sP:6.766, sB:0.2205, nT:236925, nP:8.6582, nB:0.2363,
8371, //Score:8389717.72013117, Beny:【Be1】And:-1,Or:528,DAll:-150744,Sum:150744,Sub:8389717.72013117,Sub2:4316,SB:0.3156,0:-2474(0.016),1:-20608(0.137),2:-27189(0.18),3:-12901(0.086),4:-37543(0.249),5:-50029(0.332),, 【Be2】2474,20608,27189,12901,37543,50029, , isAndC:False, sT:26749, sP:7.35, sB:0.3156, nT:150744, nP:10.3257, nB:0.3325,
6133, //Score:8273829.49489312, Beny:【Be1】And:-1,Or:528,DAll:-165427,Sum:165427,Sub:8273829.49489312,Sub2:4093,SB:0.3021,0:-2704(0.016),1:-22694(0.137),2:-30678(0.185),3:-14614(0.088),4:-40456(0.245),5:-54281(0.328),, 【Be2】2704,22694,30678,14614,40456,54281, , isAndC:False, sT:30352, sP:7.3715, sB:0.3021, nT:165427, nP:10.1568, nB:0.2828,
8373, //Score:8267955.8095361, Beny:【Be1】And:-1,Or:528,DAll:-107504,Sum:107504,Sub:8267955.8095361,Sub2:4712,SB:0.4069,0:-1710(0.016),1:-13833(0.129),2:-19628(0.183),3:-9933(0.092),4:-25960(0.241),5:-36440(0.339),, 【Be2】1710,13833,19628,9933,25960,36440, , isAndC:False, sT:21697, sP:7.0022, sB:0.4069, nT:107504, nP:10.0515, nB:0.4258,
322, //Score:8216075.63975888, Beny:【Be1】And:-1,Or:528,DAll:-154021,Sum:154021,Sub:8216075.63975888,Sub2:4470,SB:0.2806,0:-2832(0.018),1:-19536(0.127),2:-31205(0.203),3:-15012(0.097),4:-29577(0.192),5:-55859(0.363),, 【Be2】2832,19536,31205,15012,29577,55859, , isAndC:False, sT:43951, sP:6.9461, sB:0.2806, nT:154021, nP:8.2338, nB:0.3392,
1216, //Score:8196308.50625272, Beny:【Be1】And:-1,Or:528,DAll:-166317,Sum:166317,Sub:8196308.50625272,Sub2:4465,SB:0.2561,0:-3111(0.019),1:-21377(0.129),2:-33141(0.199),3:-16012(0.096),4:-32181(0.193),5:-60495(0.364),, 【Be2】3111,21377,33141,16012,32181,60495, , isAndC:False, sT:41855, sP:6.7605, sB:0.2561, nT:166317, nP:8.3305, nB:0.3444,  #End#
LowScoreRank , T0:False , T1:13 , T2:1 , T3:
96, //Score:8727853.63859407, Beny:【Be1】And:-1,Or:6625,DAll:-235820,Sum:235820,Sub:8727853.63859407,Sub2:3705,SB:0.2683,0:-4649(0.02),1:-31947(0.135),2:-47639(0.202),3:-22173(0.094),4:-47472(0.201),5:-81940(0.347),, 【Be2】4649,31947,47639,22173,47472,81940, , isAndC:False, sT:60021, sP:6.7319, sB:0.2683, nT:235820, nP:8.6674, nB:0.197,
8371, //Score:8481153.44575328, Beny:【Be1】And:-1,Or:6625,DAll:-151075,Sum:151075,Sub:8481153.44575328,Sub2:4316,SB:0.3221,0:-2486(0.016),1:-20638(0.137),2:-27256(0.18),3:-12944(0.086),4:-37584(0.249),5:-50167(0.332),, 【Be2】2486,20638,27256,12944,37584,50167, , isAndC:False, sT:26927, sP:7.3224, sB:0.3221, nT:151075, nP:10.3106, nB:0.3339,
544, //Score:8447517.7477459, Beny:【Be1】And:-1,Or:6625,DAll:-236887,Sum:236887,Sub:8447517.7477459,Sub2:3937,SB:0.2209,0:-4528(0.019),1:-31721(0.134),2:-47548(0.201),3:-22257(0.094),4:-47762(0.202),5:-83071(0.351),, 【Be2】4528,31721,47548,22257,47762,83071, , isAndC:False, sT:55329, sP:6.7661, sB:0.2209, nT:236887, nP:8.659, nB:0.2362,
6133, //Score:8358897.32597598, Beny:【Be1】And:-1,Or:6625,DAll:-165757,Sum:165757,Sub:8358897.32597598,Sub2:4093,SB:0.3079,0:-2716(0.016),1:-22724(0.137),2:-30745(0.185),3:-14657(0.088),4:-40497(0.244),5:-54418(0.328),, 【Be2】2716,22724,30745,14657,40497,54418, , isAndC:False, sT:30518, sP:7.3487, sB:0.3079, nT:165757, nP:10.1435, nB:0.2841,
8373, //Score:8337987.34938244, Beny:【Be1】And:-1,Or:6625,DAll:-107835,Sum:107835,Sub:8337987.34938244,Sub2:4710,SB:0.4132,0:-1722(0.016),1:-13863(0.129),2:-19695(0.183),3:-9976(0.093),4:-26001(0.241),5:-36578(0.339),, 【Be2】1722,13863,19695,9976,26001,36578, , isAndC:False, sT:21886, sP:6.9689, sB:0.4132, nT:107835, nP:10.0312, nB:0.4275,
322, //Score:8266787.5296203, Beny:【Be1】And:-1,Or:6625,DAll:-154091,Sum:154091,Sub:8266787.5296203,Sub2:4473,SB:0.2836,0:-2835(0.018),1:-19538(0.127),2:-31210(0.203),3:-15023(0.097),4:-29588(0.192),5:-55897(0.363),, 【Be2】2835,19538,31210,15023,29588,55897, , isAndC:False, sT:43978, sP:6.943, sB:0.2836, nT:154091, nP:8.2313, nB:0.3404,
8375, //Score:8236563.27501204, Beny:【Be1】And:-1,Or:6625,DAll:-94306,Sum:94306,Sub:8236563.27501204,Sub2:4896,SB:0.4493,0:-1450(0.015),1:-11944(0.127),2:-17540(0.186),3:-9008(0.096),4:-21722(0.23),5:-32642(0.346),, 【Be2】1450,11944,17540,9008,21722,32642, , isAndC:False, sT:20351, sP:6.7743, sB:0.4493, nT:94306, nP:9.6237, nB:0.463,  #End#
LowScoreRank , T0:False , T1:13 , T2:2 , T3:
96, //Score:8736019.47408034, Beny:【Be1】And:-1,Or:2615,DAll:-235819,Sum:235819,Sub:8736019.47408034,Sub2:3707,SB:0.2685,0:-4648(0.02),1:-31941(0.135),2:-47641(0.202),3:-22171(0.094),4:-47470(0.201),5:-81948(0.348),, 【Be2】4648,31941,47641,22171,47470,81948, , isAndC:False, sT:60025, sP:6.7313, sB:0.2685, nT:235819, nP:8.667, nB:0.1974,
8371, //Score:8492819.74894148, Beny:【Be1】And:-1,Or:2615,DAll:-151077,Sum:151077,Sub:8492819.74894148,Sub2:4317,SB:0.3228,0:-2485(0.016),1:-20636(0.137),2:-27258(0.18),3:-12944(0.086),4:-37583(0.249),5:-50171(0.332),, 【Be2】2485,20636,27258,12944,37583,50171, , isAndC:False, sT:26937, sP:7.318, sB:0.3228, nT:151077, nP:10.3098, nB:0.3343,
544, //Score:8450295.08752869, Beny:【Be1】And:-1,Or:2615,DAll:-236883,Sum:236883,Sub:8450295.08752869,Sub2:3939,SB:0.2208,0:-4526(0.019),1:-31717(0.134),2:-47549(0.201),3:-22255(0.094),4:-47758(0.202),5:-83078(0.351),, 【Be2】4526,31717,47549,22255,47758,83078, , isAndC:False, sT:55335, sP:6.7656, sB:0.2208, nT:236883, nP:8.6586, nB:0.2365,
6133, //Score:8374830.63967047, Beny:【Be1】And:-1,Or:2615,DAll:-165762,Sum:165762,Sub:8374830.63967047,Sub2:4096,SB:0.3087,0:-2715(0.016),1:-22720(0.137),2:-30747(0.185),3:-14657(0.088),4:-40496(0.244),5:-54427(0.328),, 【Be2】2715,22720,30747,14657,40496,54427, , isAndC:False, sT:30526, sP:7.3454, sB:0.3087, nT:165762, nP:10.1427, nB:0.2847,
8373, //Score:8359206.06830159, Beny:【Be1】And:-1,Or:2615,DAll:-107831,Sum:107831,Sub:8359206.06830159,Sub2:4715,SB:0.4146,0:-1720(0.016),1:-13857(0.129),2:-19697(0.183),3:-9976(0.093),4:-25999(0.241),5:-36582(0.339),, 【Be2】1720,13857,19697,9976,25999,36582, , isAndC:False, sT:21895, sP:6.9638, sB:0.4146, nT:107831, nP:10.0301, nB:0.4283,
322, //Score:8285972.45186696, Beny:【Be1】And:-1,Or:2615,DAll:-154079,Sum:154079,Sub:8285972.45186696,Sub2:4477,SB:0.2845,0:-2833(0.018),1:-19534(0.127),2:-31208(0.203),3:-15018(0.097),4:-29584(0.192),5:-55902(0.363),, 【Be2】2833,19534,31208,15018,29584,55902, , isAndC:False, sT:43981, sP:6.9421, sB:0.2845, nT:154079, nP:8.2307, nB:0.341,
8375, //Score:8260464.12366683, Beny:【Be1】And:-1,Or:2615,DAll:-94301,Sum:94301,Sub:8260464.12366683,Sub2:4902,SB:0.451,0:-1448(0.015),1:-11937(0.127),2:-17542(0.186),3:-9008(0.096),4:-21720(0.23),5:-32646(0.346),, 【Be2】1448,11937,17542,9008,21720,32646, , isAndC:False, sT:20359, sP:6.769, sB:0.451, nT:94301, nP:9.6225, nB:0.4639,  #End#
LowScoreRank , T0:False , T1:13 , T2:3 , T3:
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:8203,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
8371, //Score:8490299.19320836, Beny:【Be1】And:-1,Or:8203,DAll:-151136,Sum:151136,Sub:8490299.19320836,Sub2:4318,SB:0.3224,0:-2486(0.016),1:-20644(0.137),2:-27275(0.18),3:-12949(0.086),4:-37584(0.249),5:-50198(0.332),, 【Be2】2486,20644,27275,12949,37584,50198, , isAndC:False, sT:26944, sP:7.3194, sB:0.3224, nT:151136, nP:10.3077, nB:0.3343,
544, //Score:8442336.19184688, Beny:【Be1】And:-1,Or:8203,DAll:-236925,Sum:236925,Sub:8442336.19184688,Sub2:3937,SB:0.2205,0:-4528(0.019),1:-31725(0.134),2:-47559(0.201),3:-22261(0.094),4:-47762(0.202),5:-83090(0.351),, 【Be2】4528,31725,47559,22261,47762,83090, , isAndC:False, sT:55334, sP:6.766, sB:0.2205, nT:236925, nP:8.6582, nB:0.2363,
6133, //Score:8368016.65106104, Beny:【Be1】And:-1,Or:8203,DAll:-165818,Sum:165818,Sub:8368016.65106104,Sub2:4095,SB:0.3082,0:-2716(0.016),1:-22730(0.137),2:-30764(0.186),3:-14662(0.088),4:-40497(0.244),5:-54449(0.328),, 【Be2】2716,22730,30764,14662,40497,54449, , isAndC:False, sT:30535, sP:7.3461, sB:0.3082, nT:165818, nP:10.1409, nB:0.2845,
8373, //Score:8348529.16051795, Beny:【Be1】And:-1,Or:8203,DAll:-107896,Sum:107896,Sub:8348529.16051795,Sub2:4713,SB:0.4136,0:-1722(0.016),1:-13869(0.129),2:-19714(0.183),3:-9981(0.093),4:-26001(0.241),5:-36609(0.339),, 【Be2】1722,13869,19714,9981,26001,36609, , isAndC:False, sT:21903, sP:6.9656, sB:0.4136, nT:107896, nP:10.0274, nB:0.4279,
322, //Score:8261394.69348019, Beny:【Be1】And:-1,Or:8203,DAll:-154137,Sum:154137,Sub:8261394.69348019,Sub2:4474,SB:0.283,0:-2835(0.018),1:-19544(0.127),2:-31223(0.203),3:-15027(0.097),4:-29588(0.192),5:-55920(0.363),, 【Be2】2835,19544,31223,15027,29588,55920, , isAndC:False, sT:43987, sP:6.9422, sB:0.283, nT:154137, nP:8.2298, nB:0.3406,
8375, //Score:8247260.42944439, Beny:【Be1】And:-1,Or:8203,DAll:-94367,Sum:94367,Sub:8247260.42944439,Sub2:4899,SB:0.4497,0:-1450(0.015),1:-11950(0.127),2:-17559(0.186),3:-9013(0.096),4:-21722(0.23),5:-32673(0.346),, 【Be2】1450,11950,17559,9013,21722,32673, , isAndC:False, sT:20368, sP:6.7709, sB:0.4497, nT:94367, nP:9.6196, nB:0.4634,  #End#
LowScoreRank , T0:False , T1:13 , T2:4 , T3:
96, //Score:8744348.6234997, Beny:【Be1】And:-1,Or:3234,DAll:-235416,Sum:235416,Sub:8744348.6234997,Sub2:3703,SB:0.2703,0:-4634(0.02),1:-31905(0.136),2:-47579(0.202),3:-22139(0.094),4:-47385(0.201),5:-81774(0.347),, 【Be2】4634,31905,47579,22139,47385,81774, , isAndC:False, sT:60014, sP:6.7308, sB:0.2703, nT:235416, nP:8.6653, nB:0.1964,
8371, //Score:8496196.58044195, Beny:【Be1】And:-1,Or:3234,DAll:-150518,Sum:150518,Sub:8496196.58044195,Sub2:4301,SB:0.3271,0:-2474(0.016),1:-20588(0.137),2:-27170(0.181),3:-12898(0.086),4:-37468(0.249),5:-49920(0.332),, 【Be2】2474,20588,27170,12898,37468,49920, , isAndC:False, sT:26803, sP:7.319, sB:0.3271, nT:150518, nP:10.3161, nB:0.3311,
544, //Score:8439975.83460779, Beny:【Be1】And:-1,Or:3234,DAll:-236626,Sum:236626,Sub:8439975.83460779,Sub2:3934,SB:0.2211,0:-4520(0.019),1:-31694(0.134),2:-47515(0.201),3:-22231(0.094),4:-47699(0.202),5:-82967(0.351),, 【Be2】4520,31694,47515,22231,47699,82967, , isAndC:False, sT:55326, sP:6.7646, sB:0.2211, nT:236626, nP:8.6577, nB:0.2357,
8373, //Score:8353541.26793526, Beny:【Be1】And:-1,Or:3234,DAll:-107102,Sum:107102,Sub:8353541.26793526,Sub2:4697,SB:0.4209,0:-1702(0.016),1:-13791(0.129),2:-19589(0.183),3:-9910(0.093),4:-25833(0.241),5:-36277(0.339),, 【Be2】1702,13791,19589,9910,25833,36277, , isAndC:False, sT:21729, sP:6.9662, sB:0.4209, nT:107102, nP:10.0388, nB:0.4244,
6133, //Score:8351069.33627809, Beny:【Be1】And:-1,Or:3234,DAll:-165053,Sum:165053,Sub:8351069.33627809,Sub2:4079,SB:0.3112,0:-2700(0.016),1:-22655(0.137),2:-30643(0.186),3:-14592(0.088),4:-40341(0.244),5:-54122(0.328),, 【Be2】2700,22655,30643,14592,40341,54122, , isAndC:False, sT:30378, sP:7.3483, sB:0.3112, nT:165053, nP:10.1492, nB:0.2813,
322, //Score:8257065.19355248, Beny:【Be1】And:-1,Or:3234,DAll:-153907,Sum:153907,Sub:8257065.19355248,Sub2:4471,SB:0.2837,0:-2828(0.018),1:-19521(0.127),2:-31193(0.203),3:-15005(0.097),4:-29539(0.192),5:-55821(0.363),, 【Be2】2828,19521,31193,15005,29539,55821, , isAndC:False, sT:43977, sP:6.9418, sB:0.2837, nT:153907, nP:8.2288, nB:0.3397,
8375, //Score:8237751.86925422, Beny:【Be1】And:-1,Or:3234,DAll:-93536,Sum:93536,Sub:8237751.86925422,Sub2:4880,SB:0.4576,0:-1432(0.015),1:-11865(0.127),2:-17430(0.186),3:-8937(0.096),4:-21542(0.23),5:-32330(0.346),, 【Be2】1432,11865,17430,8937,21542,32330, , isAndC:False, sT:20190, sP:6.7643, sB:0.4576, nT:93536, nP:9.625, nB:0.4597,  #End#
LowScoreRank , T0:False , T1:13 , T2:5 , T3:
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:992,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
544, //Score:8442336.19184688, Beny:【Be1】And:-1,Or:992,DAll:-236925,Sum:236925,Sub:8442336.19184688,Sub2:3937,SB:0.2205,0:-4528(0.019),1:-31725(0.134),2:-47559(0.201),3:-22261(0.094),4:-47762(0.202),5:-83090(0.351),, 【Be2】4528,31725,47559,22261,47762,83090, , isAndC:False, sT:55334, sP:6.766, sB:0.2205, nT:236925, nP:8.6582, nB:0.2363,
322, //Score:8261394.69348019, Beny:【Be1】And:-1,Or:992,DAll:-154137,Sum:154137,Sub:8261394.69348019,Sub2:4474,SB:0.283,0:-2835(0.018),1:-19544(0.127),2:-31223(0.203),3:-15027(0.097),4:-29588(0.192),5:-55920(0.363),, 【Be2】2835,19544,31223,15027,29588,55920, , isAndC:False, sT:43987, sP:6.9422, sB:0.283, nT:154137, nP:8.2298, nB:0.3406,
1216, //Score:8223637.17156914, Beny:【Be1】And:-1,Or:992,DAll:-166485,Sum:166485,Sub:8223637.17156914,Sub2:4465,SB:0.2575,0:-3116(0.019),1:-21395(0.129),2:-33178(0.199),3:-16029(0.096),4:-32197(0.193),5:-60570(0.364),, 【Be2】3116,21395,33178,16029,32197,60570, , isAndC:False, sT:41921, sP:6.7542, sB:0.2575, nT:166485, nP:8.3255, nB:0.3451,
8373, //Score:8059898.66423682, Beny:【Be1】And:-1,Or:992,DAll:-104447,Sum:104447,Sub:8059898.66423682,Sub2:4655,SB:0.4131,0:-1665(0.016),1:-13467(0.129),2:-19081(0.183),3:-9676(0.093),4:-25345(0.243),5:-35213(0.337),, 【Be2】1665,13467,19081,9676,25345,35213, , isAndC:False, sT:20246, sP:6.9269, sB:0.4131, nT:104447, nP:10.088, nB:0.4193,
8371, //Score:8047952.60703557, Beny:【Be1】And:-1,Or:992,DAll:-148255,Sum:148255,Sub:8047952.60703557,Sub2:4268,SB:0.3037,0:-2443(0.016),1:-20323(0.137),2:-26734(0.18),3:-12668(0.085),4:-37083(0.25),5:-49004(0.331),, 【Be2】2443,20323,26734,12668,37083,49004, , isAndC:False, sT:25555, sP:7.335, sB:0.3037, nT:148255, nP:10.359, nB:0.326,
6133, //Score:8045668.71098619, Beny:【Be1】And:-1,Or:992,DAll:-162486,Sum:162486,Sub:8045668.71098619,Sub2:4046,SB:0.2993,0:-2659(0.016),1:-22346(0.138),2:-30155(0.186),3:-14366(0.088),4:-39865(0.245),5:-53095(0.327),, 【Be2】2659,22346,30155,14366,39865,53095, , isAndC:False, sT:29169, sP:7.368, sB:0.2993, nT:162486, nP:10.1831, nB:0.2758,  #End#
LowScoreRank , T0:False , T1:13 , T2:6 , T3:
96, //Score:8707270.09623208, Beny:【Be1】And:-1,Or:8296,DAll:-234823,Sum:234823,Sub:8707270.09623208,Sub2:3693,SB:0.2701,0:-4625(0.02),1:-31862(0.136),2:-47418(0.202),3:-22037(0.094),4:-47399(0.202),5:-81482(0.347),, 【Be2】4625,31862,47418,22037,47399,81482, , isAndC:False, sT:59892, sP:6.7383, sB:0.2701, nT:234823, nP:8.6861, nB:0.194,
544, //Score:8326347.68018775, Beny:【Be1】And:-1,Or:8296,DAll:-235867,Sum:235867,Sub:8326347.68018775,Sub2:3926,SB:0.2169,0:-4504(0.019),1:-31637(0.134),2:-47310(0.201),3:-22127(0.094),4:-47685(0.202),5:-82604(0.35),, 【Be2】4504,31637,47310,22127,47685,82604, , isAndC:False, sT:55157, sP:6.776, sB:0.2169, nT:235867, nP:8.678, nB:0.2333,
8371, //Score:8263008.66068373, Beny:【Be1】And:-1,Or:8296,DAll:-149311,Sum:149311,Sub:8263008.66068373,Sub2:4296,SB:0.3123,0:-2443(0.016),1:-20484(0.137),2:-26840(0.18),3:-12720(0.085),4:-37451(0.251),5:-49373(0.331),, 【Be2】2443,20484,26840,12720,37451,49373, , isAndC:False, sT:26502, sP:7.3803, sB:0.3123, nT:149311, nP:10.383, nB:0.3283,
6133, //Score:8219066.55437819, Beny:【Be1】And:-1,Or:8296,DAll:-164116,Sum:164116,Sub:8219066.55437819,Sub2:4079,SB:0.3029,0:-2675(0.016),1:-22580(0.138),2:-30351(0.185),3:-14443(0.088),4:-40370(0.246),5:-53697(0.327),, 【Be2】2675,22580,30351,14443,40370,53697, , isAndC:False, sT:30131, sP:7.3968, sB:0.3029, nT:164116, nP:10.2033, nB:0.2797,
322, //Score:8158344.32460888, Beny:【Be1】And:-1,Or:8296,DAll:-152660,Sum:152660,Sub:8158344.32460888,Sub2:4462,SB:0.2807,0:-2800(0.018),1:-19411(0.127),2:-30856(0.202),3:-14854(0.097),4:-29478(0.193),5:-55261(0.362),, 【Be2】2800,19411,30856,14854,29478,55261, , isAndC:False, sT:43731, sP:6.9612, sB:0.2807, nT:152660, nP:8.269, nB:0.3368,
8373, //Score:8147692.93126947, Beny:【Be1】And:-1,Or:8296,DAll:-106063,Sum:106063,Sub:8147692.93126947,Sub2:4691,SB:0.405,0:-1679(0.016),1:-13707(0.129),2:-19273(0.182),3:-9752(0.092),4:-25868(0.244),5:-35784(0.337),, 【Be2】1679,13707,19273,9752,25868,35784, , isAndC:False, sT:21458, sP:7.034, sB:0.405, nT:106063, nP:10.1289, nB:0.4215,
1216, //Score:8074977.68264464, Beny:【Be1】And:-1,Or:8296,DAll:-165080,Sum:165080,Sub:8074977.68264464,Sub2:4451,SB:0.2524,0:-3082(0.019),1:-21272(0.129),2:-32850(0.199),3:-15855(0.096),4:-32093(0.194),5:-59928(0.363),, 【Be2】3082,21272,32850,15855,32093,59928, , isAndC:False, sT:41638, sP:6.7746, sB:0.2524, nT:165080, nP:8.3601, nB:0.3409,  #End#
LowScoreRank , T0:False , T1:13 , T2:7 , T3:
96, //Score:8714887.49858967, Beny:【Be1】And:-1,Or:8393,DAll:-235408,Sum:235408,Sub:8714887.49858967,Sub2:3698,SB:0.2691,0:-4649(0.02),1:-31898(0.136),2:-47559(0.202),3:-22148(0.094),4:-47357(0.201),5:-81797(0.347),, 【Be2】4649,31898,47559,22148,47357,81797, , isAndC:False, sT:60018, sP:6.7306, sB:0.2691, nT:235408, nP:8.6615, nB:0.1963,
8371, //Score:8481363.56559274, Beny:【Be1】And:-1,Or:8393,DAll:-151051,Sum:151051,Sub:8481363.56559274,Sub2:4315,SB:0.3224,0:-2486(0.016),1:-20633(0.137),2:-27260(0.18),3:-12942(0.086),4:-37571(0.249),5:-50159(0.332),, 【Be2】2486,20633,27260,12942,37571,50159, , isAndC:False, sT:26924, sP:7.3185, sB:0.3224, nT:151051, nP:10.3089, nB:0.3339,
544, //Score:8433425.16996207, Beny:【Be1】And:-1,Or:8393,DAll:-236447,Sum:236447,Sub:8433425.16996207,Sub2:3931,SB:0.2214,0:-4527(0.019),1:-31668(0.134),2:-47460(0.201),3:-22230(0.094),4:-47645(0.202),5:-82917(0.351),, 【Be2】4527,31668,47460,22230,47645,82917, , isAndC:False, sT:55313, sP:6.7627, sB:0.2214, nT:236447, nP:8.6528, nB:0.2355,
6133, //Score:8374545.64438597, Beny:【Be1】And:-1,Or:8393,DAll:-165725,Sum:165725,Sub:8374545.64438597,Sub2:4092,SB:0.3093,0:-2716(0.016),1:-22722(0.137),2:-30748(0.186),3:-14650(0.088),4:-40472(0.244),5:-54417(0.328),, 【Be2】2716,22722,30748,14650,40472,54417, , isAndC:False, sT:30528, sP:7.344, sB:0.3093, nT:165725, nP:10.1406, nB:0.2841,
8373, //Score:8335931.73248977, Beny:【Be1】And:-1,Or:8393,DAll:-107776,Sum:107776,Sub:8335931.73248977,Sub2:4706,SB:0.4143,0:-1722(0.016),1:-13861(0.129),2:-19696(0.183),3:-9969(0.092),4:-25967(0.241),5:-36561(0.339),, 【Be2】1722,13861,19696,9969,25967,36561, , isAndC:False, sT:21889, sP:6.9608, sB:0.4143, nT:107776, nP:10.0271, nB:0.4269,
322, //Score:8241377.3793085, Beny:【Be1】And:-1,Or:8393,DAll:-153504,Sum:153504,Sub:8241377.3793085,Sub2:4469,SB:0.2839,0:-2834(0.018),1:-19459(0.127),2:-31090(0.203),3:-14981(0.098),4:-29426(0.192),5:-55714(0.363),, 【Be2】2834,19459,31090,14981,29426,55714, , isAndC:False, sT:43945, sP:6.9377, sB:0.2839, nT:153504, nP:8.2153, nB:0.3407,
8375, //Score:8234366.67243707, Beny:【Be1】And:-1,Or:8393,DAll:-94311,Sum:94311,Sub:8234366.67243707,Sub2:4893,SB:0.4498,0:-1449(0.015),1:-11945(0.127),2:-17554(0.186),3:-9011(0.096),4:-21716(0.23),5:-32636(0.346),, 【Be2】1449,11945,17554,9011,21716,32636, , isAndC:False, sT:20362, sP:6.769, sB:0.4498, nT:94311, nP:9.6195, nB:0.4627,  #End#
LowScoreRank , T0:False , T1:13 , T2:8 , T3:
96, //Score:8724021.58782817, Beny:【Be1】And:-1,Or:4762,DAll:-235654,Sum:235654,Sub:8724021.58782817,Sub2:3704,SB:0.2685,0:-4646(0.02),1:-31930(0.135),2:-47602(0.202),3:-22151(0.094),4:-47453(0.201),5:-81872(0.347),, 【Be2】4646,31930,47602,22151,47453,81872, , isAndC:False, sT:60012, sP:6.7319, sB:0.2685, nT:235654, nP:8.6697, nB:0.1969,
544, //Score:8452072.60707429, Beny:【Be1】And:-1,Or:4762,DAll:-236722,Sum:236722,Sub:8452072.60707429,Sub2:3936,SB:0.2214,0:-4524(0.019),1:-31705(0.134),2:-47508(0.201),3:-22240(0.094),4:-47741(0.202),5:-83004(0.351),, 【Be2】4524,31705,47508,22240,47741,83004, , isAndC:False, sT:55312, sP:6.7672, sB:0.2214, nT:236722, nP:8.6613, nB:0.2361,
8371, //Score:8446200.5954432, Beny:【Be1】And:-1,Or:4762,DAll:-150778,Sum:150778,Sub:8446200.5954432,Sub2:4315,SB:0.3202,0:-2476(0.016),1:-20609(0.137),2:-27197(0.18),3:-12906(0.086),4:-37552(0.249),5:-50038(0.332),, 【Be2】2476,20609,27197,12906,37552,50038, , isAndC:False, sT:26836, sP:7.3339, sB:0.3202, nT:150778, nP:10.3197, nB:0.3337,
6133, //Score:8330001.70986337, Beny:【Be1】And:-1,Or:4762,DAll:-165460,Sum:165460,Sub:8330001.70986337,Sub2:4092,SB:0.3065,0:-2706(0.016),1:-22695(0.137),2:-30686(0.185),3:-14619(0.088),4:-40465(0.245),5:-54289(0.328),, 【Be2】2706,22695,30686,14619,40465,54289, , isAndC:False, sT:30427, sP:7.3589, sB:0.3065, nT:165460, nP:10.1515, nB:0.2838,
8373, //Score:8310655.22592, Beny:【Be1】And:-1,Or:4762,DAll:-107538,Sum:107538,Sub:8310655.22592,Sub2:4710,SB:0.4117,0:-1712(0.016),1:-13834(0.129),2:-19636(0.183),3:-9938(0.092),4:-25969(0.241),5:-36449(0.339),, 【Be2】1712,13834,19636,9938,25969,36449, , isAndC:False, sT:21795, sP:6.9815, sB:0.4117, nT:107538, nP:10.0432, nB:0.4274,
322, //Score:8241162.93378446, Beny:【Be1】And:-1,Or:4762,DAll:-153876,Sum:153876,Sub:8241162.93378446,Sub2:4470,SB:0.2827,0:-2832(0.018),1:-19516(0.127),2:-31165(0.203),3:-14998(0.097),4:-29559(0.192),5:-55806(0.363),, 【Be2】2832,19516,31165,14998,29559,55806, , isAndC:False, sT:43925, sP:6.9478, sB:0.2827, nT:153876, nP:8.2345, nB:0.34,
8375, //Score:8209715.74632015, Beny:【Be1】And:-1,Or:4762,DAll:-94009,Sum:94009,Sub:8209715.74632015,Sub2:4897,SB:0.4478,0:-1440(0.015),1:-11915(0.127),2:-17481(0.186),3:-8970(0.095),4:-21690(0.231),5:-32513(0.346),, 【Be2】1440,11915,17481,8970,21690,32513, , isAndC:False, sT:20260, sP:6.787, sB:0.4478, nT:94009, nP:9.6362, nB:0.463,  #End#
LowScoreRank , T0:False , T1:13 , T2:9 , T3:
96, //Score:8722413.2177275, Beny:【Be1】And:-1,Or:6151,DAll:-234929,Sum:234929,Sub:8722413.2177275,Sub2:3701,SB:0.2699,0:-4641(0.02),1:-31829(0.135),2:-47437(0.202),3:-22111(0.094),4:-47270(0.201),5:-81641(0.348),, 【Be2】4641,31829,47437,22111,47270,81641, , isAndC:False, sT:59985, sP:6.7317, sB:0.2699, nT:234929, nP:8.6658, nB:0.1971,
8371, //Score:8486383.63542786, Beny:【Be1】And:-1,Or:6151,DAll:-150310,Sum:150310,Sub:8486383.63542786,Sub2:4321,SB:0.3238,0:-2475(0.016),1:-20523(0.137),2:-27084(0.18),3:-12879(0.086),4:-37439(0.249),5:-49910(0.332),, 【Be2】2475,20523,27084,12879,37439,49910, , isAndC:False, sT:26714, sP:7.3228, sB:0.3238, nT:150310, nP:10.3204, nB:0.3364,
544, //Score:8451548.43893163, Beny:【Be1】And:-1,Or:6151,DAll:-235948,Sum:235948,Sub:8451548.43893163,Sub2:3932,SB:0.2228,0:-4521(0.019),1:-31591(0.134),2:-47354(0.201),3:-22185(0.094),4:-47544(0.202),5:-82753(0.351),, 【Be2】4521,31591,47354,22185,47544,82753, , isAndC:False, sT:55264, sP:6.7658, sB:0.2228, nT:235948, nP:8.657, nB:0.2362,
6133, //Score:8393672.97273459, Beny:【Be1】And:-1,Or:6151,DAll:-165752,Sum:165752,Sub:8393672.97273459,Sub2:4098,SB:0.3097,0:-2713(0.016),1:-22716(0.137),2:-30746(0.185),3:-14656(0.088),4:-40493(0.244),5:-54428(0.328),, 【Be2】2713,22716,30746,14656,40493,54428, , isAndC:False, sT:30517, sP:7.3476, sB:0.3097, nT:165752, nP:10.1426, nB:0.2851,
8373, //Score:8328679.51977678, Beny:【Be1】And:-1,Or:6151,DAll:-106753,Sum:106753,Sub:8328679.51977678,Sub2:4716,SB:0.4168,0:-1709(0.016),1:-13699(0.128),2:-19466(0.182),3:-9889(0.093),4:-25792(0.242),5:-36198(0.339),, 【Be2】1709,13699,19466,9889,25792,36198, , isAndC:False, sT:21597, sP:6.9631, sB:0.4168, nT:106753, nP:10.0453, nB:0.4315,
322, //Score:8224149.68419211, Beny:【Be1】And:-1,Or:6151,DAll:-152732,Sum:152732,Sub:8224149.68419211,Sub2:4465,SB:0.285,0:-2824(0.018),1:-19353(0.127),2:-30939(0.203),3:-14919(0.098),4:-29266(0.192),5:-55431(0.363),, 【Be2】2824,19353,30939,14919,29266,55431, , isAndC:False, sT:43783, sP:6.9404, sB:0.285, nT:152732, nP:8.2226, nB:0.3407,
8375, //Score:8218688.30252781, Beny:【Be1】And:-1,Or:6151,DAll:-93156,Sum:93156,Sub:8218688.30252781,Sub2:4904,SB:0.4534,0:-1437(0.015),1:-11776(0.126),2:-17296(0.186),3:-8910(0.096),4:-21493(0.231),5:-32244(0.346),, 【Be2】1437,11776,17296,8910,21493,32244, , isAndC:False, sT:20031, sP:6.7625, sB:0.4534, nT:93156, nP:9.6373, nB:0.4678,  #End#
LowScoreRank , T0:False , T1:13 , T2:10 , T3:
96, //Score:8725539.206267, Beny:【Be1】And:-1,Or:3012,DAll:-235285,Sum:235285,Sub:8725539.206267,Sub2:3700,SB:0.2697,0:-4635(0.02),1:-31900(0.136),2:-47554(0.202),3:-22108(0.094),4:-47354(0.201),5:-81734(0.347),, 【Be2】4635,31900,47554,22108,47354,81734, , isAndC:False, sT:59990, sP:6.7331, sB:0.2697, nT:235285, nP:8.6675, nB:0.1957,
544, //Score:8474042.02111781, Beny:【Be1】And:-1,Or:3012,DAll:-236406,Sum:236406,Sub:8474042.02111781,Sub2:3933,SB:0.2232,0:-4517(0.019),1:-31677(0.134),2:-47468(0.201),3:-22194(0.094),4:-47650(0.202),5:-82900(0.351),, 【Be2】4517,31677,47468,22194,47650,82900, , isAndC:False, sT:55282, sP:6.7681, sB:0.2232, nT:236406, nP:8.6578, nB:0.2355,
8371, //Score:8427235.05576538, Beny:【Be1】And:-1,Or:3012,DAll:-150265,Sum:150265,Sub:8427235.05576538,Sub2:4310,SB:0.321,0:-2458(0.016),1:-20565(0.137),2:-27119(0.18),3:-12858(0.086),4:-37435(0.249),5:-49830(0.332),, 【Be2】2458,20565,27119,12858,37435,49830, , isAndC:False, sT:26716, sP:7.3318, sB:0.321, nT:150265, nP:10.325, nB:0.3316,
6133, //Score:8310406.30996258, Beny:【Be1】And:-1,Or:3012,DAll:-164827,Sum:164827,Sub:8310406.30996258,Sub2:4085,SB:0.3077,0:-2686(0.016),1:-22646(0.137),2:-30587(0.186),3:-14549(0.088),4:-40315(0.245),5:-54044(0.328),, 【Be2】2686,22646,30587,14549,40315,54044, , isAndC:False, sT:30294, sP:7.357, sB:0.3077, nT:164827, nP:10.157, nB:0.2815,
8373, //Score:8268786.25132976, Beny:【Be1】And:-1,Or:3012,DAll:-106854,Sum:106854,Sub:8268786.25132976,Sub2:4698,SB:0.4133,0:-1692(0.016),1:-13782(0.129),2:-19529(0.183),3:-9865(0.092),4:-25810(0.242),5:-36176(0.339),, 【Be2】1692,13782,19529,9865,25810,36176, , isAndC:False, sT:21640, sP:6.9732, sB:0.4133, nT:106854, nP:10.0507, nB:0.4241,
322, //Score:8257314.82398916, Beny:【Be1】And:-1,Or:3012,DAll:-153431,Sum:153431,Sub:8257314.82398916,Sub2:4468,SB:0.2852,0:-2817(0.018),1:-19475(0.127),2:-31107(0.203),3:-14947(0.097),4:-29443(0.192),5:-55642(0.363),, 【Be2】2817,19475,31107,14947,29443,55642, , isAndC:False, sT:43911, sP:6.9449, sB:0.2852, nT:153431, nP:8.2277, nB:0.3389,
1216, //Score:8246674.30097071, Beny:【Be1】And:-1,Or:3012,DAll:-165927,Sum:165927,Sub:8246674.30097071,Sub2:4460,SB:0.2606,0:-3102(0.019),1:-21350(0.129),2:-33080(0.199),3:-15962(0.096),4:-32074(0.193),5:-60359(0.364),, 【Be2】3102,21350,33080,15962,32074,60359, , isAndC:False, sT:41848, sP:6.7594, sB:0.2606, nT:165927, nP:8.325, nB:0.3437,  #End#
LowScoreRank , T0:False , T1:13 , T2:11 , T3:
96, //Score:8731581.50729459, Beny:【Be1】And:-1,Or:3456,DAll:-235816,Sum:235816,Sub:8731581.50729459,Sub2:3706,SB:0.2684,0:-4647(0.02),1:-31949(0.135),2:-47643(0.202),3:-22172(0.094),4:-47458(0.201),5:-81947(0.348),, 【Be2】4647,31949,47643,22172,47458,81947, , isAndC:False, sT:60023, sP:6.7316, sB:0.2684, nT:235816, nP:8.6663, nB:0.1971,
8371, //Score:8456909.71846695, Beny:【Be1】And:-1,Or:3456,DAll:-150990,Sum:150990,Sub:8456909.71846695,Sub2:4316,SB:0.3205,0:-2482(0.016),1:-20633(0.137),2:-27251(0.18),3:-12936(0.086),4:-37543(0.249),5:-50145(0.332),, 【Be2】2482,20633,27251,12936,37543,50145, , isAndC:False, sT:26904, sP:7.3221, sB:0.3205, nT:150990, nP:10.3088, nB:0.3335,
544, //Score:8440794.13390712, Beny:【Be1】And:-1,Or:3456,DAll:-236909,Sum:236909,Sub:8440794.13390712,Sub2:3937,SB:0.2205,0:-4528(0.019),1:-31724(0.134),2:-47557(0.201),3:-22260(0.094),4:-47756(0.202),5:-83084(0.351),, 【Be2】4528,31724,47557,22260,47756,83084, , isAndC:False, sT:55334, sP:6.7658, sB:0.2205, nT:236909, nP:8.6581, nB:0.2362,
6133, //Score:8297089.32709861, Beny:【Be1】And:-1,Or:3456,DAll:-165634,Sum:165634,Sub:8297089.32709861,Sub2:4094,SB:0.3036,0:-2708(0.016),1:-22717(0.137),2:-30739(0.186),3:-14646(0.088),4:-40443(0.244),5:-54381(0.328),, 【Be2】2708,22717,30739,14646,40443,54381, , isAndC:False, sT:30497, sP:7.3458, sB:0.3036, nT:165634, nP:10.1418, nB:0.2837,
8373, //Score:8284765.31856162, Beny:【Be1】And:-1,Or:3456,DAll:-107709,Sum:107709,Sub:8284765.31856162,Sub2:4712,SB:0.4083,0:-1714(0.016),1:-13856(0.129),2:-19688(0.183),3:-9965(0.093),4:-25945(0.241),5:-36541(0.339),, 【Be2】1714,13856,19688,9965,25945,36541, , isAndC:False, sT:21860, sP:6.9666, sB:0.4083, nT:107709, nP:10.0283, nB:0.427,
322, //Score:8239141.20214265, Beny:【Be1】And:-1,Or:3456,DAll:-154063,Sum:154063,Sub:8239141.20214265,Sub2:4472,SB:0.2819,0:-2834(0.018),1:-19539(0.127),2:-31209(0.203),3:-15024(0.098),4:-29563(0.192),5:-55894(0.363),, 【Be2】2834,19539,31209,15024,29563,55894, , isAndC:False, sT:43977, sP:6.9411, sB:0.2819, nT:154063, nP:8.2293, nB:0.3402,
1216, //Score:8230197.37295112, Beny:【Be1】And:-1,Or:3456,DAll:-166471,Sum:166471,Sub:8230197.37295112,Sub2:4466,SB:0.2579,0:-3115(0.019),1:-21393(0.129),2:-33177(0.199),3:-16028(0.096),4:-32194(0.193),5:-60564(0.364),, 【Be2】3115,21393,33177,16028,32194,60564, , isAndC:False, sT:41916, sP:6.7547, sB:0.2579, nT:166471, nP:8.3253, nB:0.3451,  #End#
LowScoreRank , T0:False , T1:13 , T2:12 , T3:
96, //Score:8773990.99534095, Beny:【Be1】And:-1,Or:1939,DAll:-235179,Sum:235179,Sub:8773990.99534095,Sub2:3702,SB:0.2725,0:-4639(0.02),1:-31879(0.136),2:-47492(0.202),3:-22071(0.094),4:-47410(0.202),5:-81688(0.347),, 【Be2】4639,31879,47492,22071,47410,81688, , isAndC:False, sT:59923, sP:6.738, sB:0.2725, nT:235179, nP:8.6811, nB:0.1961,
544, //Score:8490970.78807788, Beny:【Be1】And:-1,Or:1939,DAll:-236175,Sum:236175,Sub:8490970.78807788,Sub2:3933,SB:0.2244,0:-4518(0.019),1:-31648(0.134),2:-47387(0.201),3:-22139(0.094),4:-47692(0.202),5:-82791(0.351),, 【Be2】4518,31648,47387,22139,47692,82791, , isAndC:False, sT:55203, sP:6.7743, sB:0.2244, nT:236175, nP:8.6741, nB:0.2351,
8371, //Score:8309240.23918971, Beny:【Be1】And:-1,Or:1939,DAll:-150047,Sum:150047,Sub:8309240.23918971,Sub2:4309,SB:0.3121,0:-2474(0.016),1:-20530(0.137),2:-27016(0.18),3:-12777(0.085),4:-37486(0.25),5:-49764(0.332),, 【Be2】2474,20530,27016,12777,37486,49764, , isAndC:False, sT:26623, sP:7.3722, sB:0.3121, nT:150047, nP:10.3562, nB:0.3321,
6133, //Score:8210243.03585263, Beny:【Be1】And:-1,Or:1939,DAll:-164760,Sum:164760,Sub:8210243.03585263,Sub2:4088,SB:0.2994,0:-2703(0.016),1:-22621(0.137),2:-30503(0.185),3:-14492(0.088),4:-40407(0.245),5:-54034(0.328),, 【Be2】2703,22621,30503,14492,40407,54034, , isAndC:False, sT:30228, sP:7.3901, sB:0.2994, nT:164760, nP:10.1833, nB:0.2827,
322, //Score:8207769.03807361, Beny:【Be1】And:-1,Or:1939,DAll:-153169,Sum:153169,Sub:8207769.03807361,Sub2:4468,SB:0.2821,0:-2823(0.018),1:-19440(0.127),2:-30998(0.202),3:-14881(0.097),4:-29493(0.193),5:-55534(0.363),, 【Be2】2823,19440,30998,14881,29493,55534, , isAndC:False, sT:43770, sP:6.9618, sB:0.2821, nT:153169, nP:8.258, nB:0.3387,
8373, //Score:8170800.78218801, Beny:【Be1】And:-1,Or:1939,DAll:-106780,Sum:106780,Sub:8170800.78218801,Sub2:4706,SB:0.4013,0:-1709(0.016),1:-13753(0.129),2:-19442(0.182),3:-9807(0.092),4:-25901(0.243),5:-36168(0.339),, 【Be2】1709,13753,19442,9807,25901,36168, , isAndC:False, sT:21575, sP:7.0252, sB:0.4013, nT:106780, nP:10.0938, nB:0.4262,
1216, //Score:8150621.33011965, Beny:【Be1】And:-1,Or:1939,DAll:-165556,Sum:165556,Sub:8150621.33011965,Sub2:4464,SB:0.2547,0:-3105(0.019),1:-21293(0.129),2:-32947(0.199),3:-15884(0.096),4:-32116(0.194),5:-60211(0.364),, 【Be2】3105,21293,32947,15884,32116,60211, , isAndC:False, sT:41701, sP:6.7745, sB:0.2547, nT:165556, nP:8.3518, nB:0.3445,  #End#
LowScoreRank , T0:False , T1:13 , T2:13 , T3:
96, //Score:8744079.3513078, Beny:【Be1】And:-1,Or:5612,DAll:-235607,Sum:235607,Sub:8744079.3513078,Sub2:3707,SB:0.2692,0:-4643(0.02),1:-31923(0.135),2:-47583(0.202),3:-22138(0.094),4:-47450(0.201),5:-81870(0.347),, 【Be2】4643,31923,47583,22138,47450,81870, , isAndC:False, sT:59978, sP:6.7357, sB:0.2692, nT:235607, nP:8.6723, nB:0.1973,
8371, //Score:8488247.48025556, Beny:【Be1】And:-1,Or:5612,DAll:-150676,Sum:150676,Sub:8488247.48025556,Sub2:4315,SB:0.3235,0:-2479(0.016),1:-20604(0.137),2:-27158(0.18),3:-12875(0.085),4:-37542(0.249),5:-50018(0.332),, 【Be2】2479,20604,27158,12875,37542,50018, , isAndC:False, sT:26810, sP:7.3434, sB:0.3235, nT:150676, nP:10.3284, nB:0.3336,
544, //Score:8471074.19407779, Beny:【Be1】And:-1,Or:5612,DAll:-236687,Sum:236687,Sub:8471074.19407779,Sub2:3939,SB:0.222,0:-4523(0.019),1:-31698(0.134),2:-47493(0.201),3:-22224(0.094),4:-47740(0.202),5:-83009(0.351),, 【Be2】4523,31698,47493,22224,47740,83009, , isAndC:False, sT:55274, sP:6.7714, sB:0.222, nT:236687, nP:8.6638, nB:0.2366,
6133, //Score:8362348.25336568, Beny:【Be1】And:-1,Or:5612,DAll:-165363,Sum:165363,Sub:8362348.25336568,Sub2:4092,SB:0.3089,0:-2709(0.016),1:-22690(0.137),2:-30647(0.185),3:-14588(0.088),4:-40456(0.245),5:-54273(0.328),, 【Be2】2709,22690,30647,14588,40456,54273, , isAndC:False, sT:30405, sP:7.3666, sB:0.3089, nT:165363, nP:10.1591, nB:0.2839,
8373, //Score:8347377.19505004, Beny:【Be1】And:-1,Or:5612,DAll:-107436,Sum:107436,Sub:8347377.19505004,Sub2:4711,SB:0.4155,0:-1715(0.016),1:-13829(0.129),2:-19597(0.182),3:-9907(0.092),4:-25959(0.242),5:-36429(0.339),, 【Be2】1715,13829,19597,9907,25959,36429, , isAndC:False, sT:21769, sP:6.9929, sB:0.4155, nT:107436, nP:10.0552, nB:0.4274,
322, //Score:8268044.5131095, Beny:【Be1】And:-1,Or:5612,DAll:-153777,Sum:153777,Sub:8268044.5131095,Sub2:4472,SB:0.2844,0:-2830(0.018),1:-19513(0.127),2:-31130(0.202),3:-14970(0.097),4:-29554(0.192),5:-55780(0.363),, 【Be2】2830,19513,31130,14970,29554,55780, , isAndC:False, sT:43898, sP:6.9523, sB:0.2844, nT:153777, nP:8.2413, nB:0.34,
8375, //Score:8246520.82548968, Beny:【Be1】And:-1,Or:5612,DAll:-93907,Sum:93907,Sub:8246520.82548968,Sub2:4897,SB:0.452,0:-1443(0.015),1:-11910(0.127),2:-17442(0.186),3:-8939(0.095),4:-21680(0.231),5:-32493(0.346),, 【Be2】1443,11910,17442,8939,21680,32493, , isAndC:False, sT:20234, sP:6.799, sB:0.452, nT:93907, nP:9.6494, nB:0.463,  #End#
LowScoreRank , T0:False , T1:13 , T2:14 , T3:
96, //Score:8615381.7216288, Beny:【Be1】And:-1,Or:4806,DAll:-231876,Sum:231876,Sub:8615381.7216288,Sub2:3666,SB:0.2728,0:-4578(0.02),1:-31431(0.136),2:-46969(0.203),3:-21878(0.094),4:-46641(0.201),5:-80379(0.347),, 【Be2】4578,31431,46969,21878,46641,80379, , isAndC:False, sT:59809, sP:6.7366, sB:0.2728, nT:231876, nP:8.6613, nB:0.1903,
8371, //Score:8317736.99305265, Beny:【Be1】And:-1,Or:4806,DAll:-144901,Sum:144901,Sub:8317736.99305265,Sub2:4264,SB:0.3346,0:-2367(0.016),1:-19817(0.137),2:-26156(0.181),3:-12438(0.086),4:-36418(0.251),5:-47705(0.329),, 【Be2】2367,19817,26156,12438,36418,47705, , isAndC:False, sT:25660, sP:7.3447, sB:0.3346, nT:144901, nP:10.3984, nB:0.3261,
544, //Score:8314103.42763327, Beny:【Be1】And:-1,Or:4806,DAll:-233053,Sum:233053,Sub:8314103.42763327,Sub2:3905,SB:0.2221,0:-4458(0.019),1:-31211(0.134),2:-46915(0.201),3:-21954(0.094),4:-46959(0.201),5:-81556(0.35),, 【Be2】4458,31211,46915,21954,46959,81556, , isAndC:False, sT:55026, sP:6.7705, sB:0.2221, nT:233053, nP:8.653, nB:0.2302,
6133, //Score:8211099.46157103, Beny:【Be1】And:-1,Or:4806,DAll:-159041,Sum:159041,Sub:8211099.46157103,Sub2:4026,SB:0.3236,0:-2592(0.016),1:-21841(0.137),2:-29546(0.186),3:-14110(0.089),4:-39212(0.247),5:-51740(0.325),, 【Be2】2592,21841,29546,14110,39212,51740, , isAndC:False, sT:29182, sP:7.3764, sB:0.3236, nT:159041, nP:10.2155, nB:0.2738,
1216, //Score:8114900.90388052, Beny:【Be1】And:-1,Or:4806,DAll:-161700,Sum:161700,Sub:8114900.90388052,Sub2:4423,SB:0.2653,0:-3038(0.019),1:-20760(0.128),2:-32358(0.2),3:-15645(0.097),4:-31192(0.193),5:-58707(0.363),, 【Be2】3038,20760,32358,15645,31192,58707, , isAndC:False, sT:41310, sP:6.761, sB:0.2653, nT:161700, nP:8.3069, nB:0.3386,
8365, //Score:8073939.69921978, Beny:【Be1】And:-1,Or:4806,DAll:-203319,Sum:203319,Sub:8073939.69921978,Sub2:4239,SB:0.2071,0:-3368(0.017),1:-27645(0.136),2:-38100(0.187),3:-17438(0.086),4:-48718(0.24),5:-68050(0.335),, 【Be2】3368,27645,38100,17438,48718,68050, , isAndC:False, sT:33837, sP:7.1964, sB:0.2071, nT:203319, nP:9.9392, nB:0.2929,
8373, //Score:8068222.81043062, Beny:【Be1】And:-1,Or:4806,DAll:-100930,Sum:100930,Sub:8068222.81043062,Sub2:4642,SB:0.4342,0:-1591(0.016),1:-12953(0.128),2:-18486(0.183),3:-9428(0.093),4:-24647(0.244),5:-33825(0.335),, 【Be2】1591,12953,18486,9428,24647,33825, , isAndC:False, sT:20472, sP:6.9638, sB:0.4342, nT:100930, nP:10.1332, nB:0.4195,  #End#
LowScoreRank , T0:False , T1:13 , T2:15 , T3:
96, //Score:8726488.22013554, Beny:【Be1】And:-1,Or:7910,DAll:-235637,Sum:235637,Sub:8726488.22013554,Sub2:3700,SB:0.2692,0:-4648(0.02),1:-31936(0.136),2:-47603(0.202),3:-22149(0.094),4:-47442(0.201),5:-81859(0.347),, 【Be2】4648,31936,47603,22149,47442,81859, , isAndC:False, sT:60002, sP:6.7324, sB:0.2692, nT:235637, nP:8.6701, nB:0.1962,
544, //Score:8441164.00118907, Beny:【Be1】And:-1,Or:7910,DAll:-236716,Sum:236716,Sub:8441164.00118907,Sub2:3932,SB:0.2213,0:-4527(0.019),1:-31711(0.134),2:-47517(0.201),3:-22232(0.094),4:-47737(0.202),5:-82992(0.351),, 【Be2】4527,31711,47517,22232,47737,82992, , isAndC:False, sT:55304, sP:6.7674, sB:0.2213, nT:236716, nP:8.6616, nB:0.2354,
8371, //Score:8420650.50957059, Beny:【Be1】And:-1,Or:7910,DAll:-150740,Sum:150740,Sub:8420650.50957059,Sub2:4304,SB:0.3201,0:-2484(0.016),1:-20613(0.137),2:-27192(0.18),3:-12901(0.086),4:-37534(0.249),5:-50016(0.332),, 【Be2】2484,20613,27192,12901,37534,50016, , isAndC:False, sT:26855, sP:7.33, sB:0.3201, nT:150740, nP:10.3224, nB:0.3318,
6133, //Score:8301588.97901241, Beny:【Be1】And:-1,Or:7910,DAll:-165422,Sum:165422,Sub:8301588.97901241,Sub2:4082,SB:0.3061,0:-2714(0.016),1:-22699(0.137),2:-30681(0.185),3:-14614(0.088),4:-40447(0.245),5:-54267(0.328),, 【Be2】2714,22699,30681,14614,40447,54267, , isAndC:False, sT:30448, sP:7.3552, sB:0.3061, nT:165422, nP:10.154, nB:0.2821,
8373, //Score:8274163.40491915, Beny:【Be1】And:-1,Or:7910,DAll:-107500,Sum:107500,Sub:8274163.40491915,Sub2:4695,SB:0.4111,0:-1720(0.016),1:-13838(0.129),2:-19631(0.183),3:-9933(0.092),4:-25951(0.241),5:-36427(0.339),, 【Be2】1720,13838,19631,9933,25951,36427, , isAndC:False, sT:21814, sP:6.9771, sB:0.4111, nT:107500, nP:10.047, nB:0.4248,
322, //Score:8249198.17043757, Beny:【Be1】And:-1,Or:7910,DAll:-153834,Sum:153834,Sub:8249198.17043757,Sub2:4464,SB:0.2841,0:-2834(0.018),1:-19520(0.127),2:-31157(0.203),3:-14992(0.097),4:-29547(0.192),5:-55784(0.363),, 【Be2】2834,19520,31157,14992,29547,55784, , isAndC:False, sT:43944, sP:6.9452, sB:0.2841, nT:153834, nP:8.2364, nB:0.3389,
1216, //Score:8187977.39232882, Beny:【Be1】And:-1,Or:7910,DAll:-166214,Sum:166214,Sub:8187977.39232882,Sub2:4459,SB:0.2565,0:-3114(0.019),1:-21376(0.129),2:-33114(0.199),3:-15994(0.096),4:-32163(0.194),5:-60453(0.364),, 【Be2】3114,21376,33114,15994,32163,60453, , isAndC:False, sT:41868, sP:6.7583, sB:0.2565, nT:166214, nP:8.3317, nB:0.344,  #End#
LowScoreRank , T0:False , T1:13 , T2:16 , T3:
96, //Score:8701923.05083605, Beny:【Be1】And:-1,Or:2086,DAll:-235447,Sum:235447,Sub:8701923.05083605,Sub2:3704,SB:0.2674,0:-4642(0.02),1:-31908(0.136),2:-47555(0.202),3:-22121(0.094),4:-47416(0.201),5:-81805(0.347),, 【Be2】4642,31908,47555,22121,47416,81805, , isAndC:False, sT:59994, sP:6.7315, sB:0.2674, nT:235447, nP:8.6713, nB:0.1969,
544, //Score:8412021.78372014, Beny:【Be1】And:-1,Or:2086,DAll:-236538,Sum:236538,Sub:8412021.78372014,Sub2:3934,SB:0.2197,0:-4521(0.019),1:-31686(0.134),2:-47475(0.201),3:-22211(0.094),4:-47713(0.202),5:-82932(0.351),, 【Be2】4521,31686,47475,22211,47713,82932, , isAndC:False, sT:55277, sP:6.7674, sB:0.2197, nT:236538, nP:8.662, nB:0.2358,
8371, //Score:8407231.5344168, Beny:【Be1】And:-1,Or:2086,DAll:-150379,Sum:150379,Sub:8407231.5344168,Sub2:4311,SB:0.3187,0:-2475(0.016),1:-20558(0.137),2:-27106(0.18),3:-12862(0.086),4:-37483(0.249),5:-49895(0.332),, 【Be2】2475,20558,27106,12862,37483,49895, , isAndC:False, sT:26671, sP:7.3456, sB:0.3187, nT:150379, nP:10.3289, nB:0.3333,
6133, //Score:8292505.99912802, Beny:【Be1】And:-1,Or:2086,DAll:-165061,Sum:165061,Sub:8292505.99912802,Sub2:4088,SB:0.3051,0:-2705(0.016),1:-22644(0.137),2:-30595(0.185),3:-14575(0.088),4:-40396(0.245),5:-54146(0.328),, 【Be2】2705,22644,30595,14575,40396,54146, , isAndC:False, sT:30259, sP:7.3706, sB:0.3051, nT:165061, nP:10.1595, nB:0.2833,
8373, //Score:8266184.23711296, Beny:【Be1】And:-1,Or:2086,DAll:-107139,Sum:107139,Sub:8266184.23711296,Sub2:4706,SB:0.4096,0:-1711(0.016),1:-13783(0.129),2:-19545(0.182),3:-9894(0.092),4:-25900(0.242),5:-36306(0.339),, 【Be2】1711,13783,19545,9894,25900,36306, , isAndC:False, sT:21624, sP:6.9961, sB:0.4096, nT:107139, nP:10.0552, nB:0.4272,
1216, //Score:8216929.06964426, Beny:【Be1】And:-1,Or:2086,DAll:-166001,Sum:166001,Sub:8216929.06964426,Sub2:4462,SB:0.2584,0:-3110(0.019),1:-21343(0.129),2:-33067(0.199),3:-15971(0.096),4:-32128(0.194),5:-60382(0.364),, 【Be2】3110,21343,33067,15971,32128,60382, , isAndC:False, sT:41801, sP:6.7592, sB:0.2584, nT:166001, nP:8.3314, nB:0.3446,
322, //Score:8214027.40880945, Beny:【Be1】And:-1,Or:2086,DAll:-153600,Sum:153600,Sub:8214027.40880945,Sub2:4469,SB:0.2816,0:-2825(0.018),1:-19490(0.127),2:-31110(0.203),3:-14959(0.097),4:-29516(0.192),5:-55700(0.363),, 【Be2】2825,19490,31110,14959,29516,55700, , isAndC:False, sT:43874, sP:6.946, sB:0.2816, nT:153600, nP:8.236, nB:0.3396,  #End#
LowScoreRank , T0:False , T1:13 , T2:17 , T3:
96, //Score:8735469.58102614, Beny:【Be1】And:-1,Or:8165,DAll:-235106,Sum:235106,Sub:8735469.58102614,Sub2:3707,SB:0.2696,0:-4636(0.02),1:-31831(0.135),2:-47518(0.202),3:-22118(0.094),4:-47291(0.201),5:-81712(0.348),, 【Be2】4636,31831,47518,22118,47291,81712, , isAndC:False, sT:59991, sP:6.7304, sB:0.2696, nT:235106, nP:8.6557, nB:0.1975,
8371, //Score:8453199.09155322, Beny:【Be1】And:-1,Or:8165,DAll:-150790,Sum:150790,Sub:8453199.09155322,Sub2:4310,SB:0.3218,0:-2485(0.016),1:-20607(0.137),2:-27213(0.18),3:-12915(0.086),4:-37497(0.249),5:-50073(0.332),, 【Be2】2485,20607,27213,12915,37497,50073, , isAndC:False, sT:26876, sP:7.3138, sB:0.3218, nT:150790, nP:10.3023, nB:0.3333,
544, //Score:8437883.94164625, Beny:【Be1】And:-1,Or:8165,DAll:-236133,Sum:236133,Sub:8437883.94164625,Sub2:3940,SB:0.221,0:-4516(0.019),1:-31594(0.134),2:-47415(0.201),3:-22205(0.094),4:-47566(0.201),5:-82837(0.351),, 【Be2】4516,31594,47415,22205,47566,82837, , isAndC:False, sT:55282, sP:6.7636, sB:0.221, nT:236133, nP:8.6477, nB:0.237,
6133, //Score:8343979.98278065, Beny:【Be1】And:-1,Or:8165,DAll:-165531,Sum:165531,Sub:8343979.98278065,Sub2:4084,SB:0.3088,0:-2716(0.016),1:-22708(0.137),2:-30716(0.186),3:-14642(0.088),4:-40408(0.244),5:-54341(0.328),, 【Be2】2716,22708,30716,14642,40408,54341, , isAndC:False, sT:30483, sP:7.3413, sB:0.3088, nT:165531, nP:10.1385, nB:0.2827,
8373, //Score:8325867.8109153, Beny:【Be1】And:-1,Or:8165,DAll:-107508,Sum:107508,Sub:8325867.8109153,Sub2:4699,SB:0.4159,0:-1722(0.016),1:-13829(0.129),2:-19647(0.183),3:-9941(0.092),4:-25905(0.241),5:-36464(0.339),, 【Be2】1722,13829,19647,9941,25905,36464, , isAndC:False, sT:21824, sP:6.9586, sB:0.4159, nT:107508, nP:10.0224, nB:0.4265,
322, //Score:8266043.80338321, Beny:【Be1】And:-1,Or:8165,DAll:-152947,Sum:152947,Sub:8266043.80338321,Sub2:4483,SB:0.2852,0:-2816(0.018),1:-19364(0.127),2:-31001(0.203),3:-14937(0.098),4:-29279(0.191),5:-55550(0.363),, 【Be2】2816,19364,31001,14937,29279,55550, , isAndC:False, sT:43847, sP:6.9361, sB:0.2852, nT:152947, nP:8.198, nB:0.3426,
1216, //Score:8218832.44373186, Beny:【Be1】And:-1,Or:8165,DAll:-165307,Sum:165307,Sub:8218832.44373186,Sub2:4474,SB:0.2588,0:-3099(0.019),1:-21204(0.128),2:-32962(0.199),3:-15948(0.096),4:-31891(0.193),5:-60203(0.364),, 【Be2】3099,21204,32962,15948,31891,60203, , isAndC:False, sT:41772, sP:6.743, sB:0.2588, nT:165307, nP:8.2986, nB:0.347,  #End#
LowScoreRank , T0:False , T1:13 , T2:18 , T3:
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:7995,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
8371, //Score:8490299.19320836, Beny:【Be1】And:-1,Or:7995,DAll:-151136,Sum:151136,Sub:8490299.19320836,Sub2:4318,SB:0.3224,0:-2486(0.016),1:-20644(0.137),2:-27275(0.18),3:-12949(0.086),4:-37584(0.249),5:-50198(0.332),, 【Be2】2486,20644,27275,12949,37584,50198, , isAndC:False, sT:26944, sP:7.3194, sB:0.3224, nT:151136, nP:10.3077, nB:0.3343,
544, //Score:8442336.19184688, Beny:【Be1】And:-1,Or:7995,DAll:-236925,Sum:236925,Sub:8442336.19184688,Sub2:3937,SB:0.2205,0:-4528(0.019),1:-31725(0.134),2:-47559(0.201),3:-22261(0.094),4:-47762(0.202),5:-83090(0.351),, 【Be2】4528,31725,47559,22261,47762,83090, , isAndC:False, sT:55334, sP:6.766, sB:0.2205, nT:236925, nP:8.6582, nB:0.2363,
6133, //Score:8368016.65106104, Beny:【Be1】And:-1,Or:7995,DAll:-165818,Sum:165818,Sub:8368016.65106104,Sub2:4095,SB:0.3082,0:-2716(0.016),1:-22730(0.137),2:-30764(0.186),3:-14662(0.088),4:-40497(0.244),5:-54449(0.328),, 【Be2】2716,22730,30764,14662,40497,54449, , isAndC:False, sT:30535, sP:7.3461, sB:0.3082, nT:165818, nP:10.1409, nB:0.2845,
8373, //Score:8348529.16051795, Beny:【Be1】And:-1,Or:7995,DAll:-107896,Sum:107896,Sub:8348529.16051795,Sub2:4713,SB:0.4136,0:-1722(0.016),1:-13869(0.129),2:-19714(0.183),3:-9981(0.093),4:-26001(0.241),5:-36609(0.339),, 【Be2】1722,13869,19714,9981,26001,36609, , isAndC:False, sT:21903, sP:6.9656, sB:0.4136, nT:107896, nP:10.0274, nB:0.4279,
322, //Score:8261394.69348019, Beny:【Be1】And:-1,Or:7995,DAll:-154137,Sum:154137,Sub:8261394.69348019,Sub2:4474,SB:0.283,0:-2835(0.018),1:-19544(0.127),2:-31223(0.203),3:-15027(0.097),4:-29588(0.192),5:-55920(0.363),, 【Be2】2835,19544,31223,15027,29588,55920, , isAndC:False, sT:43987, sP:6.9422, sB:0.283, nT:154137, nP:8.2298, nB:0.3406,
8375, //Score:8247260.42944439, Beny:【Be1】And:-1,Or:7995,DAll:-94367,Sum:94367,Sub:8247260.42944439,Sub2:4899,SB:0.4497,0:-1450(0.015),1:-11950(0.127),2:-17559(0.186),3:-9013(0.096),4:-21722(0.23),5:-32673(0.346),, 【Be2】1450,11950,17559,9013,21722,32673, , isAndC:False, sT:20368, sP:6.7709, sB:0.4497, nT:94367, nP:9.6196, nB:0.4634,  #End#
LowScoreRank , T0:False , T1:13 , T2:19 , T3:
96, //Score:8721700.23993376, Beny:【Be1】And:-1,Or:2280,DAll:-235749,Sum:235749,Sub:8721700.23993376,Sub2:3705,SB:0.2681,0:-4649(0.02),1:-31938(0.135),2:-47619(0.202),3:-22168(0.094),4:-47460(0.201),5:-81915(0.347),, 【Be2】4649,31938,47619,22168,47460,81915, , isAndC:False, sT:60016, sP:6.732, sB:0.2681, nT:235749, nP:8.6687, nB:0.1969,
544, //Score:8431672.73299839, Beny:【Be1】And:-1,Or:2280,DAll:-236802,Sum:236802,Sub:8431672.73299839,Sub2:3934,SB:0.2204,0:-4528(0.019),1:-31715(0.134),2:-47528(0.201),3:-22248(0.094),4:-47749(0.202),5:-83034(0.351),, 【Be2】4528,31715,47528,22248,47749,83034, , isAndC:False, sT:55316, sP:6.7669, sB:0.2204, nT:236802, nP:8.6606, nB:0.2358,
8371, //Score:8428894.36635564, Beny:【Be1】And:-1,Or:2280,DAll:-150944,Sum:150944,Sub:8428894.36635564,Sub2:4317,SB:0.3183,0:-2484(0.016),1:-20618(0.137),2:-27225(0.18),3:-12932(0.086),4:-37565(0.249),5:-50120(0.332),, 【Be2】2484,20618,27225,12932,37565,50120, , isAndC:False, sT:26898, sP:7.3255, sB:0.3183, nT:150944, nP:10.3155, nB:0.3341,
6133, //Score:8310455.22739202, Beny:【Be1】And:-1,Or:2280,DAll:-165626,Sum:165626,Sub:8310455.22739202,Sub2:4094,SB:0.3045,0:-2714(0.016),1:-22704(0.137),2:-30714(0.185),3:-14645(0.088),4:-40478(0.244),5:-54371(0.328),, 【Be2】2714,22704,30714,14645,40478,54371, , isAndC:False, sT:30489, sP:7.3514, sB:0.3045, nT:165626, nP:10.1478, nB:0.2843,
8373, //Score:8290035.64880051, Beny:【Be1】And:-1,Or:2280,DAll:-107704,Sum:107704,Sub:8290035.64880051,Sub2:4712,SB:0.4087,0:-1720(0.016),1:-13843(0.129),2:-19664(0.183),3:-9964(0.093),4:-25982(0.241),5:-36531(0.339),, 【Be2】1720,13843,19664,9964,25982,36531, , isAndC:False, sT:21857, sP:6.9723, sB:0.4087, nT:107704, nP:10.0378, nB:0.4279,
322, //Score:8235334.84782143, Beny:【Be1】And:-1,Or:2280,DAll:-153972,Sum:153972,Sub:8235334.84782143,Sub2:4472,SB:0.2819,0:-2834(0.018),1:-19528(0.127),2:-31179(0.202),3:-15010(0.097),4:-29570(0.192),5:-55851(0.363),, 【Be2】2834,19528,31179,15010,29570,55851, , isAndC:False, sT:43946, sP:6.9455, sB:0.2819, nT:153972, nP:8.2344, nB:0.3401,
8375, //Score:8195506.34626946, Beny:【Be1】And:-1,Or:2280,DAll:-94175,Sum:94175,Sub:8195506.34626946,Sub2:4899,SB:0.4451,0:-1448(0.015),1:-11924(0.127),2:-17509(0.186),3:-8996(0.096),4:-21703(0.23),5:-32595(0.346),, 【Be2】1448,11924,17509,8996,21703,32595, , isAndC:False, sT:20321, sP:6.778, sB:0.4451, nT:94175, nP:9.6307, nB:0.4634,  #End#
LowScoreRank , T0:False , T1:13 , T2:20 , T3:
96, //Score:8704518.73360686, Beny:【Be1】And:-1,Or:6096,DAll:-235240,Sum:235240,Sub:8704518.73360686,Sub2:3692,SB:0.2696,0:-4646(0.02),1:-31898(0.136),2:-47523(0.202),3:-22094(0.094),4:-47397(0.201),5:-81682(0.347),, 【Be2】4646,31898,47523,22094,47397,81682, , isAndC:False, sT:59959, sP:6.7348, sB:0.2696, nT:235240, nP:8.6734, nB:0.1949,
544, //Score:8399394.66340618, Beny:【Be1】And:-1,Or:6096,DAll:-236345,Sum:236345,Sub:8399394.66340618,Sub2:3928,SB:0.22,0:-4525(0.019),1:-31671(0.134),2:-47430(0.201),3:-22177(0.094),4:-47702(0.202),5:-82840(0.351),, 【Be2】4525,31671,47430,22177,47702,82840, , isAndC:False, sT:55253, sP:6.7693, sB:0.22, nT:236345, nP:8.6644, nB:0.235,
8371, //Score:8286382.49599806, Beny:【Be1】And:-1,Or:6096,DAll:-149766,Sum:149766,Sub:8286382.49599806,Sub2:4281,SB:0.3155,0:-2474(0.017),1:-20545(0.137),2:-26968(0.18),3:-12745(0.085),4:-37433(0.25),5:-49601(0.331),, 【Be2】2474,20545,26968,12745,37433,49601, , isAndC:False, sT:26649, sP:7.3499, sB:0.3155, nT:149766, nP:10.3488, nB:0.3291,
322, //Score:8186566.63982835, Beny:【Be1】And:-1,Or:6096,DAll:-153247,Sum:153247,Sub:8186566.63982835,Sub2:4456,SB:0.2822,0:-2829(0.018),1:-19464(0.127),2:-31037(0.203),3:-14886(0.097),4:-29485(0.192),5:-55546(0.362),, 【Be2】2829,19464,31037,14886,29485,55546, , isAndC:False, sT:43827, sP:6.9515, sB:0.2822, nT:153247, nP:8.242, nB:0.3379,
6133, //Score:8183310.91229447, Beny:【Be1】And:-1,Or:6096,DAll:-164448,Sum:164448,Sub:8183310.91229447,Sub2:4060,SB:0.3026,0:-2704(0.016),1:-22631(0.138),2:-30457(0.185),3:-14458(0.088),4:-40346(0.245),5:-53852(0.327),, 【Be2】2704,22631,30457,14458,40346,53852, , isAndC:False, sT:30239, sP:7.3744, sB:0.3026, nT:164448, nP:10.1769, nB:0.2794,
1216, //Score:8155167.76181929, Beny:【Be1】And:-1,Or:6096,DAll:-165657,Sum:165657,Sub:8155167.76181929,Sub2:4453,SB:0.2561,0:-3110(0.019),1:-21323(0.129),2:-32982(0.199),3:-15902(0.096),4:-32102(0.194),5:-60238(0.364),, 【Be2】3110,21323,32982,15902,32102,60238, , isAndC:False, sT:41758, sP:6.7644, sB:0.2561, nT:165657, nP:8.3368, nB:0.3439,
8373, //Score:8133414.61505391, Beny:【Be1】And:-1,Or:6096,DAll:-106526,Sum:106526,Sub:8133414.61505391,Sub2:4667,SB:0.4062,0:-1710(0.016),1:-13770(0.129),2:-19407(0.182),3:-9777(0.092),4:-25850(0.243),5:-36012(0.338),, 【Be2】1710,13770,19407,9777,25850,36012, , isAndC:False, sT:21606, sP:6.9998, sB:0.4062, nT:106526, nP:10.0815, nB:0.4219,  #End#
LowScoreRank , T0:False , T1:13 , T2:21 , T3:
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:7787,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
8371, //Score:8490299.19320836, Beny:【Be1】And:-1,Or:7787,DAll:-151136,Sum:151136,Sub:8490299.19320836,Sub2:4318,SB:0.3224,0:-2486(0.016),1:-20644(0.137),2:-27275(0.18),3:-12949(0.086),4:-37584(0.249),5:-50198(0.332),, 【Be2】2486,20644,27275,12949,37584,50198, , isAndC:False, sT:26944, sP:7.3194, sB:0.3224, nT:151136, nP:10.3077, nB:0.3343,
544, //Score:8442336.19184688, Beny:【Be1】And:-1,Or:7787,DAll:-236925,Sum:236925,Sub:8442336.19184688,Sub2:3937,SB:0.2205,0:-4528(0.019),1:-31725(0.134),2:-47559(0.201),3:-22261(0.094),4:-47762(0.202),5:-83090(0.351),, 【Be2】4528,31725,47559,22261,47762,83090, , isAndC:False, sT:55334, sP:6.766, sB:0.2205, nT:236925, nP:8.6582, nB:0.2363,
6133, //Score:8368016.65106104, Beny:【Be1】And:-1,Or:7787,DAll:-165818,Sum:165818,Sub:8368016.65106104,Sub2:4095,SB:0.3082,0:-2716(0.016),1:-22730(0.137),2:-30764(0.186),3:-14662(0.088),4:-40497(0.244),5:-54449(0.328),, 【Be2】2716,22730,30764,14662,40497,54449, , isAndC:False, sT:30535, sP:7.3461, sB:0.3082, nT:165818, nP:10.1409, nB:0.2845,
8373, //Score:8348529.16051795, Beny:【Be1】And:-1,Or:7787,DAll:-107896,Sum:107896,Sub:8348529.16051795,Sub2:4713,SB:0.4136,0:-1722(0.016),1:-13869(0.129),2:-19714(0.183),3:-9981(0.093),4:-26001(0.241),5:-36609(0.339),, 【Be2】1722,13869,19714,9981,26001,36609, , isAndC:False, sT:21903, sP:6.9656, sB:0.4136, nT:107896, nP:10.0274, nB:0.4279,
322, //Score:8261394.69348019, Beny:【Be1】And:-1,Or:7787,DAll:-154137,Sum:154137,Sub:8261394.69348019,Sub2:4474,SB:0.283,0:-2835(0.018),1:-19544(0.127),2:-31223(0.203),3:-15027(0.097),4:-29588(0.192),5:-55920(0.363),, 【Be2】2835,19544,31223,15027,29588,55920, , isAndC:False, sT:43987, sP:6.9422, sB:0.283, nT:154137, nP:8.2298, nB:0.3406,
8375, //Score:8247260.42944439, Beny:【Be1】And:-1,Or:7787,DAll:-94367,Sum:94367,Sub:8247260.42944439,Sub2:4899,SB:0.4497,0:-1450(0.015),1:-11950(0.127),2:-17559(0.186),3:-9013(0.096),4:-21722(0.23),5:-32673(0.346),, 【Be2】1450,11950,17559,9013,21722,32673, , isAndC:False, sT:20368, sP:6.7709, sB:0.4497, nT:94367, nP:9.6196, nB:0.4634,  #End#
LowScoreRank , T0:False , T1:13 , T2:22 , T3:
96, //Score:8703977.47798604, Beny:【Be1】And:-1,Or:4100,DAll:-234409,Sum:234409,Sub:8703977.47798604,Sub2:3689,SB:0.2712,0:-4634(0.02),1:-31805(0.136),2:-47323(0.202),3:-22001(0.094),4:-47257(0.202),5:-81389(0.347),, 【Be2】4634,31805,47323,22001,47257,81389, , isAndC:False, sT:59929, sP:6.7344, sB:0.2712, nT:234409, nP:8.6789, nB:0.1942,
544, //Score:8431972.42349341, Beny:【Be1】And:-1,Or:4100,DAll:-235496,Sum:235496,Sub:8431972.42349341,Sub2:3927,SB:0.2228,0:-4508(0.019),1:-31570(0.134),2:-47235(0.201),3:-22095(0.094),4:-47562(0.202),5:-82526(0.35),, 【Be2】4508,31570,47235,22095,47562,82526, , isAndC:False, sT:55167, sP:6.7735, sB:0.2228, nT:235496, nP:8.6702, nB:0.2345,
8371, //Score:8297827.3063284, Beny:【Be1】And:-1,Or:4100,DAll:-148395,Sum:148395,Sub:8297827.3063284,Sub2:4281,SB:0.3197,0:-2451(0.017),1:-20380(0.137),2:-26632(0.179),3:-12642(0.085),4:-37180(0.251),5:-49110(0.331),, 【Be2】2451,20380,26632,12642,37180,49110, , isAndC:False, sT:26396, sP:7.378, sB:0.3197, nT:148395, nP:10.3769, nB:0.328,
1216, //Score:8168977.33381476, Beny:【Be1】And:-1,Or:4100,DAll:-164696,Sum:164696,Sub:8168977.33381476,Sub2:4455,SB:0.2587,0:-3094(0.019),1:-21205(0.129),2:-32740(0.199),3:-15833(0.096),4:-31937(0.194),5:-59887(0.364),, 【Be2】3094,21205,32740,15833,31937,59887, , isAndC:False, sT:41643, sP:6.7701, sB:0.2587, nT:164696, nP:8.3431, nB:0.3441,
6133, //Score:8147924.69306167, Beny:【Be1】And:-1,Or:4100,DAll:-163077,Sum:163077,Sub:8147924.69306167,Sub2:4058,SB:0.3032,0:-2681(0.016),1:-22466(0.138),2:-30121(0.185),3:-14355(0.088),4:-40093(0.246),5:-53361(0.327),, 【Be2】2681,22466,30121,14355,40093,53361, , isAndC:False, sT:29995, sP:7.3963, sB:0.3032, nT:163077, nP:10.2011, nB:0.2779,
322, //Score:8143706.38033312, Beny:【Be1】And:-1,Or:4100,DAll:-152186,Sum:152186,Sub:8143706.38033312,Sub2:4458,SB:0.2814,0:-2812(0.018),1:-19335(0.127),2:-30756(0.202),3:-14812(0.097),4:-29313(0.193),5:-55158(0.362),, 【Be2】2812,19335,30756,14812,29313,55158, , isAndC:False, sT:43714, sP:6.9595, sB:0.2814, nT:152186, nP:8.2506, nB:0.3382,
8373, //Score:8109058.53142573, Beny:【Be1】And:-1,Or:4100,DAll:-105155,Sum:105155,Sub:8109058.53142573,Sub2:4672,SB:0.4091,0:-1687(0.016),1:-13605(0.129),2:-19071(0.181),3:-9674(0.092),4:-25597(0.243),5:-35521(0.338),, 【Be2】1687,13605,19071,9674,25597,35521, , isAndC:False, sT:21360, sP:7.0282, sB:0.4091, nT:105155, nP:10.1177, nB:0.4215,  #End#
LowScoreRank , T0:False , T1:13 , T2:23 , T3:
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:3359,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
8371, //Score:8490299.19320836, Beny:【Be1】And:-1,Or:3359,DAll:-151136,Sum:151136,Sub:8490299.19320836,Sub2:4318,SB:0.3224,0:-2486(0.016),1:-20644(0.137),2:-27275(0.18),3:-12949(0.086),4:-37584(0.249),5:-50198(0.332),, 【Be2】2486,20644,27275,12949,37584,50198, , isAndC:False, sT:26944, sP:7.3194, sB:0.3224, nT:151136, nP:10.3077, nB:0.3343,
544, //Score:8442336.19184688, Beny:【Be1】And:-1,Or:3359,DAll:-236925,Sum:236925,Sub:8442336.19184688,Sub2:3937,SB:0.2205,0:-4528(0.019),1:-31725(0.134),2:-47559(0.201),3:-22261(0.094),4:-47762(0.202),5:-83090(0.351),, 【Be2】4528,31725,47559,22261,47762,83090, , isAndC:False, sT:55334, sP:6.766, sB:0.2205, nT:236925, nP:8.6582, nB:0.2363,
6133, //Score:8368016.65106104, Beny:【Be1】And:-1,Or:3359,DAll:-165818,Sum:165818,Sub:8368016.65106104,Sub2:4095,SB:0.3082,0:-2716(0.016),1:-22730(0.137),2:-30764(0.186),3:-14662(0.088),4:-40497(0.244),5:-54449(0.328),, 【Be2】2716,22730,30764,14662,40497,54449, , isAndC:False, sT:30535, sP:7.3461, sB:0.3082, nT:165818, nP:10.1409, nB:0.2845,
8373, //Score:8348529.16051795, Beny:【Be1】And:-1,Or:3359,DAll:-107896,Sum:107896,Sub:8348529.16051795,Sub2:4713,SB:0.4136,0:-1722(0.016),1:-13869(0.129),2:-19714(0.183),3:-9981(0.093),4:-26001(0.241),5:-36609(0.339),, 【Be2】1722,13869,19714,9981,26001,36609, , isAndC:False, sT:21903, sP:6.9656, sB:0.4136, nT:107896, nP:10.0274, nB:0.4279,
322, //Score:8261394.69348019, Beny:【Be1】And:-1,Or:3359,DAll:-154137,Sum:154137,Sub:8261394.69348019,Sub2:4474,SB:0.283,0:-2835(0.018),1:-19544(0.127),2:-31223(0.203),3:-15027(0.097),4:-29588(0.192),5:-55920(0.363),, 【Be2】2835,19544,31223,15027,29588,55920, , isAndC:False, sT:43987, sP:6.9422, sB:0.283, nT:154137, nP:8.2298, nB:0.3406,
8375, //Score:8247260.42944439, Beny:【Be1】And:-1,Or:3359,DAll:-94367,Sum:94367,Sub:8247260.42944439,Sub2:4899,SB:0.4497,0:-1450(0.015),1:-11950(0.127),2:-17559(0.186),3:-9013(0.096),4:-21722(0.23),5:-32673(0.346),, 【Be2】1450,11950,17559,9013,21722,32673, , isAndC:False, sT:20368, sP:6.7709, sB:0.4497, nT:94367, nP:9.6196, nB:0.4634,  #End#
LowScoreRank , T0:False , T1:13 , T2:24 , T3:
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:8031,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
8371, //Score:8490299.19320836, Beny:【Be1】And:-1,Or:8031,DAll:-151136,Sum:151136,Sub:8490299.19320836,Sub2:4318,SB:0.3224,0:-2486(0.016),1:-20644(0.137),2:-27275(0.18),3:-12949(0.086),4:-37584(0.249),5:-50198(0.332),, 【Be2】2486,20644,27275,12949,37584,50198, , isAndC:False, sT:26944, sP:7.3194, sB:0.3224, nT:151136, nP:10.3077, nB:0.3343,
544, //Score:8442336.19184688, Beny:【Be1】And:-1,Or:8031,DAll:-236925,Sum:236925,Sub:8442336.19184688,Sub2:3937,SB:0.2205,0:-4528(0.019),1:-31725(0.134),2:-47559(0.201),3:-22261(0.094),4:-47762(0.202),5:-83090(0.351),, 【Be2】4528,31725,47559,22261,47762,83090, , isAndC:False, sT:55334, sP:6.766, sB:0.2205, nT:236925, nP:8.6582, nB:0.2363,
6133, //Score:8368016.65106104, Beny:【Be1】And:-1,Or:8031,DAll:-165818,Sum:165818,Sub:8368016.65106104,Sub2:4095,SB:0.3082,0:-2716(0.016),1:-22730(0.137),2:-30764(0.186),3:-14662(0.088),4:-40497(0.244),5:-54449(0.328),, 【Be2】2716,22730,30764,14662,40497,54449, , isAndC:False, sT:30535, sP:7.3461, sB:0.3082, nT:165818, nP:10.1409, nB:0.2845,
8373, //Score:8348529.16051795, Beny:【Be1】And:-1,Or:8031,DAll:-107896,Sum:107896,Sub:8348529.16051795,Sub2:4713,SB:0.4136,0:-1722(0.016),1:-13869(0.129),2:-19714(0.183),3:-9981(0.093),4:-26001(0.241),5:-36609(0.339),, 【Be2】1722,13869,19714,9981,26001,36609, , isAndC:False, sT:21903, sP:6.9656, sB:0.4136, nT:107896, nP:10.0274, nB:0.4279,
322, //Score:8261394.69348019, Beny:【Be1】And:-1,Or:8031,DAll:-154137,Sum:154137,Sub:8261394.69348019,Sub2:4474,SB:0.283,0:-2835(0.018),1:-19544(0.127),2:-31223(0.203),3:-15027(0.097),4:-29588(0.192),5:-55920(0.363),, 【Be2】2835,19544,31223,15027,29588,55920, , isAndC:False, sT:43987, sP:6.9422, sB:0.283, nT:154137, nP:8.2298, nB:0.3406,
8375, //Score:8247260.42944439, Beny:【Be1】And:-1,Or:8031,DAll:-94367,Sum:94367,Sub:8247260.42944439,Sub2:4899,SB:0.4497,0:-1450(0.015),1:-11950(0.127),2:-17559(0.186),3:-9013(0.096),4:-21722(0.23),5:-32673(0.346),, 【Be2】1450,11950,17559,9013,21722,32673, , isAndC:False, sT:20368, sP:6.7709, sB:0.4497, nT:94367, nP:9.6196, nB:0.4634,  #End#
LowScoreRank , T0:False , T1:13 , T2:25 , T3:
96, //Score:8728745.33603681, Beny:【Be1】And:-1,Or:6068,DAll:-235657,Sum:235657,Sub:8728745.33603681,Sub2:3706,SB:0.2684,0:-4646(0.02),1:-31935(0.136),2:-47585(0.202),3:-22144(0.094),4:-47457(0.201),5:-81890(0.347),, 【Be2】4646,31935,47585,22144,47457,81890, , isAndC:False, sT:60007, sP:6.7326, sB:0.2684, nT:235657, nP:8.6704, nB:0.1974,
8371, //Score:8460220.98805439, Beny:【Be1】And:-1,Or:6068,DAll:-150773,Sum:150773,Sub:8460220.98805439,Sub2:4318,SB:0.3208,0:-2481(0.016),1:-20614(0.137),2:-27161(0.18),3:-12895(0.086),4:-37556(0.249),5:-50066(0.332),, 【Be2】2481,20614,27161,12895,37556,50066, , isAndC:False, sT:26863, sP:7.3305, sB:0.3208, nT:150773, nP:10.3224, nB:0.3347,
544, //Score:8428579.67917302, Beny:【Be1】And:-1,Or:6068,DAll:-236724,Sum:236724,Sub:8428579.67917302,Sub2:3938,SB:0.2199,0:-4525(0.019),1:-31710(0.134),2:-47494(0.201),3:-22224(0.094),4:-47749(0.202),5:-83022(0.351),, 【Be2】4525,31710,47494,22224,47749,83022, , isAndC:False, sT:55297, sP:6.7686, sB:0.2199, nT:236724, nP:8.6623, nB:0.2365,
6133, //Score:8339901.55466525, Beny:【Be1】And:-1,Or:6068,DAll:-165455,Sum:165455,Sub:8339901.55466525,Sub2:4095,SB:0.3068,0:-2711(0.016),1:-22700(0.137),2:-30650(0.185),3:-14608(0.088),4:-40469(0.245),5:-54317(0.328),, 【Be2】2711,22700,30650,14608,40469,54317, , isAndC:False, sT:30459, sP:7.3558, sB:0.3068, nT:165455, nP:10.1539, nB:0.2847,
8373, //Score:8321519.74928172, Beny:【Be1】And:-1,Or:6068,DAll:-107533,Sum:107533,Sub:8321519.74928172,Sub2:4715,SB:0.412,0:-1717(0.016),1:-13839(0.129),2:-19600(0.182),3:-9927(0.092),4:-25973(0.242),5:-36477(0.339),, 【Be2】1717,13839,19600,9927,25973,36477, , isAndC:False, sT:21822, sP:6.9778, sB:0.412, nT:107533, nP:10.047, nB:0.4288,
322, //Score:8249477.90781868, Beny:【Be1】And:-1,Or:6068,DAll:-153847,Sum:153847,Sub:8249477.90781868,Sub2:4476,SB:0.2826,0:-2831(0.018),1:-19523(0.127),2:-31125(0.202),3:-14982(0.097),4:-29568(0.192),5:-55818(0.363),, 【Be2】2831,19523,31125,14982,29568,55818, , isAndC:False, sT:43940, sP:6.9459, sB:0.2826, nT:153847, nP:8.2375, nB:0.3411,
1216, //Score:8220620.31805694, Beny:【Be1】And:-1,Or:6068,DAll:-166208,Sum:166208,Sub:8220620.31805694,Sub2:4469,SB:0.2574,0:-3111(0.019),1:-21375(0.129),2:-33079(0.199),3:-15988(0.096),4:-32178(0.194),5:-60477(0.364),, 【Be2】3111,21375,33079,15988,32178,60477, , isAndC:False, sT:41868, sP:6.759, sB:0.2574, nT:166208, nP:8.3328, nB:0.3459,  #End#
LowScoreRank , T0:False , T1:13 , T2:26 , T3:
96, //Score:8745668.45411719, Beny:【Be1】And:-1,Or:2147,DAll:-235202,Sum:235202,Sub:8745668.45411719,Sub2:3700,SB:0.271,0:-4637(0.02),1:-31877(0.136),2:-47503(0.202),3:-22122(0.094),4:-47372(0.201),5:-81691(0.347),, 【Be2】4637,31877,47503,22122,47372,81691, , isAndC:False, sT:59970, sP:6.733, sB:0.271, nT:235202, nP:8.6714, nB:0.1963,
544, //Score:8493799.32620604, Beny:【Be1】And:-1,Or:2147,DAll:-236251,Sum:236251,Sub:8493799.32620604,Sub2:3933,SB:0.2245,0:-4515(0.019),1:-31652(0.134),2:-47409(0.201),3:-22204(0.094),4:-47649(0.202),5:-82822(0.351),, 【Be2】4515,31652,47409,22204,47649,82822, , isAndC:False, sT:55238, sP:6.77, sB:0.2245, nT:236251, nP:8.663, nB:0.2356,
8371, //Score:8454750.18102444, Beny:【Be1】And:-1,Or:2147,DAll:-150009,Sum:150009,Sub:8454750.18102444,Sub2:4306,SB:0.3242,0:-2465(0.016),1:-20522(0.137),2:-27023(0.18),3:-12828(0.086),4:-37452(0.25),5:-49719(0.331),, 【Be2】2465,20522,27023,12828,37452,49719, , isAndC:False, sT:26663, sP:7.3417, sB:0.3242, nT:150009, nP:10.34, nB:0.3329,
8373, //Score:8322143.1106197, Beny:【Be1】And:-1,Or:2147,DAll:-106671,Sum:106671,Sub:8322143.1106197,Sub2:4700,SB:0.4189,0:-1701(0.016),1:-13729(0.129),2:-19442(0.182),3:-9854(0.092),4:-25852(0.242),5:-36093(0.338),, 【Be2】1701,13729,19442,9854,25852,36093, , isAndC:False, sT:21594, sP:6.9876, sB:0.4189, nT:106671, nP:10.0715, nB:0.4268,
6133, //Score:8316289.24445207, Beny:【Be1】And:-1,Or:2147,DAll:-164719,Sum:164719,Sub:8316289.24445207,Sub2:4083,SB:0.3085,0:-2698(0.016),1:-22609(0.137),2:-30513(0.185),3:-14542(0.088),4:-40368(0.245),5:-53989(0.328),, 【Be2】2698,22609,30513,14542,40368,53989, , isAndC:False, sT:30268, sP:7.3645, sB:0.3085, nT:164719, nP:10.1687, nB:0.2829,
322, //Score:8278072.36703774, Beny:【Be1】And:-1,Or:2147,DAll:-153089,Sum:153089,Sub:8278072.36703774,Sub2:4466,SB:0.2876,0:-2817(0.018),1:-19427(0.127),2:-30987(0.202),3:-14928(0.098),4:-29434(0.192),5:-55496(0.363),, 【Be2】2817,19427,30987,14928,29434,55496, , isAndC:False, sT:43814, sP:6.9494, sB:0.2876, nT:153089, nP:8.2413, nB:0.3395,
1216, //Score:8252198.189149, Beny:【Be1】And:-1,Or:2147,DAll:-165473,Sum:165473,Sub:8252198.189149,Sub2:4459,SB:0.262,0:-3098(0.019),1:-21285(0.129),2:-32951(0.199),3:-15928(0.096),4:-32042(0.194),5:-60169(0.364),, 【Be2】3098,21285,32951,15928,32042,60169, , isAndC:False, sT:41734, sP:6.7596, sB:0.262, nT:165473, nP:8.3353, nB:0.3443,  #End#
LowScoreRank , T0:False , T1:13 , T2:27 , T3:
96, //Score:8584077.70366807, Beny:【Be1】And:-1,Or:2738,DAll:-234611,Sum:234611,Sub:8584077.70366807,Sub2:3660,SB:0.2678,0:-4629(0.02),1:-31881(0.136),2:-47449(0.202),3:-22069(0.094),4:-47311(0.202),5:-81272(0.346),, 【Be2】4629,31881,47449,22069,47311,81272, , isAndC:False, sT:59980, sP:6.7288, sB:0.2678, nT:234611, nP:8.6783, nB:0.1882,
544, //Score:8340516.37131619, Beny:【Be1】And:-1,Or:2738,DAll:-235733,Sum:235733,Sub:8340516.37131619,Sub2:3888,SB:0.2222,0:-4510(0.019),1:-31663(0.134),2:-47380(0.201),3:-22173(0.094),4:-47616(0.202),5:-82391(0.35),, 【Be2】4510,31663,47380,22173,47616,82391, , isAndC:False, sT:55264, sP:6.7643, sB:0.2222, nT:235733, nP:8.668, nB:0.2268,
8371, //Score:8092838.30232255, Beny:【Be1】And:-1,Or:2738,DAll:-149046,Sum:149046,Sub:8092838.30232255,Sub2:4206,SB:0.3142,0:-2460(0.017),1:-20511(0.138),2:-26926(0.181),3:-12760(0.086),4:-37332(0.25),5:-49057(0.329),, 【Be2】2460,20511,26926,12760,37332,49057, , isAndC:False, sT:26687, sP:7.3215, sB:0.3142, nT:149046, nP:10.365, nB:0.3132,
322, //Score:8073942.09410345, Beny:【Be1】And:-1,Or:2738,DAll:-152769,Sum:152769,Sub:8073942.09410345,Sub2:4395,SB:0.2835,0:-2818(0.018),1:-19464(0.127),2:-31014(0.203),3:-14918(0.098),4:-29415(0.193),5:-55140(0.361),, 【Be2】2818,19464,31014,14918,29415,55140, , isAndC:False, sT:43884, sP:6.9387, sB:0.2835, nT:152769, nP:8.2414, nB:0.326,
1216, //Score:8063788.20954705, Beny:【Be1】And:-1,Or:2738,DAll:-165227,Sum:165227,Sub:8063788.20954705,Sub2:4407,SB:0.2568,0:-3099(0.019),1:-21314(0.129),2:-32978(0.2),3:-15914(0.096),4:-32033(0.194),5:-59889(0.362),, 【Be2】3099,21314,32978,15914,32033,59889, , isAndC:False, sT:41838, sP:6.7478, sB:0.2568, nT:165227, nP:8.3358, nB:0.3347,
6133, //Score:8000504.57292509, Beny:【Be1】And:-1,Or:2738,DAll:-163728,Sum:163728,Sub:8000504.57292509,Sub2:3991,SB:0.3015,0:-2690(0.016),1:-22597(0.138),2:-30415(0.186),3:-14473(0.088),4:-40245(0.246),5:-53308(0.326),, 【Be2】2690,22597,30415,14473,40245,53308, , isAndC:False, sT:30294, sP:7.3477, sB:0.3015, nT:163728, nP:10.1909, nB:0.2646,
8373, //Score:7930382.86434176, Beny:【Be1】And:-1,Or:2738,DAll:-105806,Sum:105806,Sub:7930382.86434176,Sub2:4564,SB:0.4082,0:-1696(0.016),1:-13736(0.13),2:-19365(0.183),3:-9792(0.093),4:-25749(0.243),5:-35468(0.335),, 【Be2】1696,13736,19365,9792,25749,35468, , isAndC:False, sT:21643, sP:6.9643, sB:0.4082, nT:105806, nP:10.1025, nB:0.4001,  #End#
LowScoreRank , T0:False , T1:13 , T2:28 , T3:
96, //Score:8741676.83339356, Beny:【Be1】And:-1,Or:7077,DAll:-235219,Sum:235219,Sub:8741676.83339356,Sub2:3699,SB:0.2708,0:-4641(0.02),1:-31894(0.136),2:-47506(0.202),3:-22065(0.094),4:-47411(0.202),5:-81702(0.347),, 【Be2】4641,31894,47506,22065,47411,81702, , isAndC:False, sT:59948, sP:6.7359, sB:0.2708, nT:235219, nP:8.679, nB:0.1959,
544, //Score:8454138.37858019, Beny:【Be1】And:-1,Or:7077,DAll:-236284,Sum:236284,Sub:8454138.37858019,Sub2:3933,SB:0.2223,0:-4519(0.019),1:-31677(0.134),2:-47393(0.201),3:-22153(0.094),4:-47701(0.202),5:-82841(0.351),, 【Be2】4519,31677,47393,22153,47701,82841, , isAndC:False, sT:55210, sP:6.7736, sB:0.2223, nT:236284, nP:8.6703, nB:0.2354,
8371, //Score:8421484.39367552, Beny:【Be1】And:-1,Or:7077,DAll:-149934,Sum:149934,Sub:8421484.39367552,Sub2:4299,SB:0.3225,0:-2474(0.017),1:-20540(0.137),2:-26991(0.18),3:-12749(0.085),4:-37481(0.25),5:-49699(0.331),, 【Be2】2474,20540,26991,12749,37481,49699, , isAndC:False, sT:26617, sP:7.3652, sB:0.3225, nT:149934, nP:10.3572, nB:0.331,
6133, //Score:8308751.60914536, Beny:【Be1】And:-1,Or:7077,DAll:-164654,Sum:164654,Sub:8308751.60914536,Sub2:4079,SB:0.3084,0:-2704(0.016),1:-22630(0.137),2:-30485(0.185),3:-14464(0.088),4:-40396(0.245),5:-53975(0.328),, 【Be2】2704,22630,30485,14464,40396,53975, , isAndC:False, sT:30220, sP:7.3855, sB:0.3084, nT:164654, nP:10.1836, nB:0.2816,
8373, //Score:8275034.42918082, Beny:【Be1】And:-1,Or:7077,DAll:-106693,Sum:106693,Sub:8275034.42918082,Sub2:4691,SB:0.415,0:-1710(0.016),1:-13765(0.129),2:-19430(0.182),3:-9781(0.092),4:-25898(0.243),5:-36109(0.338),, 【Be2】1710,13765,19430,9781,25898,36109, , isAndC:False, sT:21575, sP:7.0167, sB:0.415, nT:106693, nP:10.0938, nB:0.4244,
322, //Score:8255041.41060675, Beny:【Be1】And:-1,Or:7077,DAll:-153244,Sum:153244,Sub:8255041.41060675,Sub2:4467,SB:0.2854,0:-2826(0.018),1:-19464(0.127),2:-31000(0.202),3:-14876(0.097),4:-29509(0.193),5:-55569(0.363),, 【Be2】2826,19464,31000,14876,29509,55569, , isAndC:False, sT:43787, sP:6.9589, sB:0.2854, nT:153244, nP:8.2531, nB:0.3395,
8375, //Score:8171025.80740917, Beny:【Be1】And:-1,Or:7077,DAll:-93164,Sum:93164,Sub:8171025.80740917,Sub2:4876,SB:0.4517,0:-1438(0.015),1:-11846(0.127),2:-17275(0.185),3:-8813(0.095),4:-21619(0.232),5:-32173(0.345),, 【Be2】1438,11846,17275,8813,21619,32173, , isAndC:False, sT:20040, sP:6.8228, sB:0.4517, nT:93164, nP:9.6904, nB:0.4598,  #End#
LowScoreRank , T0:False , T1:13 , T2:29 , T3:
96, //Score:8717419.26882886, Beny:【Be1】And:-1,Or:7979,DAll:-235704,Sum:235704,Sub:8717419.26882886,Sub2:3705,SB:0.2679,0:-4644(0.02),1:-31937(0.135),2:-47624(0.202),3:-22171(0.094),4:-47423(0.201),5:-81905(0.347),, 【Be2】4644,31937,47624,22171,47423,81905, , isAndC:False, sT:60029, sP:6.7296, sB:0.2679, nT:235704, nP:8.6651, nB:0.1968,
8371, //Score:8508709.11842311, Beny:【Be1】And:-1,Or:7979,DAll:-151012,Sum:151012,Sub:8508709.11842311,Sub2:4322,SB:0.3235,0:-2479(0.016),1:-20628(0.137),2:-27252(0.18),3:-12942(0.086),4:-37548(0.249),5:-50163(0.332),, 【Be2】2479,20628,27252,12942,37548,50163, , isAndC:False, sT:26928, sP:7.3168, sB:0.3235, nT:151012, nP:10.3068, nB:0.3348,
544, //Score:8440554.79055552, Beny:【Be1】And:-1,Or:7979,DAll:-236768,Sum:236768,Sub:8440554.79055552,Sub2:3937,SB:0.2206,0:-4522(0.019),1:-31708(0.134),2:-47536(0.201),3:-22253(0.094),4:-47711(0.202),5:-83038(0.351),, 【Be2】4522,31708,47536,22253,47711,83038, , isAndC:False, sT:55332, sP:6.7646, sB:0.2206, nT:236768, nP:8.6571, nB:0.2361,
6133, //Score:8340334.65245412, Beny:【Be1】And:-1,Or:7979,DAll:-165691,Sum:165691,Sub:8340334.65245412,Sub2:4090,SB:0.3072,0:-2713(0.016),1:-22724(0.137),2:-30747(0.186),3:-14657(0.088),4:-40457(0.244),5:-54393(0.328),, 【Be2】2713,22724,30747,14657,40457,54393, , isAndC:False, sT:30515, sP:7.3476, sB:0.3072, nT:165691, nP:10.1407, nB:0.2835,
8373, //Score:8310346.19467275, Beny:【Be1】And:-1,Or:7979,DAll:-107706,Sum:107706,Sub:8310346.19467275,Sub2:4704,SB:0.4124,0:-1719(0.016),1:-13858(0.129),2:-19683(0.183),3:-9973(0.093),4:-25940(0.241),5:-36533(0.339),, 【Be2】1719,13858,19683,9973,25940,36533, , isAndC:False, sT:21875, sP:6.9631, sB:0.4124, nT:107706, nP:10.0256, nB:0.4263,
322, //Score:8255378.0412161, Beny:【Be1】And:-1,Or:7979,DAll:-153915,Sum:153915,Sub:8255378.0412161,Sub2:4474,SB:0.2832,0:-2829(0.018),1:-19523(0.127),2:-31186(0.203),3:-15016(0.098),4:-29510(0.192),5:-55851(0.363),, 【Be2】2829,19523,31186,15016,29510,55851, , isAndC:False, sT:43967, sP:6.9424, sB:0.2832, nT:153915, nP:8.2259, nB:0.3402,
1216, //Score:8213171.95369841, Beny:【Be1】And:-1,Or:7979,DAll:-166282,Sum:166282,Sub:8213171.95369841,Sub2:4466,SB:0.2572,0:-3109(0.019),1:-21372(0.129),2:-33145(0.199),3:-16023(0.096),4:-32129(0.193),5:-60504(0.364),, 【Be2】3109,21372,33145,16023,32129,60504, , isAndC:False, sT:41906, sP:6.752, sB:0.2572, nT:166282, nP:8.3224, nB:0.3449,  #End#
LowScoreRank , T0:False , T1:13 , T2:30 , T3:
96, //Score:8727271.27949868, Beny:【Be1】And:-1,Or:6905,DAll:-235843,Sum:235843,Sub:8727271.27949868,Sub2:3705,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47648(0.202),3:-22174(0.094),4:-47471(0.201),5:-81951(0.347),, 【Be2】4649,31950,47648,22174,47471,81951, , isAndC:False, sT:60024, sP:6.7318, sB:0.2682, nT:235843, nP:8.6669, nB:0.197,
8371, //Score:8460729.192552, Beny:【Be1】And:-1,Or:6905,DAll:-151111,Sum:151111,Sub:8460729.192552,Sub2:4315,SB:0.3206,0:-2486(0.016),1:-20644(0.137),2:-27272(0.18),3:-12946(0.086),4:-37582(0.249),5:-50181(0.332),, 【Be2】2486,20644,27272,12946,37582,50181, , isAndC:False, sT:26941, sP:7.3196, sB:0.3206, nT:151111, nP:10.3087, nB:0.3337,
544, //Score:8438902.0172121, Beny:【Be1】And:-1,Or:6905,DAll:-236911,Sum:236911,Sub:8438902.0172121,Sub2:3937,SB:0.2204,0:-4528(0.019),1:-31725(0.134),2:-47556(0.201),3:-22258(0.094),4:-47762(0.202),5:-83082(0.351),, 【Be2】4528,31725,47556,22258,47762,83082, , isAndC:False, sT:55329, sP:6.7665, sB:0.2204, nT:236911, nP:8.6585, nB:0.2362,
6133, //Score:8340694.788439, Beny:【Be1】And:-1,Or:6905,DAll:-165793,Sum:165793,Sub:8340694.788439,Sub2:4092,SB:0.3066,0:-2716(0.016),1:-22730(0.137),2:-30761(0.186),3:-14659(0.088),4:-40495(0.244),5:-54432(0.328),, 【Be2】2716,22730,30761,14659,40495,54432, , isAndC:False, sT:30532, sP:7.3462, sB:0.3066, nT:165793, nP:10.1419, nB:0.2839,
8373, //Score:8317943.21496806, Beny:【Be1】And:-1,Or:6905,DAll:-107871,Sum:107871,Sub:8317943.21496806,Sub2:4709,SB:0.4113,0:-1722(0.016),1:-13869(0.129),2:-19711(0.183),3:-9978(0.092),4:-25999(0.241),5:-36592(0.339),, 【Be2】1722,13869,19711,9978,25999,36592, , isAndC:False, sT:21900, sP:6.9657, sB:0.4113, nT:107871, nP:10.0288, nB:0.4272,
322, //Score:8254129.47068015, Beny:【Be1】And:-1,Or:6905,DAll:-154119,Sum:154119,Sub:8254129.47068015,Sub2:4473,SB:0.2827,0:-2835(0.018),1:-19544(0.127),2:-31220(0.203),3:-15024(0.097),4:-29586(0.192),5:-55910(0.363),, 【Be2】2835,19544,31220,15024,29586,55910, , isAndC:False, sT:43982, sP:6.9428, sB:0.2827, nT:154119, nP:8.2303, nB:0.3403,
1216, //Score:8220353.2826425, Beny:【Be1】And:-1,Or:6905,DAll:-166471,Sum:166471,Sub:8220353.2826425,Sub2:4465,SB:0.2574,0:-3116(0.019),1:-21395(0.129),2:-33175(0.199),3:-16026(0.096),4:-32196(0.193),5:-60563(0.364),, 【Be2】3116,21395,33175,16026,32196,60563, , isAndC:False, sT:41918, sP:6.7545, sB:0.2574, nT:166471, nP:8.3259, nB:0.3449,  #End#
LowScoreRank , T0:False , T1:13 , T2:31 , T3:
96, //Score:8725338.09012822, Beny:【Be1】And:-1,Or:24,DAll:-235853,Sum:235853,Sub:8725338.09012822,Sub2:3706,SB:0.268,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47471(0.201),5:-81957(0.347),, 【Be2】4649,31950,47649,22177,47471,81957, , isAndC:False, sT:60028, sP:6.7312, sB:0.268, nT:235853, nP:8.6666, nB:0.1971,
8371, //Score:8463425.21406329, Beny:【Be1】And:-1,Or:24,DAll:-151112,Sum:151112,Sub:8463425.21406329,Sub2:4316,SB:0.3206,0:-2486(0.016),1:-20642(0.137),2:-27272(0.18),3:-12946(0.086),4:-37581(0.249),5:-50185(0.332),, 【Be2】2486,20642,27272,12946,37581,50185, , isAndC:False, sT:26930, sP:7.3218, sB:0.3206, nT:151112, nP:10.3089, nB:0.3339,
544, //Score:8442076.75021639, Beny:【Be1】And:-1,Or:24,DAll:-236924,Sum:236924,Sub:8442076.75021639,Sub2:3937,SB:0.2205,0:-4528(0.019),1:-31725(0.134),2:-47559(0.201),3:-22261(0.094),4:-47762(0.202),5:-83089(0.351),, 【Be2】4528,31725,47559,22261,47762,83089, , isAndC:False, sT:55334, sP:6.766, sB:0.2205, nT:236924, nP:8.6582, nB:0.2363,
6133, //Score:8343221.71742418, Beny:【Be1】And:-1,Or:24,DAll:-165794,Sum:165794,Sub:8343221.71742418,Sub2:4093,SB:0.3066,0:-2716(0.016),1:-22728(0.137),2:-30761(0.186),3:-14659(0.088),4:-40494(0.244),5:-54436(0.328),, 【Be2】2716,22728,30761,14659,40494,54436, , isAndC:False, sT:30521, sP:7.3482, sB:0.3066, nT:165794, nP:10.142, nB:0.2842,
8373, //Score:8322308.83644394, Beny:【Be1】And:-1,Or:24,DAll:-107872,Sum:107872,Sub:8322308.83644394,Sub2:4711,SB:0.4114,0:-1722(0.016),1:-13867(0.129),2:-19711(0.183),3:-9978(0.092),4:-25998(0.241),5:-36596(0.339),, 【Be2】1722,13867,19711,9978,25998,36596, , isAndC:False, sT:21889, sP:6.9682, sB:0.4114, nT:107872, nP:10.029, nB:0.4275,
322, //Score:8258158.4439657, Beny:【Be1】And:-1,Or:24,DAll:-154134,Sum:154134,Sub:8258158.4439657,Sub2:4474,SB:0.2828,0:-2835(0.018),1:-19544(0.127),2:-31223(0.203),3:-15026(0.097),4:-29587(0.192),5:-55919(0.363),, 【Be2】2835,19544,31223,15026,29587,55919, , isAndC:False, sT:43985, sP:6.9425, sB:0.2828, nT:154134, nP:8.2299, nB:0.3406,
1216, //Score:8221824.98175029, Beny:【Be1】And:-1,Or:24,DAll:-166483,Sum:166483,Sub:8221824.98175029,Sub2:4465,SB:0.2574,0:-3116(0.019),1:-21395(0.129),2:-33178(0.199),3:-16028(0.096),4:-32197(0.193),5:-60569(0.364),, 【Be2】3116,21395,33178,16028,32197,60569, , isAndC:False, sT:41919, sP:6.7544, sB:0.2574, nT:166483, nP:8.3256, nB:0.3451,  #End#
LowScoreRank , T0:False , T1:13 , T2:32 , T3:
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:-1,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
8371, //Score:8490299.19320836, Beny:【Be1】And:-1,Or:-1,DAll:-151136,Sum:151136,Sub:8490299.19320836,Sub2:4318,SB:0.3224,0:-2486(0.016),1:-20644(0.137),2:-27275(0.18),3:-12949(0.086),4:-37584(0.249),5:-50198(0.332),, 【Be2】2486,20644,27275,12949,37584,50198, , isAndC:False, sT:26944, sP:7.3194, sB:0.3224, nT:151136, nP:10.3077, nB:0.3343,
544, //Score:8442336.19184688, Beny:【Be1】And:-1,Or:-1,DAll:-236925,Sum:236925,Sub:8442336.19184688,Sub2:3937,SB:0.2205,0:-4528(0.019),1:-31725(0.134),2:-47559(0.201),3:-22261(0.094),4:-47762(0.202),5:-83090(0.351),, 【Be2】4528,31725,47559,22261,47762,83090, , isAndC:False, sT:55334, sP:6.766, sB:0.2205, nT:236925, nP:8.6582, nB:0.2363,
6133, //Score:8368016.65106104, Beny:【Be1】And:-1,Or:-1,DAll:-165818,Sum:165818,Sub:8368016.65106104,Sub2:4095,SB:0.3082,0:-2716(0.016),1:-22730(0.137),2:-30764(0.186),3:-14662(0.088),4:-40497(0.244),5:-54449(0.328),, 【Be2】2716,22730,30764,14662,40497,54449, , isAndC:False, sT:30535, sP:7.3461, sB:0.3082, nT:165818, nP:10.1409, nB:0.2845,
8373, //Score:8348529.16051795, Beny:【Be1】And:-1,Or:-1,DAll:-107896,Sum:107896,Sub:8348529.16051795,Sub2:4713,SB:0.4136,0:-1722(0.016),1:-13869(0.129),2:-19714(0.183),3:-9981(0.093),4:-26001(0.241),5:-36609(0.339),, 【Be2】1722,13869,19714,9981,26001,36609, , isAndC:False, sT:21903, sP:6.9656, sB:0.4136, nT:107896, nP:10.0274, nB:0.4279,
322, //Score:8261394.69348019, Beny:【Be1】And:-1,Or:-1,DAll:-154137,Sum:154137,Sub:8261394.69348019,Sub2:4474,SB:0.283,0:-2835(0.018),1:-19544(0.127),2:-31223(0.203),3:-15027(0.097),4:-29588(0.192),5:-55920(0.363),, 【Be2】2835,19544,31223,15027,29588,55920, , isAndC:False, sT:43987, sP:6.9422, sB:0.283, nT:154137, nP:8.2298, nB:0.3406,
8375, //Score:8247260.42944439, Beny:【Be1】And:-1,Or:-1,DAll:-94367,Sum:94367,Sub:8247260.42944439,Sub2:4899,SB:0.4497,0:-1450(0.015),1:-11950(0.127),2:-17559(0.186),3:-9013(0.096),4:-21722(0.23),5:-32673(0.346),, 【Be2】1450,11950,17559,9013,21722,32673, , isAndC:False, sT:20368, sP:6.7709, sB:0.4497, nT:94367, nP:9.6196, nB:0.4634,  #End#
Check51AlterTrue , T0:1969609.81523395 , T1:
96, //Score:8773990.99534095, Beny:【Be1】And:-1,Or:1939,DAll:-235179,Sum:235179,Sub:8773990.99534095,Sub2:3702,SB:0.2725,0:-4639(0.02),1:-31879(0.136),2:-47492(0.202),3:-22071(0.094),4:-47410(0.202),5:-81688(0.347),, 【Be2】4639,31879,47492,22071,47410,81688, , isAndC:False, sT:59923, sP:6.738, sB:0.2725, nT:235179, nP:8.6811, nB:0.1961, , T2:
96, //Score:8773990.99534095, Beny:【Be1】And:-1,Or:1939,DAll:-235179,Sum:235179,Sub:8773990.99534095,Sub2:3702,SB:0.2725,0:-4639(0.02),1:-31879(0.136),2:-47492(0.202),3:-22071(0.094),4:-47410(0.202),5:-81688(0.347),, 【Be2】4639,31879,47492,22071,47410,81688, , isAndC:False, sT:59923, sP:6.738, sB:0.2725, nT:235179, nP:8.6811, nB:0.1961,
96, //Score:8745668.45411719, Beny:【Be1】And:-1,Or:2147,DAll:-235202,Sum:235202,Sub:8745668.45411719,Sub2:3700,SB:0.271,0:-4637(0.02),1:-31877(0.136),2:-47503(0.202),3:-22122(0.094),4:-47372(0.201),5:-81691(0.347),, 【Be2】4637,31877,47503,22122,47372,81691, , isAndC:False, sT:59970, sP:6.733, sB:0.271, nT:235202, nP:8.6714, nB:0.1963,
96, //Score:8744348.6234997, Beny:【Be1】And:-1,Or:3234,DAll:-235416,Sum:235416,Sub:8744348.6234997,Sub2:3703,SB:0.2703,0:-4634(0.02),1:-31905(0.136),2:-47579(0.202),3:-22139(0.094),4:-47385(0.201),5:-81774(0.347),, 【Be2】4634,31905,47579,22139,47385,81774, , isAndC:False, sT:60014, sP:6.7308, sB:0.2703, nT:235416, nP:8.6653, nB:0.1964,
96, //Score:8744079.3513078, Beny:【Be1】And:-1,Or:5612,DAll:-235607,Sum:235607,Sub:8744079.3513078,Sub2:3707,SB:0.2692,0:-4643(0.02),1:-31923(0.135),2:-47583(0.202),3:-22138(0.094),4:-47450(0.201),5:-81870(0.347),, 【Be2】4643,31923,47583,22138,47450,81870, , isAndC:False, sT:59978, sP:6.7357, sB:0.2692, nT:235607, nP:8.6723, nB:0.1973,
96, //Score:8741676.83339356, Beny:【Be1】And:-1,Or:7077,DAll:-235219,Sum:235219,Sub:8741676.83339356,Sub2:3699,SB:0.2708,0:-4641(0.02),1:-31894(0.136),2:-47506(0.202),3:-22065(0.094),4:-47411(0.202),5:-81702(0.347),, 【Be2】4641,31894,47506,22065,47411,81702, , isAndC:False, sT:59948, sP:6.7359, sB:0.2708, nT:235219, nP:8.679, nB:0.1959,
96, //Score:8736019.47408034, Beny:【Be1】And:-1,Or:2615,DAll:-235819,Sum:235819,Sub:8736019.47408034,Sub2:3707,SB:0.2685,0:-4648(0.02),1:-31941(0.135),2:-47641(0.202),3:-22171(0.094),4:-47470(0.201),5:-81948(0.348),, 【Be2】4648,31941,47641,22171,47470,81948, , isAndC:False, sT:60025, sP:6.7313, sB:0.2685, nT:235819, nP:8.667, nB:0.1974,
96, //Score:8735469.58102614, Beny:【Be1】And:-1,Or:8165,DAll:-235106,Sum:235106,Sub:8735469.58102614,Sub2:3707,SB:0.2696,0:-4636(0.02),1:-31831(0.135),2:-47518(0.202),3:-22118(0.094),4:-47291(0.201),5:-81712(0.348),, 【Be2】4636,31831,47518,22118,47291,81712, , isAndC:False, sT:59991, sP:6.7304, sB:0.2696, nT:235106, nP:8.6557, nB:0.1975,
96, //Score:8732556.33410533, Beny:【Be1】And:-1,Or:528,DAll:-235779,Sum:235779,Sub:8732556.33410533,Sub2:3706,SB:0.2685,0:-4646(0.02),1:-31947(0.135),2:-47626(0.202),3:-22170(0.094),4:-47460(0.201),5:-81930(0.347),, 【Be2】4646,31947,47626,22170,47460,81930, , isAndC:False, sT:60015, sP:6.7324, sB:0.2685, nT:235779, nP:8.6681, nB:0.197,
96, //Score:8731581.50729459, Beny:【Be1】And:-1,Or:3456,DAll:-235816,Sum:235816,Sub:8731581.50729459,Sub2:3706,SB:0.2684,0:-4647(0.02),1:-31949(0.135),2:-47643(0.202),3:-22172(0.094),4:-47458(0.201),5:-81947(0.348),, 【Be2】4647,31949,47643,22172,47458,81947, , isAndC:False, sT:60023, sP:6.7316, sB:0.2684, nT:235816, nP:8.6663, nB:0.1971,
96, //Score:8729652.84828205, Beny:【Be1】And:206,Or:-1,DAll:-235858,Sum:235858,Sub:8729652.84828205,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47473(0.201),5:-81960(0.347),, 【Be2】4649,31950,47649,22177,47473,81960, , isAndC:False, sT:60028, sP:6.7313, sB:0.2682, nT:235858, nP:8.6665, nB:0.1972,
96, //Score:8729305.3968455, Beny:【Be1】And:6014,Or:-1,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
96, //Score:8729305.3968455, Beny:【Be1】And:3582,Or:-1,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:8203,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:992,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:7995,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:7787,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:3359,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:8031,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
96, //Score:8729305.3968455, Beny:【Be1】And:-1,Or:-1,DAll:-235856,Sum:235856,Sub:8729305.3968455,Sub2:3706,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47472(0.201),5:-81959(0.347),, 【Be2】4649,31950,47649,22177,47472,81959, , isAndC:False, sT:60027, sP:6.7314, sB:0.2682, nT:235856, nP:8.6666, nB:0.1972,
96, //Score:8728745.33603681, Beny:【Be1】And:-1,Or:6068,DAll:-235657,Sum:235657,Sub:8728745.33603681,Sub2:3706,SB:0.2684,0:-4646(0.02),1:-31935(0.136),2:-47585(0.202),3:-22144(0.094),4:-47457(0.201),5:-81890(0.347),, 【Be2】4646,31935,47585,22144,47457,81890, , isAndC:False, sT:60007, sP:6.7326, sB:0.2684, nT:235657, nP:8.6704, nB:0.1974,
96, //Score:8727853.63859407, Beny:【Be1】And:-1,Or:6625,DAll:-235820,Sum:235820,Sub:8727853.63859407,Sub2:3705,SB:0.2683,0:-4649(0.02),1:-31947(0.135),2:-47639(0.202),3:-22173(0.094),4:-47472(0.201),5:-81940(0.347),, 【Be2】4649,31947,47639,22173,47472,81940, , isAndC:False, sT:60021, sP:6.7319, sB:0.2683, nT:235820, nP:8.6674, nB:0.197,
96, //Score:8727271.27949868, Beny:【Be1】And:-1,Or:6905,DAll:-235843,Sum:235843,Sub:8727271.27949868,Sub2:3705,SB:0.2682,0:-4649(0.02),1:-31950(0.135),2:-47648(0.202),3:-22174(0.094),4:-47471(0.201),5:-81951(0.347),, 【Be2】4649,31950,47648,22174,47471,81951, , isAndC:False, sT:60024, sP:6.7318, sB:0.2682, nT:235843, nP:8.6669, nB:0.197,
96, //Score:8726488.22013554, Beny:【Be1】And:-1,Or:7910,DAll:-235637,Sum:235637,Sub:8726488.22013554,Sub2:3700,SB:0.2692,0:-4648(0.02),1:-31936(0.136),2:-47603(0.202),3:-22149(0.094),4:-47442(0.201),5:-81859(0.347),, 【Be2】4648,31936,47603,22149,47442,81859, , isAndC:False, sT:60002, sP:6.7324, sB:0.2692, nT:235637, nP:8.6701, nB:0.1962,
96, //Score:8725539.206267, Beny:【Be1】And:-1,Or:3012,DAll:-235285,Sum:235285,Sub:8725539.206267,Sub2:3700,SB:0.2697,0:-4635(0.02),1:-31900(0.136),2:-47554(0.202),3:-22108(0.094),4:-47354(0.201),5:-81734(0.347),, 【Be2】4635,31900,47554,22108,47354,81734, , isAndC:False, sT:59990, sP:6.7331, sB:0.2697, nT:235285, nP:8.6675, nB:0.1957,
96, //Score:8725338.09012822, Beny:【Be1】And:-1,Or:24,DAll:-235853,Sum:235853,Sub:8725338.09012822,Sub2:3706,SB:0.268,0:-4649(0.02),1:-31950(0.135),2:-47649(0.202),3:-22177(0.094),4:-47471(0.201),5:-81957(0.347),, 【Be2】4649,31950,47649,22177,47471,81957, , isAndC:False, sT:60028, sP:6.7312, sB:0.268, nT:235853, nP:8.6666, nB:0.1971,
96, //Score:8724021.58782817, Beny:【Be1】And:-1,Or:4762,DAll:-235654,Sum:235654,Sub:8724021.58782817,Sub2:3704,SB:0.2685,0:-4646(0.02),1:-31930(0.135),2:-47602(0.202),3:-22151(0.094),4:-47453(0.201),5:-81872(0.347),, 【Be2】4646,31930,47602,22151,47453,81872, , isAndC:False, sT:60012, sP:6.7319, sB:0.2685, nT:235654, nP:8.6697, nB:0.1969,
96, //Score:8722413.2177275, Beny:【Be1】And:-1,Or:6151,DAll:-234929,Sum:234929,Sub:8722413.2177275,Sub2:3701,SB:0.2699,0:-4641(0.02),1:-31829(0.135),2:-47437(0.202),3:-22111(0.094),4:-47270(0.201),5:-81641(0.348),, 【Be2】4641,31829,47437,22111,47270,81641, , isAndC:False, sT:59985, sP:6.7317, sB:0.2699, nT:234929, nP:8.6658, nB:0.1971,
96, //Score:8721700.23993376, Beny:【Be1】And:-1,Or:2280,DAll:-235749,Sum:235749,Sub:8721700.23993376,Sub2:3705,SB:0.2681,0:-4649(0.02),1:-31938(0.135),2:-47619(0.202),3:-22168(0.094),4:-47460(0.201),5:-81915(0.347),, 【Be2】4649,31938,47619,22168,47460,81915, , isAndC:False, sT:60016, sP:6.732, sB:0.2681, nT:235749, nP:8.6687, nB:0.1969,
96, //Score:8717419.26882886, Beny:【Be1】And:-1,Or:7979,DAll:-235704,Sum:235704,Sub:8717419.26882886,Sub2:3705,SB:0.2679,0:-4644(0.02),1:-31937(0.135),2:-47624(0.202),3:-22171(0.094),4:-47423(0.201),5:-81905(0.347),, 【Be2】4644,31937,47624,22171,47423,81905, , isAndC:False, sT:60029, sP:6.7296, sB:0.2679, nT:235704, nP:8.6651, nB:0.1968,
96, //Score:8714887.49858967, Beny:【Be1】And:-1,Or:8393,DAll:-235408,Sum:235408,Sub:8714887.49858967,Sub2:3698,SB:0.2691,0:-4649(0.02),1:-31898(0.136),2:-47559(0.202),3:-22148(0.094),4:-47357(0.201),5:-81797(0.347),, 【Be2】4649,31898,47559,22148,47357,81797, , isAndC:False, sT:60018, sP:6.7306, sB:0.2691, nT:235408, nP:8.6615, nB:0.1963,
96, //Score:8708575.92805109, Beny:【Be1】And:1664,Or:-1,DAll:-236471,Sum:236471,Sub:8708575.92805109,Sub2:3705,SB:0.2663,0:-4663(0.02),1:-32018(0.135),2:-47801(0.202),3:-22257(0.094),4:-47552(0.201),5:-82180(0.348),, 【Be2】4663,32018,47801,22257,47552,82180, , isAndC:False, sT:60115, sP:6.7267, sB:0.2663, nT:236471, nP:8.6582, nB:0.1969,
96, //Score:8707270.09623208, Beny:【Be1】And:-1,Or:8296,DAll:-234823,Sum:234823,Sub:8707270.09623208,Sub2:3693,SB:0.2701,0:-4625(0.02),1:-31862(0.136),2:-47418(0.202),3:-22037(0.094),4:-47399(0.202),5:-81482(0.347),, 【Be2】4625,31862,47418,22037,47399,81482, , isAndC:False, sT:59892, sP:6.7383, sB:0.2701, nT:234823, nP:8.6861, nB:0.194,
96, //Score:8704518.73360686, Beny:【Be1】And:-1,Or:6096,DAll:-235240,Sum:235240,Sub:8704518.73360686,Sub2:3692,SB:0.2696,0:-4646(0.02),1:-31898(0.136),2:-47523(0.202),3:-22094(0.094),4:-47397(0.201),5:-81682(0.347),, 【Be2】4646,31898,47523,22094,47397,81682, , isAndC:False, sT:59959, sP:6.7348, sB:0.2696, nT:235240, nP:8.6734, nB:0.1949,
96, //Score:8703977.47798604, Beny:【Be1】And:-1,Or:4100,DAll:-234409,Sum:234409,Sub:8703977.47798604,Sub2:3689,SB:0.2712,0:-4634(0.02),1:-31805(0.136),2:-47323(0.202),3:-22001(0.094),4:-47257(0.202),5:-81389(0.347),, 【Be2】4634,31805,47323,22001,47257,81389, , isAndC:False, sT:59929, sP:6.7344, sB:0.2712, nT:234409, nP:8.6789, nB:0.1942,
96, //Score:8701923.05083605, Beny:【Be1】And:-1,Or:2086,DAll:-235447,Sum:235447,Sub:8701923.05083605,Sub2:3704,SB:0.2674,0:-4642(0.02),1:-31908(0.136),2:-47555(0.202),3:-22121(0.094),4:-47416(0.201),5:-81805(0.347),, 【Be2】4642,31908,47555,22121,47416,81805, , isAndC:False, sT:59994, sP:6.7315, sB:0.2674, nT:235447, nP:8.6713, nB:0.1969,
96, //Score:8686077.00593913, Beny:【Be1】And:182,Or:-1,DAll:-235953,Sum:235953,Sub:8686077.00593913,Sub2:3700,SB:0.2663,0:-4659(0.02),1:-31967(0.135),2:-47673(0.202),3:-22191(0.094),4:-47474(0.201),5:-81989(0.347),, 【Be2】4659,31967,47673,22191,47474,81989, , isAndC:False, sT:60044, sP:6.7301, sB:0.2663, nT:235953, nP:8.6639, nB:0.1965,
96, //Score:8672296.5945507, Beny:【Be1】And:4356,Or:-1,DAll:-237140,Sum:237140,Sub:8672296.5945507,Sub2:3702,SB:0.2634,0:-4659(0.02),1:-32121(0.135),2:-47973(0.202),3:-22300(0.094),4:-47769(0.201),5:-82318(0.347),, 【Be2】4659,32121,47973,22300,47769,82318, , isAndC:False, sT:60222, sP:6.7327, sB:0.2634, nT:237140, nP:8.6691, nB:0.1953,
96, //Score:8639158.69641529, Beny:【Be1】And:6823,Or:-1,DAll:-238783,Sum:238783,Sub:8639158.69641529,Sub2:3696,SB:0.2604,0:-4716(0.02),1:-32421(0.136),2:-48288(0.202),3:-22452(0.094),4:-47794(0.2),5:-83112(0.348),, 【Be2】4716,32421,48288,22452,47794,83112, , isAndC:False, sT:60664, sP:6.7012, sB:0.2604, nT:238783, nP:8.6379, nB:0.1957,
96, //Score:8623881.26640362, Beny:【Be1】And:5015,Or:-1,DAll:-236707,Sum:236707,Sub:8623881.26640362,Sub2:3694,SB:0.2626,0:-4675(0.02),1:-32055(0.135),2:-47896(0.202),3:-22306(0.094),4:-47521(0.201),5:-82254(0.347),, 【Be2】4675,32055,47896,22306,47521,82254, , isAndC:False, sT:60282, sP:6.7118, sB:0.2626, nT:236707, nP:8.6475, nB:0.1956,
96, //Score:8615381.7216288, Beny:【Be1】And:-1,Or:4806,DAll:-231876,Sum:231876,Sub:8615381.7216288,Sub2:3666,SB:0.2728,0:-4578(0.02),1:-31431(0.136),2:-46969(0.203),3:-21878(0.094),4:-46641(0.201),5:-80379(0.347),, 【Be2】4578,31431,46969,21878,46641,80379, , isAndC:False, sT:59809, sP:6.7366, sB:0.2728, nT:231876, nP:8.6613, nB:0.1903,
96, //Score:8609635.08824264, Beny:【Be1】And:4305,Or:-1,DAll:-240744,Sum:240744,Sub:8609635.08824264,Sub2:3678,SB:0.2584,0:-4741(0.02),1:-32535(0.135),2:-48999(0.204),3:-22906(0.095),4:-47884(0.199),5:-83679(0.348),, 【Be2】4741,32535,48999,22906,47884,83679, , isAndC:False, sT:60941, sP:6.6972, sB:0.2584, nT:240744, nP:8.5946, nB:0.1923,
96, //Score:8584077.70366807, Beny:【Be1】And:-1,Or:2738,DAll:-234611,Sum:234611,Sub:8584077.70366807,Sub2:3660,SB:0.2678,0:-4629(0.02),1:-31881(0.136),2:-47449(0.202),3:-22069(0.094),4:-47311(0.202),5:-81272(0.346),, 【Be2】4629,31881,47449,22069,47311,81272, , isAndC:False, sT:59980, sP:6.7288, sB:0.2678, nT:234611, nP:8.6783, nB:0.1882,
96, //Score:8558736.85344683, Beny:【Be1】And:8414,Or:-1,DAll:-245953,Sum:245953,Sub:8558736.85344683,Sub2:3600,SB:0.2581,0:-4859(0.02),1:-33606(0.137),2:-49806(0.203),3:-23034(0.094),4:-49778(0.202),5:-84870(0.345),, 【Be2】4859,33606,49806,23034,49778,84870, , isAndC:False, sT:61925, sP:6.7722, sB:0.2581, nT:245953, nP:8.7255, nB:0.1746,
96, //Score:8525493.81386845, Beny:【Be1】And:6444,Or:-1,DAll:-312499,Sum:312499,Sub:8525493.81386845,Sub2:3567,SB:0.1983,0:-6164(0.02),1:-41314(0.132),2:-66672(0.213),3:-32520(0.104),4:-55845(0.179),5:-109984(0.352),, 【Be2】6164,41314,66672,32520,55845,109984, , isAndC:False, sT:80702, sP:6.1759, sB:0.1983, nT:312499, nP:7.9454, nB:0.1668,
8371, //Score:8508709.11842311, Beny:【Be1】And:-1,Or:7979,DAll:-151012,Sum:151012,Sub:8508709.11842311,Sub2:4322,SB:0.3235,0:-2479(0.016),1:-20628(0.137),2:-27252(0.18),3:-12942(0.086),4:-37548(0.249),5:-50163(0.332),, 【Be2】2479,20628,27252,12942,37548,50163, , isAndC:False, sT:26928, sP:7.3168, sB:0.3235, nT:151012, nP:10.3068, nB:0.3348,
8371, //Score:8496196.58044195, Beny:【Be1】And:-1,Or:3234,DAll:-150518,Sum:150518,Sub:8496196.58044195,Sub2:4301,SB:0.3271,0:-2474(0.016),1:-20588(0.137),2:-27170(0.181),3:-12898(0.086),4:-37468(0.249),5:-49920(0.332),, 【Be2】2474,20588,27170,12898,37468,49920, , isAndC:False, sT:26803, sP:7.319, sB:0.3271, nT:150518, nP:10.3161, nB:0.3311,
544, //Score:8493799.32620604, Beny:【Be1】And:-1,Or:2147,DAll:-236251,Sum:236251,Sub:8493799.32620604,Sub2:3933,SB:0.2245,0:-4515(0.019),1:-31652(0.134),2:-47409(0.201),3:-22204(0.094),4:-47649(0.202),5:-82822(0.351),, 【Be2】4515,31652,47409,22204,47649,82822, , isAndC:False, sT:55238, sP:6.77, sB:0.2245, nT:236251, nP:8.663, nB:0.2356,
8371, //Score:8492819.74894148, Beny:【Be1】And:-1,Or:2615,DAll:-151077,Sum:151077,Sub:8492819.74894148,Sub2:4317,SB:0.3228,0:-2485(0.016),1:-20636(0.137),2:-27258(0.18),3:-12944(0.086),4:-37583(0.249),5:-50171(0.332),, 【Be2】2485,20636,27258,12944,37583,50171, , isAndC:False, sT:26937, sP:7.318, sB:0.3228, nT:151077, nP:10.3098, nB:0.3343,
8371, //Score:8492073.21337978, Beny:【Be1】And:206,Or:-1,DAll:-151138,Sum:151138,Sub:8492073.21337978,Sub2:4318,SB:0.3225,0:-2486(0.016),1:-20644(0.137),2:-27275(0.18),3:-12949(0.086),4:-37585(0.249),5:-50199(0.332),, 【Be2】2486,20644,27275,12949,37585,50199, , isAndC:False, sT:26945, sP:7.3193, sB:0.3225, nT:151138, nP:10.3076, nB:0.3343,
544, //Score:8490970.78807788, Beny:【Be1】And:-1,Or:1939,DAll:-236175,Sum:236175,Sub:8490970.78807788,Sub2:3933,SB:0.2244,0:-4518(0.019),1:-31648(0.134),2:-47387(0.201),3:-22139(0.094),4:-47692(0.202),5:-82791(0.351),, 【Be2】4518,31648,47387,22139,47692,82791, , isAndC:False, sT:55203, sP:6.7743, sB:0.2244, nT:236175, nP:8.6741, nB:0.2351,  #End#
End , T0:06:01:40.9842134  #End#


csv
6014,8414,1666,2101,182,4356,6823,206,3582,1664,4305,5015,6444
528,6625,2615,8203,3234,992,8296,8393,4762,6151,3012,3456,1939,5612,4806,7910,2086,8165,7995,2280,6096,7787,4100,3359,8031,6068,2147,2738,7077,7979,6905,24

96, //Score:8773990.99534095, Beny:【Be1】And:-1,Or:1939,DAll:-235179,Sum:235179,Sub:8773990.99534095,Sub2:3702,SB:0.2725,0:-4639(0.02),1:-31879(0.136),2:-47492(0.202),3:-22071(0.094),4:-47410(0.202),5:-81688(0.347),, 【Be2】4639,31879,47492,22071,47410,81688, , isAndC:False, sT:59923, sP:6.738, sB:0.2725, nT:235179, nP:8.6811, nB:0.1961,


 */
		};

		private static readonly int[] KaraConfirmAnds = new int[] {
			//AllTrueCondIdx
			//7181,1587,8297,2723,53,1619,937,7437,2739,993,739,5405,953,6809,7800,3611,3001,1635,7229,747,
		};
		private static readonly int[] KaraConfirmOrs = new int[] {
			// AndCond:1, OrCond:-1, Cond:1830, Score:0.00290070921985816, sT:864, sP:2.934, sB:-4.1574, nT:1551, nP:2.6983, nB:-4.499
			7180,1586,8296,2722,52,1618,936,7436,2738,992,738,5404,952,6808,7801,3610,//3000,1634,//7228,746,
			7004,968,8146,3000,1634,740,68,1937,1880,7228,6433,7839
		};
		private static readonly int[] KouhoAnds = new int[] {
			//AllTrueCondIdx,

	   };
		private static readonly int[] KouhoOrs = new int[] {
			//AllTrueCondIdx-1,


		};
		private const int AllCond51Num = 3754886; // 2000日*2500銘柄
		private const double AllCond51Ratio = -0.000912;
		public const double PeriodPow = 0.5;
		public const int NoSkipRatio = 8;
		private const bool TestCodeNum = false; // とりあえず30コードだけでテスト実行
		private const bool IsKara = false; // 空売り用
										   //public const bool IsAndCheck = false; // andチェックかorチェックか
		private const bool IsPro500Only = false;
		private const bool IsPro500AllOnly = true; // 8年分のプロ500のみ
		public static readonly double[] BenScore = new double[6] { 12, 3, 1, 0.3, -1, -3 };
		public const int LowDiffAnd = 700; // Andチェックでスコアにおいて最低の必要Diff数
		public const int LowSumAnd = 20000; // Andチェックでスコアにおいて最低の必要Sum数
		public const int LowCntOr = 1400; // orチェックでスコアにおいて最低の必要数
		public const int IdxTrue = 6;
		public const int IdxBene = 7;
		public const int IdxPeri = 8;
		public const int IdxMax = 9; // noの方は後半


		/** 51条件の全検証(1個スキップも可能) */
		public static void Check51Rmv(string param1)
		{
			bool isAndCheck = param1 == "1";
			Check51RmvBase(-1, -1, isAndCheck);

			/*
			if (IsAndCheck) {
				for (int i = -1; i < confirmAnds.Length; i++) {
					CheckCond51AllBase(confirmAnds, confirmOrs, i, -1);
				}
			} else {
				for (int i = -1; i < confirmOrs.Length; i++) {
					//for (int i = -1; i <= 1; i++) {
					CheckCond51AllBase(confirmAnds, confirmOrs, -1, i);
				}
				//CheckCond51AllBase(confirmAnds, confirmOrs, -1, 8);
			}
			*/
		}
		private static void Check51RmvBase(int andSkip, int orSkip, bool isAndCheck)
		{
			(int[] confirmAnds, int[] confirmOrs) = GetConfirms();

			bool isOrOkForce = isAndCheck && confirmOrs.Length == 0 && KouhoOrs.Length == 0; // orチェックを強制でOKにしておく

			List<string> codeList = CsvControll.GetCodeList();
			if (TestCodeNum) codeList = codeList.GetRange(0, 30);

			(Dictionary<string, HashSet<string>> beforeNotAnd, Dictionary<string, HashSet<string>> beforeOr) = GetBeforeInfo(codeList, confirmAnds, confirmOrs, andSkip, orSkip);
			Dictionary<string, HashSet<string>>[] beforeNotAndKouho = new Dictionary<string, HashSet<string>>[KouhoAnds.Length];
			Dictionary<string, HashSet<string>>[] beforeOrKouho = new Dictionary<string, HashSet<string>>[KouhoOrs.Length];
			foreach (string symbol in codeList) {
				for (int i = 0; i < KouhoAnds.Length; i++) {
					if (beforeNotAndKouho[i] == null) beforeNotAndKouho[i] = new Dictionary<string, HashSet<string>>();
					beforeNotAndKouho[i][symbol] = new HashSet<string>();
					(int pIdx, int ratioIdx, int diffDayIdx, bool isT) = SplitCondIdx(KouhoAnds[i]);
					foreach (string[] cond51 in CsvControll.GetCond51All(symbol, diffDayIdx, ratioIdx)) {
						if (beforeNotAnd[symbol].Contains(cond51[0])) continue;
						if ((cond51[pIdx + 1] == "1") != isT) beforeNotAndKouho[i][symbol].Add(cond51[0]);
					}
				}
				for (int i = 0; i < KouhoOrs.Length; i++) {
					if (beforeOrKouho[i] == null) beforeOrKouho[i] = new Dictionary<string, HashSet<string>>();
					beforeOrKouho[i][symbol] = new HashSet<string>();
					(int pIdx, int ratioIdx, int diffDayIdx, bool isT) = SplitCondIdx(KouhoOrs[i]);
					foreach (string[] cond51 in CsvControll.GetCond51All(symbol, diffDayIdx, ratioIdx)) {
						if (beforeNotAnd[symbol].Contains(cond51[0])) continue;
						if (beforeOr[symbol].Contains(cond51[0])) continue;
						if ((cond51[pIdx + 1] == "1") == isT) beforeOrKouho[i][symbol].Add(cond51[0]);
					}
				}
			}

			int kouhoNum = KouhoAnds.Length > 0 ? KouhoAnds.Length : KouhoOrs.Length;
			int[] kouhoList = KouhoAnds.Length > 0 ? KouhoAnds : KouhoOrs;

			int[] notCond = new int[NotCond.Length + confirmOrs.Length + confirmAnds.Length];
			NotCond.CopyTo(notCond, 0);
			confirmOrs.CopyTo(notCond, NotCond.Length);
			confirmAnds.CopyTo(notCond, NotCond.Length + confirmOrs.Length);

			Dictionary<string, HashSet<DateTime>> pro500Date = Getpro500Date();

			int[,,] dataAll = new int[kouhoNum, condNum(), IdxMax * 2];
			int[] confirmBeny = new int[6];
			foreach (string symbol in codeList) {
				if (IsPro500AllOnly && !pro500Date.ContainsKey(symbol)) continue;
				HashSet<string> pro500Ds = GetPro500Ds(pro500Date, symbol);
				(Dictionary<string, int> benefits, Dictionary<string, int> havePeriods) = GetBenefitData(symbol);

				foreach (var info in beforeOr[symbol]) {
					if (!beforeNotAnd[symbol].Contains(info) && benefits.ContainsKey(info) && (!IsPro500AllOnly || pro500Ds.Contains(info))) {
						confirmBeny[GetBeny(benefits[info])]++;
					}
				}

				for (int diffDayIdx = 0; diffDayIdx < diffDayList.Length; diffDayIdx++) {
					for (int ratioIdx = 0; ratioIdx < ratioList.Length; ratioIdx++) {
						List<string[]> cond51All = CsvControll.GetCond51All(symbol, diffDayIdx, ratioIdx);
						for (int pIdx = 0; pIdx < periodCntList.GetLength(0); pIdx++) {
							foreach (bool isT in new bool[2] { true, false }) {
								int condIdx = GetCondIdx(pIdx, ratioIdx, diffDayIdx, isT);
								if (Array.IndexOf(notCond, condIdx) >= 0) continue;
								int[] nowHaves = new int[kouhoNum];
								for (int c = 0; c < cond51All.Count; c++) {
									string[] cond51 = cond51All[c];

									if (IsPro500AllOnly && !pro500Ds.Contains(cond51[0])) continue;
									if (beforeNotAnd[symbol].Contains(cond51[0])) continue;
									if (isAndCheck && (cond51[pIdx + 1] == "1") != isT) continue;
									if (!benefits.ContainsKey(cond51[0])) continue;
									bool isOrCheck = isOrOkForce || (!isAndCheck && (cond51[pIdx + 1] == "1") == isT) || beforeOr[symbol].Contains(cond51[0]);

									if (KouhoAnds.Length > 0) {
										if (!isOrCheck) continue;
										for (int i = 0; i < KouhoAnds.Length; i++) {
											if (beforeNotAndKouho[i][symbol].Contains(cond51[0])) continue;
											dataAll[i, condIdx, IdxMax + GetBeny(benefits[cond51[0]])]++;
											dataAll[i, condIdx, IdxMax + IdxTrue]++;
											dataAll[i, condIdx, IdxMax + IdxBene] += benefits[cond51[0]];
											dataAll[i, condIdx, IdxMax + IdxPeri] += havePeriods[cond51[0]];
											if (nowHaves[i] > c) continue;
											dataAll[i, condIdx, GetBeny(benefits[cond51[0]])]++;
											dataAll[i, condIdx, IdxTrue]++;
											dataAll[i, condIdx, IdxBene] += benefits[cond51[0]];
											dataAll[i, condIdx, IdxPeri] += havePeriods[cond51[0]];
											nowHaves[i] = c + havePeriods[cond51[0]] + 1;
										}
									} else if (KouhoOrs.Length > 0) {
										// 残るはORチェック
										for (int i = 0; i < KouhoOrs.Length; i++) {
											if (!isOrCheck && !beforeOrKouho[i][symbol].Contains(cond51[0])) continue;
											dataAll[i, condIdx, IdxMax + GetBeny(benefits[cond51[0]])]++;
											dataAll[i, condIdx, IdxMax + IdxTrue]++;
											dataAll[i, condIdx, IdxMax + IdxBene] += benefits[cond51[0]];
											dataAll[i, condIdx, IdxMax + IdxPeri] += havePeriods[cond51[0]];
											if (nowHaves[i] > c) continue;
											dataAll[i, condIdx, GetBeny(benefits[cond51[0]])]++;
											dataAll[i, condIdx, IdxTrue]++;
											dataAll[i, condIdx, IdxBene] += benefits[cond51[0]];
											dataAll[i, condIdx, IdxPeri] += havePeriods[cond51[0]];
											nowHaves[i] = c + havePeriods[cond51[0]] + 1;
										}
									}
								}
							}
						}
					}
				}
				Common.DebugInfo("CheckCond51AllSymbol", symbol);
			}

			// 並び変えるか
			HashSet<CondRes> condResAll = new HashSet<CondRes>();
			string result = "";
			for (int i = 0; i < kouhoNum; i++) {
				HashSet<CondRes> condResList = new HashSet<CondRes>();
				for (int j = 0; j < condNum(); j++) {
					if (dataAll[i, j, IdxMax + IdxTrue] == 0) continue;
					int[] info = new int[IdxMax * 2];
					for (int k = 0; k < IdxMax * 2; k++) info[k] = dataAll[i, j, k];
					CondRes condRes = new CondRes(
						isAndCheck ? i : -1, !isAndCheck ? i : -1, isAndCheck ? kouhoList[i] : -1, !isAndCheck ? kouhoList[i] : -1,
						j, info, confirmBeny, isAndCheck
					);
					condResList.Add(condRes);
					condResAll.Add(condRes);
				}

				result = "";
				foreach (CondRes c in condResList.OrderByDescending(c => c.SortNum()).Take(10)) result += c.DispRes();
				Common.DebugInfo("LowScoreRank22", kouhoList[i], result);
			}

			result = "";
			foreach (CondRes c in condResAll.OrderByDescending(c => c.SortNum()).Take(20)) result += c.DispRes();
			Common.DebugInfo("LowScoreRankAll", result);
		}


		// confirmAnds,confirmOrsのうち一個のcondを抜いて、新しいものを一個追加した際の検証を全通り(Kouhoは使わない)
		public static void Check51Alter(string param1)
		{
			if (true) {
				bool isAndCheck = param1 == "1";
				Check51AlterBase(isAndCheck);
				//Check51Alter(!isAndCheck);
			} else {
				while (true) {
					bool isOrOk = true;
					for (int i = 0; i < 4; i++) {
						isOrOk = Check51AlterBase(false);
						if (!isOrOk) break;
					}
					if (!Check51AlterBase(true) && !isOrOk) break;
				}
			}
		}
		private static bool Check51AlterBase(bool isAndCheck)
		{
			List<string> codeList = CsvControll.GetCodeList();
			if (TestCodeNum) codeList = codeList.GetRange(0, 30);
			(int[] confirmAnds, int[] confirmOrs) = GetConfirms();

			int kouhoNum = confirmOrs.Length + confirmAnds.Length + 1;

			Dictionary<string, HashSet<DateTime>> pro500Date = Getpro500Date();

			int[,,] dataAll = new int[kouhoNum, condNum(), IdxMax * 2];
			int[] confirmBeny = new int[6];
			foreach (string symbol in codeList) {
				if (IsPro500AllOnly && !pro500Date.ContainsKey(symbol)) continue;
				HashSet<string> pro500Ds = GetPro500Ds(pro500Date, symbol);

				HashSet<string>[] beforeNotAndKouho = new HashSet<string>[confirmAnds.Length + 1];
				for (int i = 0; i < confirmAnds.Length; i++) {
					(int pIdx, int ratioIdx, int diffDayIdx, bool isT) = SplitCondIdx(confirmAnds[i]);
					foreach (string[] cond51 in CsvControll.GetCond51All(symbol, diffDayIdx, ratioIdx)) {
						if (IsPro500AllOnly && !pro500Ds.Contains(cond51[0])) continue;
						if ((cond51[pIdx + 1] == "1") != isT) { // インデックス0が日付でそれ以降がpidxごとのTF
							for (int i2 = 0; i2 < confirmAnds.Length + 1; i2++) {
								if (i == i2) continue; // 一致するもの(はぶくやつ)はスキップ
								if (beforeNotAndKouho[i2] == null) beforeNotAndKouho[i2] = new HashSet<string>();
								beforeNotAndKouho[i2].Add(cond51[0]);
							}
						}
					}
				}

				HashSet<string>[] beforeOrKouho = new HashSet<string>[confirmOrs.Length + 1];
				for (int i = 0; i < confirmOrs.Length; i++) {
					(int pIdx, int ratioIdx, int diffDayIdx, bool isT) = SplitCondIdx(confirmOrs[i]);
					foreach (string[] cond51 in CsvControll.GetCond51All(symbol, diffDayIdx, ratioIdx)) {
						if (IsPro500AllOnly && !pro500Ds.Contains(cond51[0])) continue;
						if ((cond51[pIdx + 1] == "1") == isT) { // インデックス0が日付でそれ以降がpidxごとのTF
							for (int i2 = 0; i2 < confirmOrs.Length + 1; i2++) {
								if (i == i2) continue; // 一致するもの(はぶくやつ)はスキップ
								if (beforeOrKouho[i2] == null) beforeOrKouho[i2] = new HashSet<string>();
								beforeOrKouho[i2].Add(cond51[0]);
							}
						}
					}
				}

				(Dictionary<string, int> benefits, Dictionary<string, int> havePeriods) = GetBenefitData(symbol);

				for (int diffDayIdx = 0; diffDayIdx < diffDayList.Length; diffDayIdx++) {
					for (int ratioIdx = 0; ratioIdx < ratioList.Length; ratioIdx++) {
						List<string[]> cond51All = CsvControll.GetCond51All(symbol, diffDayIdx, ratioIdx);
						for (int pIdx = 0; pIdx < periodCntList.GetLength(0); pIdx++) {
							foreach (bool isT in new bool[2] { true, false }) {
								int condIdx = GetCondIdx(pIdx, ratioIdx, diffDayIdx, isT);
								if (Array.IndexOf(NotCond, condIdx) >= 0) continue;
								int[] nowHaves = new int[kouhoNum];
								for (int c = 0; c < cond51All.Count; c++) {
									string[] cond51 = cond51All[c];
									if (IsPro500AllOnly && !pro500Ds.Contains(cond51[0])) continue;
									if (!benefits.ContainsKey(cond51[0])) continue;

									if (isAndCheck && (cond51[pIdx + 1] == "1") != isT) continue;
									bool isOrCheck = !isAndCheck && (cond51[pIdx + 1] == "1") == isT;

									for (int i = 0; i < kouhoNum; i++) {
										int andIdx = i >= confirmAnds.Length ? confirmAnds.Length : i;
										int orIdx = i < confirmAnds.Length ? confirmOrs.Length : i - confirmAnds.Length;
										HashSet<string> beAnd = beforeNotAndKouho[andIdx] ?? new HashSet<string>();
										HashSet<string> beOr = beforeOrKouho[orIdx] ?? new HashSet<string>();
										if (beAnd.Contains(cond51[0]) || (!beOr.Contains(cond51[0]) && !isOrCheck)) continue;
										dataAll[i, condIdx, IdxMax + GetBeny(benefits[cond51[0]])]++;
										dataAll[i, condIdx, IdxMax + IdxTrue]++;
										dataAll[i, condIdx, IdxMax + IdxBene] += benefits[cond51[0]];
										dataAll[i, condIdx, IdxMax + IdxPeri] += havePeriods[cond51[0]];

										if (nowHaves[i] > c) continue;
										dataAll[i, condIdx, GetBeny(benefits[cond51[0]])]++;
										dataAll[i, condIdx, IdxTrue]++;
										dataAll[i, condIdx, IdxBene] += benefits[cond51[0]];
										dataAll[i, condIdx, IdxPeri] += havePeriods[cond51[0]];
										nowHaves[i] = c + havePeriods[cond51[0]] + 1;
									}
								}
							}
						}
					}
				}
				Common.DebugInfo("CheckCond51AllBase2Symbol", symbol, DateTime.Now);
			}

			// 並び変えるか
			HashSet<CondRes> condResAll = new HashSet<CondRes>();
			string result = "";
			double baseScore = 999999999;
			for (int i = 0; i < kouhoNum; i++) {
				int andIdx = i >= confirmAnds.Length ? confirmAnds.Length : i;
				int orIdx = i < confirmAnds.Length ? confirmOrs.Length : i - confirmAnds.Length;

				HashSet<CondRes> condResList = new HashSet<CondRes>();
				for (int j = 0; j < condNum(); j++) {
					if (dataAll[i, j, IdxMax + IdxTrue] == 0) continue;
					int[] info = new int[IdxMax * 2];
					for (int k = 0; k < IdxMax * 2; k++) info[k] = dataAll[i, j, k];
					CondRes condRes = new CondRes(
						andIdx, orIdx, andIdx == confirmAnds.Length ? -1 : confirmAnds[andIdx], orIdx == confirmOrs.Length ? -1 : confirmOrs[orIdx],
						j, info, confirmBeny, isAndCheck
					);
					condResList.Add(condRes);
					condResAll.Add(condRes);

					// ベーススコアを取得-1,-1,idx=0
					if (condRes.andCond == -1 && condRes.orCond == -1 && ((isAndCheck && condRes.condIdx == AllTrueCondIdx) || (!isAndCheck && condRes.condIdx == AllTrueCondIdx - 1))) {
						baseScore = condRes.subScore;
					}
				}

				result = "";
				foreach (CondRes c in condResList.OrderByDescending(c => c.SortNum()).Take(7)) result += c.DispRes();
				Common.DebugInfo("LowScoreRank", isAndCheck, andIdx, orIdx, result);
			}

			result = "";
			Dictionary<int, double> scores = new Dictionary<int, double>();
			foreach (CondRes c in condResAll.OrderByDescending(c => c.SortNum()).Take(50)) {
				result += c.DispRes();

				double scoreDiff = c.subScore - baseScore;
				if (scoreDiff > 0) {
					int i = kouhoNum - 1;
					if (c.andIdx != confirmAnds.Length) i = c.andIdx;
					if (c.orIdx != confirmOrs.Length) i = c.orIdx + confirmAnds.Length;

					if (!scores.ContainsKey(i)) scores[i] = 0;
					scores[i] += scoreDiff;
				}
			}
			foreach (var item in scores.OrderByDescending(kv => kv.Value)) {
				int i = item.Key;
				int andIdx = i >= confirmAnds.Length ? confirmAnds.Length : i;
				int orIdx = i < confirmAnds.Length ? confirmOrs.Length : i - confirmAnds.Length;
				foreach (CondRes c in condResAll.OrderByDescending(c => c.SortNum()).Take(50)) {
					if (c.andIdx == andIdx && c.orIdx == orIdx) {
						SaveConfirm(c);
						Common.DebugInfo("Check51AlterTrue", item.Value, baseScore, c.DispRes(), result);
						return true;
					}
				}
				Common.DebugInfo("Check51AlterError", andIdx, orIdx, item.Value, isAndCheck, result);
			}

			Common.DebugInfo("Check51AlterFalse", isAndCheck, result);
			return false;
		}






		private static int GetCondIdx(int pIdx, int ratioIdx, int diffDayIdx, bool isT)
		{
			return pIdx * ratioList.Length * diffDayList.Length * 2 + ratioIdx * diffDayList.Length * 2 + diffDayIdx * 2 + (isT ? 1 : 0);
		}
		private static (int, int, int, bool) SplitCondIdx(int condIdx)
		{
			int isTIdx = condIdx % 2;
			int diffDayIdx = (condIdx % (diffDayList.Length * 2) - isTIdx) / 2;
			int ratioIdx = (condIdx % (ratioList.Length * diffDayList.Length * 2) - diffDayIdx * 2 - isTIdx) / (diffDayList.Length * 2);
			int pIdx = (condIdx - ratioIdx * diffDayList.Length * 2 - diffDayIdx * 2 - isTIdx) / (ratioList.Length * diffDayList.Length * 2);
			return (pIdx, ratioIdx, diffDayIdx, isTIdx == 1);
		}
		private static int condNum()
		{
			return periodCntList.GetLength(0) * ratioList.Length * diffDayList.Length * 2;
		}
		private static (int[], int[]) GetConfirms(int type = 4)
		{
			int[] confirmAnds = ConfirmAnds; int[] confirmOrs = ConfirmOrs;

			if (IsKara) { confirmAnds = KaraConfirmAnds; confirmOrs = KaraConfirmOrs; }
			if (type == 1) { confirmAnds = OldAnd51List; confirmOrs = OldOr51List; }
			if (type == 2) { confirmAnds = Old2And51List; confirmOrs = Old2Or51List; }
			if (type == 3) { confirmAnds = new int[0] { }; confirmOrs = new int[1] { AllTrueCondIdx }; }
			if (type == 4) {
				List<string[]> info = CsvControll.GetCondConfirm();
				confirmAnds = new int[info[0].Length]; confirmOrs = new int[info[1].Length];
				for (int i = 0; i < info[0].Length; i++) confirmAnds[i] = Int32.Parse(info[0][i]);
				for (int i = 0; i < info[1].Length; i++) confirmOrs[i] = Int32.Parse(info[1][i]);
			}
			return (confirmAnds, confirmOrs);
		}
		private static int GetBeny(int benefit)
		{
			if (benefit >= 4) return 5;
			if (benefit >= 1) return 4;
			if (benefit >= -2) return 3;
			if (benefit >= -5) return 2;
			if (benefit >= -8) return 1;
			return 0;
		}
		private static Dictionary<string, HashSet<DateTime>> Getpro500Date()
		{
			List<string>[] pro500All = CsvControll.GetPro500All();
			Dictionary<string, HashSet<DateTime>> pro500Date = new Dictionary<string, HashSet<DateTime>>();
			foreach (List<string> info in pro500All) {
				DateTime date = DateTime.Parse("2000/01/01");
				for (int i = 0; i < info.Count; i++) {
					if (i == 0) {
						date = DateTime.Parse(info[0]);
					} else {
						if (!pro500Date.ContainsKey(info[i])) pro500Date[info[i]] = new HashSet<DateTime>();
						pro500Date[info[i]].Add(date);
					}
				}
			}
			return pro500Date;
		}
		private static HashSet<string> GetPro500Ds(Dictionary<string, HashSet<DateTime>> pro500Date, string symbol)
		{
			HashSet<string> pro500Ds = new HashSet<string>();
			if (IsPro500AllOnly) {
				if (!pro500Date.ContainsKey(symbol)) return pro500Ds;
				foreach (DateTime info in pro500Date[symbol]) {
					int idx = Common.GetDateIdx(info);
					for (int i = 0; i < 65; i++) pro500Ds.Add(Common.GetDateByIdx(idx + i).ToString(CsvControll.DFORM));
				}
			}
			return pro500Ds;
		}
		private static (Dictionary<string, int>, Dictionary<string, int>) GetBenefitData(string symbol)
		{
			Dictionary<string, int> benefits = new Dictionary<string, int>();
			Dictionary<string, int> havePeriods = new Dictionary<string, int>();
			foreach (string[] benefitInfo in CsvControll.GetBenefitAll(IsKara ? "Kara_" + symbol : symbol)) {
				benefits[benefitInfo[0]] = Int32.Parse(benefitInfo[1]);
				havePeriods[benefitInfo[0]] = Int32.Parse(benefitInfo[2]);
			}
			return (benefits, havePeriods);
		}
		private static (Dictionary<string, HashSet<string>>, Dictionary<string, HashSet<string>>) GetBeforeInfo(List<string> codeList, int[] confirmAnds, int[] confirmOrs, int andSkip, int orSkip)
		{
			Dictionary<string, HashSet<string>> beforeNotAnd = new Dictionary<string, HashSet<string>>();
			Dictionary<string, HashSet<string>> beforeOr = new Dictionary<string, HashSet<string>>();
			foreach (string symbol in codeList) {
				beforeNotAnd[symbol] = new HashSet<string>();
				for (int i = 0; i < confirmAnds.Length; i++) {
					if (andSkip == i) continue;
					(int pIdx, int ratioIdx, int diffDayIdx, bool isT) = SplitCondIdx(confirmAnds[i]);
					foreach (string[] cond51 in CsvControll.GetCond51All(symbol, diffDayIdx, ratioIdx)) {
						if ((cond51[pIdx + 1] == "1") != isT) beforeNotAnd[symbol].Add(cond51[0]);
					}
				}
				beforeOr[symbol] = new HashSet<string>();
				for (int i = 0; i < confirmOrs.Length; i++) {
					if (orSkip == i) continue;
					(int pIdx, int ratioIdx, int diffDayIdx, bool isT) = SplitCondIdx(confirmOrs[i]);
					foreach (string[] cond51 in CsvControll.GetCond51All(symbol, diffDayIdx, ratioIdx)) {
						if (beforeNotAnd[symbol].Contains(cond51[0])) continue;
						if ((cond51[pIdx + 1] == "1") == isT) beforeOr[symbol].Add(cond51[0]);
					}
				}
			}
			return (beforeNotAnd, beforeOr);
		}
		private static void SaveConfirm(CondRes res)
		{
			(bool isRmAnd, int rmIdx, bool isAddAnd, int addIdx) = res.GetChangeIdx();
			List<string[]> info = CsvControll.GetCondConfirm();
			List<string> confirmAnds = new List<string>(); List<string> confirmOrs = new List<string>();
			foreach (string s in info[0]) {
				if (isRmAnd && Int32.Parse(s) == rmIdx) continue;
				confirmAnds.Add(s);
			}
			if (isAddAnd && addIdx >= 0) confirmAnds.Add(addIdx.ToString());
			info[0] = confirmAnds.ToArray();

			foreach (string s in info[1]) {
				if (!isRmAnd && Int32.Parse(s) == rmIdx) continue;
				confirmOrs.Add(s);
			}
			if (!isAddAnd && addIdx >= 0) confirmOrs.Add(addIdx.ToString());
			info[1] = confirmOrs.ToArray();

			info.Add(new string[] { res.DispRes() });
			CsvControll.SetCondConfirm(info, false);
		}


		// ささっと全体のスコアを調べる
		public static void Check51One(string param1)
		{
			bool isAndCheck = param1 == "1";
			if (true) {
				Check51OneBase(-1, -1, isAndCheck);
			} else {
				// AndのフルチェックをするときはconfirmOrsを空配列にする
				for (int i = -1; i < ConfirmOrs.Length; i++) Check51OneBase(-1, i, isAndCheck);
				for (int i = -1; i < ConfirmAnds.Length; i++) Check51OneBase(i, -1, isAndCheck);
			}

		}
		private static void Check51OneBase(int andSkip = -1, int orSkip = -1, bool isAndCheck = false)
		{
			(int[] confirmAnds, int[] confirmOrs) = GetConfirms();

			bool isAllScore = false; // Andチェック・Orチェックを無視する
			bool isOrOkForce = confirmOrs.Length == 0; // orチェックを強制でOKにしておく
			List<string> codeList = CsvControll.GetCodeList();
			if (IsPro500Only) codeList = codeList.FindAll(c => Array.IndexOf(OldPro500, Int32.Parse(c)) >= 0);

			(Dictionary<string, HashSet<string>> beforeNotAnd, Dictionary<string, HashSet<string>> beforeOr) = GetBeforeInfo(codeList, confirmAnds, confirmOrs, andSkip, orSkip);

			Dictionary<string, HashSet<DateTime>> pro500Date = Getpro500Date();

			int debug = 0;

			int maxDay = 10;

			int[] info = new int[IdxMax * 2];
			int numAll = 0;
			Dictionary<int, int> benefitNum = new Dictionary<int, int>();
			foreach (string symbol in codeList) {
				HashSet<string> pro500Ds = GetPro500Ds(pro500Date, symbol);
				if (IsPro500AllOnly) {
					if (!pro500Date.ContainsKey(symbol)) continue;
					debug += pro500Ds.Count;
					//Common.DebugInfo("debug", symbol, pro500Ds.Count);
				}

				(Dictionary<string, int> benefits, Dictionary<string, int> havePeriods) = GetBenefitData(symbol);

				int nowHaves = 0;
				(int pIdx, int ratioIdx, int diffDayIdx, bool isT) = SplitCondIdx(AllTrueCondIdx);
				List<string[]> list = CsvControll.GetCond51All(symbol, diffDayIdx, ratioIdx);
				for (int i = 0; i < list.Count; i++) {
					string[] cond51 = list[i];
					//if (IsPro500Only && (Common.NewD2(DateTime.Parse(cond51[0]), startDate) || Common.NewD2(endDate, DateTime.Parse(cond51[0])))) continue;
					if (IsPro500AllOnly && !pro500Ds.Contains(cond51[0])) continue;
					if (!benefits.ContainsKey(cond51[0])) continue;

					numAll++;
					if (!isAllScore) {
						if (beforeNotAnd[symbol].Contains(cond51[0])) continue;
						if (!isOrOkForce && !beforeOr[symbol].Contains(cond51[0])) continue;
					}

					if (!benefitNum.ContainsKey(benefits[cond51[0]])) benefitNum[benefits[cond51[0]]] = 0;
					benefitNum[benefits[cond51[0]]]++;

					info[IdxMax + GetBeny(benefits[cond51[0]])]++;
					info[IdxMax + IdxTrue]++;
					info[IdxMax + IdxBene] += benefits[cond51[0]];
					info[IdxMax + IdxPeri] += havePeriods[cond51[0]];

					if (nowHaves > i) continue;

					info[GetBeny(benefits[cond51[0]])]++;
					info[IdxTrue]++;
					info[IdxBene] += benefits[cond51[0]];
					info[IdxPeri] += havePeriods[cond51[0]];
					nowHaves = i + havePeriods[cond51[0]] + 1;
				}
			}

			int[] confirmBeny = new int[6];
			CondRes condRes = new CondRes(
				andSkip, orSkip,
				andSkip >= 0 ? confirmAnds[andSkip] : -1, orSkip >= 0 ? confirmOrs[orSkip] : -1,
				0, info, confirmBeny, isAndCheck
			);

			//string res = "";
			//foreach (KeyValuePair<int, int> pair in benefitNum) res += pair.Key + ":" + pair.Value + ", ";
			//Common.DebugInfo(res);
			//int idx = andSkip == -1 ? confirmOrs[orSkip] : confirmAnds[andSkip];
			Common.DebugInfo("DebugCheckCond51",
				debug,
				//codeList.Count, pro500Date.Count, beforeNotAnd.Count, beforeOr.Count, benefitNum.Count, 全て同じを確認
				condRes.DispRes()
			);
		}


		// 複数のConfirmでのスコアを調べる
		public static void Check51Double()
		{
			// a
			(int[] confirmAnds, int[] confirmOrs) = GetConfirms();

			//(int[] confirmAnds, int[] confirmOrs) = GetConfirms();

			bool isAllScore = false; // Andチェック・Orチェックを無視する
			bool isOrOkForce = confirmOrs.Length == 0; // orチェックを強制でOKにしておく
			List<string> codeList = CsvControll.GetCodeList();
			if (IsPro500Only) codeList = codeList.FindAll(c => Array.IndexOf(OldPro500, Int32.Parse(c)) >= 0);

			(Dictionary<string, HashSet<string>> beforeNotAnd, Dictionary<string, HashSet<string>> beforeOr) = GetBeforeInfo(codeList, confirmAnds, confirmOrs, -1, -1);

			Dictionary<string, HashSet<DateTime>> pro500Date = Getpro500Date();

			int[] info = new int[IdxMax * 2];
			int numAll = 0;
			Dictionary<int, int> benefitNum = new Dictionary<int, int>();
			foreach (string symbol in codeList) {
				HashSet<string> pro500Ds = GetPro500Ds(pro500Date, symbol);
				if (IsPro500AllOnly) {
					if (!pro500Date.ContainsKey(symbol)) continue;
				}

				(Dictionary<string, int> benefits, Dictionary<string, int> havePeriods) = GetBenefitData(symbol);

				int nowHaves = 0;
				(int pIdx, int ratioIdx, int diffDayIdx, bool isT) = SplitCondIdx(AllTrueCondIdx);
				List<string[]> list = CsvControll.GetCond51All(symbol, diffDayIdx, ratioIdx);
				for (int i = 0; i < list.Count; i++) {
					string[] cond51 = list[i];
					if (IsPro500AllOnly && !pro500Ds.Contains(cond51[0])) continue;
					if (!benefits.ContainsKey(cond51[0])) continue;

					numAll++;
					if (!isAllScore) {
						if (beforeNotAnd[symbol].Contains(cond51[0])) continue;
						if (!isOrOkForce && !beforeOr[symbol].Contains(cond51[0])) continue;
					}

					if (!benefitNum.ContainsKey(benefits[cond51[0]])) benefitNum[benefits[cond51[0]]] = 0;
					benefitNum[benefits[cond51[0]]]++;

					info[IdxMax + GetBeny(benefits[cond51[0]])]++;
					info[IdxMax + IdxTrue]++;
					info[IdxMax + IdxBene] += benefits[cond51[0]];
					info[IdxMax + IdxPeri] += havePeriods[cond51[0]];

					if (nowHaves > i) continue;

					info[GetBeny(benefits[cond51[0]])]++;
					info[IdxTrue]++;
					info[IdxBene] += benefits[cond51[0]];
					info[IdxPeri] += havePeriods[cond51[0]];
					nowHaves = i + havePeriods[cond51[0]] + 1;
				}
			}

			int[] confirmBeny = new int[6];
			CondRes condRes = new CondRes(-1, -1, -1, -1, 0, info, confirmBeny, false);
			Common.DebugInfo("DebugCheckCond51", condRes.DispRes());
		}
		private static void GetAa(List<string> codeList, List<int> types, bool isAnd)
		{
			Dictionary<string, HashSet<string>> okListAll = new Dictionary<string, HashSet<string>>();
			foreach (int type in types) {
				(int[] confirmAnds, int[] confirmOrs) = GetConfirms(type);
				(Dictionary<string, HashSet<string>> beforeNotAnd, Dictionary<string, HashSet<string>> beforeOr) = GetBeforeInfo(codeList, confirmAnds, confirmOrs, -1, -1);
				Dictionary<string, HashSet<string>> okList = new Dictionary<string, HashSet<string>>();
				foreach (var item in beforeOr) {
					foreach (string date in item.Value) {
						if (beforeNotAnd[item.Key].Contains(date)) continue;
						if (!okList.ContainsKey(item.Key)) okList[item.Key] = new HashSet<string>();
						okList[item.Key].Add(date);
					}
				}


			}


		}




		private static readonly int[] ConfirmAndsTrue = new int[7] {
			6130,2796,737,8046,8368,8344,51,
		};
		private static readonly int[] ConfirmOrsTrue = new int[14] {
			472,66,1977,2203,1618,7436,4954,2639,52,6717,6433,5059,2998,1069,
		};
		/** 新しく作った条件一覧 */
		public static List<string[]> GetNewConditions()
		{
			List<string[]> res = new List<string[]>();

			for (int i = 0; i <= 1; i++) {
				foreach (int cond in (i == 0 ? ConfirmOrsTrue : ConfirmAndsTrue)) {
					(int pIdx, int ratioIdx, int diffDayIdx, bool isT) = SplitCondIdx(cond);
					res.Add(new string[7] {
						i.ToString(), // and条件かor条件か
						"51",
						periodCntList[pIdx,0].ToString(), // c1:1,3,6,10,20,30,50
						diffDayList[diffDayIdx].ToString(), //c3:1,3,6,10,20,30,50,70
						periodCntList[pIdx,1].ToString(), // d1:1,2,3,4,5,6 いやc1に応じる感じか
						isT ? "1" : "0", // 満たす満たさない
						ratioList[ratioIdx].ToString(), // a1: 0.65,0.75,0.8,0.85,0.9,0.95,1,1.05,1.1,1.17,1.25,1.35,1.5,1.7
					});
				}
			}

			return res;
		}


		/** 日経平均の激減した際の500の急上昇チェック */
		public static void JapanDownCheck()
		{
			// とりあえず2.5%上昇？を探す
			foreach (string[] info in CsvControll.GetJapanInfo()) {

			}
		}





		private const int Limit = 1600;
		// 設定したconditionsにて、全コードが(120日目～2024/8/30)の期間にてそれぞれ購入可能かどうかを調べて保存
		public static void SaveBuyInfo()
		{
			List<string[]> conditions = CsvControll.GetConditions(); // 昔決めた51条件のやつ
			List<DateTime> dateList = CsvControll.GetDateList();
			List<string> codeList = CsvControll.GetCodeList();
			string lastDate = "2025/03/05";

			int limit = 0;
			foreach (string code in codeList) {
				limit++;
				if (!(limit > Limit && limit <= Limit + 1000)) continue; // 仮

				List<string[]> saveData = new List<string[]>();
				List<string[]> codeInfo = CsvControll.GetCodeInfo(code);
				string date120 = codeInfo[120][0];

				if (IsAllCheck) {
				} else {
					if (!Common.Pro500(code)) continue;
					date120 = "2024/06/17";
					lastDate = "2024/09/10";
				}

				bool isStart = false;
				foreach (DateTime date in dateList) {
					// 後ろは2024/9/1で固定かな 前は最古(codeInfo[0])から120日後まで => condInfo[120]～2024/08/30
					if (date120 == date.ToString(CsvControll.DFORM)) isStart = true;
					if (!isStart) continue;
					if (lastDate == date.ToString(CsvControll.DFORM)) break;

					// 対象外は-1?いやデータなしかな
					string isCond = IsCondOk(date, codeInfo, conditions) ? "1" : "0";
					saveData.Add(new string[2] { date.ToString(CsvControll.DFORM), isCond });
				}
				CsvControll.SaveBuyCode(code, saveData);
			}
		}


		// 指定コード・日付が条件を完全に満たすか
		public static bool IsCondOk(DateTime date, List<string[]> codeInfo, List<string[]> conditions)
		{
			bool isOrOk = false;
			bool isAndOk = true;
			foreach (string[] cond in conditions) {
				bool isAnd = cond[0] == "1"; // and条件かor条件か
				if (!isAnd && isOrOk) continue; // or条件はこれ以上調べなくてよい
												// cond[1]は51
				bool isCond = Is51Cond(codeInfo, date, Int32.Parse(cond[2]), Int32.Parse(cond[3]), Int32.Parse(cond[4]), Double.Parse(cond[6]));
				bool isTrue = (cond[5] == "1") == isCond; // 満たす満たさない
				if (isAnd && !isTrue) {
					isAndOk = false;
					break;
				}
				if (!isAnd && isTrue) isOrOk = true;
			}

			return isOrOk && isAndOk;
		}

		public static bool Is51Cond(List<string[]> codeInfo, DateTime date, int period, int diffDay, int cnt, double ratio)
		{
			// 51:period日間でdiffDay日前との比率がratio以上となるのがcnt件以上
			// 53:c1日間でc3日前との比率の平均がa1以上
			// 61:c1日間でc3日前とc3日前から2c3日前の比率の変化回数がd1回以上
			// cは有効日付のみカウント→是正したほうがよいな

			// dateは購入日とする
			// dateからc1日間分遡ってループ処理していき、各日とそのc3日前の比率がa1以上かチェックし、それがd1件以上あるか

			// 日付がdateの直前まである必要がある date以上がなく、-1がなければアウト
			DateTime lastInfo = DateTime.Parse(codeInfo[codeInfo.Count - 1][0]);
			if (!Common.NewD2(date, lastInfo)) {
				if (!Common.SameD(Common.GetDateByIdx(Common.GetDateIdx(lastInfo) + 1), date)) {
					CsvControll.ErrorLog("Is51Cond", date.ToString(), lastInfo.ToString(), "");
					return false;
				}
			}


			// 日付は古い→新しいの順、単純にインデックスがcの値と考える
			for (int i = codeInfo.Count - 1; i >= 0; i--) {
				// 日付,始値,高値,安値,終値
				string[] info = codeInfo[i];
				// 指定日<=計測日　ならスキップ
				if (Common.NewD2(date, DateTime.Parse(info[0]))) continue;
				// データが足りないのでアウト
				if (i - diffDay < 0) Common.DebugInfo("ERROR1", info[0], date.ToString(CsvControll.DFORM), i, diffDay);
				if (Double.Parse(codeInfo[i - diffDay][4]) * ratio <= Double.Parse(info[4])) cnt--;
				if (cnt <= 0) return true;
				period--;
				if (period <= 0) return false;
			}

			return false;
		}



		// 利益平均と所持期間合計など計算
		public static void BenefitSum()
		{
			Dictionary<DateTime, int> japanScores = GetTrueJScoreList();
			List<string> codeList = CsvControll.GetCodeList();
			for (int nowIdx = 0; nowIdx < 10; nowIdx += 10) {
				for (int beforeIdx = 0; beforeIdx < 10; beforeIdx += 10) {
					double havePeriodRatio = 0; // 所持期間比率合計 合計10とかなら常時10銘柄を所持していられるイメージ
					double benefitSum = 0; // 利益合計
					double havePeriodSum = 0; // 所持期間合計

					foreach (string code in codeList) {
						if (!IsAllCheck && !Common.Pro500(code)) continue;

						double[] res = Benefit(code, japanScores, nowIdx, beforeIdx);
						havePeriodRatio += res[1] / res[2];
						benefitSum += res[0];
						havePeriodSum += res[1];
					}
					// 1コード1日あたりの利益平均(とりあえず222を基準とする)
					int ratio = (int)(benefitSum * 1000000 / havePeriodSum);
					//if (ratio > 70) {
					// ni:17- , bi:2-6
					Common.DebugInfo("BenefitSum", nowIdx, beforeIdx, ratio, havePeriodRatio, benefitSum, havePeriodSum);
					//}
				}
			}
		}

		// 特定コードについて 利益合計・所持期間/測定期間 を調べる
		private static double[] Benefit(string code, Dictionary<DateTime, int> japanScores, int nowIdx, int beforeIdx)
		{
			List<string[]> buyInfo = CsvControll.GetBuyCode(code); // 購入対象日か否か
			List<string[]> codeInfo = CsvControll.GetCodeInfo(code);

			double benefitSum = 0; // 利益合計
			int havePeriodSum = 0; // 所持期間合計

			int havePeriod = 0; // 所持期間
			int firstBuy = -1;
			double buyPrice = 0;
			int buyJScore = 0;
			DateTime buyDate = DateTime.Today;

			for (int i = 0; i < codeInfo.Count - 1; i++) {
				string[] info = codeInfo[i];
				if (info.Length == 0 || buyInfo.Count == 0) Common.DebugInfo("BenefitERROR", code, i, info.Length, buyInfo.Count);
				// その日付の日経平均スコアは必須 まあ基本は大体あるはず
				DateTime date = DateTime.Parse(info[0]);
				if (!japanScores.ContainsKey(date) || !japanScores.ContainsKey(DateTime.Parse(codeInfo[i + 1][0]))) continue;
				// buyinfoが存在する日付帯になったら開始 それまではcontinue
				if (info[0] == buyInfo[0][0]) firstBuy = i;
				if (firstBuy == -1) continue;
				if (i - firstBuy >= buyInfo.Count && buyPrice == 0) break;

				// 基本同じ日付の終値が購入値
				if (buyPrice == 0) {
					if (Int32.Parse(buyInfo[i - firstBuy][1]) == 1) {
						buyPrice = Double.Parse(info[4]);
						havePeriod = 1;
						// この日の日経平均スコア
						buyJScore = 0;
						if (japanScores.ContainsKey(date)) buyJScore = japanScores[date];
						if (japanScores.ContainsKey(DateTime.Parse(codeInfo[i + 1][0])) && buyJScore < japanScores[DateTime.Parse(codeInfo[i + 1][0])]) {
							buyJScore = japanScores[DateTime.Parse(codeInfo[i + 1][0])];
						}
						// 購入時日付
						buyDate = DateTime.Parse(info[0]);
					}
					continue;
				}

				bool isHalfDay = date.Month % 3 == 0 && date.Day >= 14;

				havePeriod++;

				int ratio1 = 7; int ratio2 = 4; int ratio3 = 3; int ratio4 = 2; int ratio5 = 1;
				if (isHalfDay) { ratio1 = 4; ratio2 = 3; ratio3 = 2; ratio4 = 1; ratio5 = 0; }

				bool isSell = false;
				double benefit = 0;
				if (havePeriod <= 5 && buyPrice * (1 + 0.01 * ratio1) <= Double.Parse(info[2])) {
					// 高値が購入値の1.04倍以上なら売却成功
					benefit = 0.01 * ratio1;
					isSell = true;
				} else if (havePeriod <= 10 && buyPrice * (1 + 0.01 * ratio2) <= Double.Parse(info[2])) {
					benefit = 0.01 * ratio2;
					isSell = true;
				} else if (havePeriod <= 20 && buyPrice * (1 + 0.01 * ratio3) <= Double.Parse(info[2])) {
					benefit = 0.01 * ratio3;
					isSell = true;
				} else if (havePeriod <= 30 && buyPrice * (1 + 0.01 * ratio4) <= Double.Parse(info[2])) {
					benefit = 0.01 * ratio4;
					isSell = true;
				} else if (buyPrice * (1 + 0.01 * ratio5) <= Double.Parse(info[2])) {
					benefit = 0.01 * ratio5;
					isSell = true;
				} else if (havePeriod >= 42) {
					// 売却失敗
					//Common.DebugInfo("FailedStartR:{0}:{1}:{2}:{3}:EndR\n", code, Double.Parse(info[4]), buyPrice, Double.Parse(info[4]) / buyPrice - 1);
					benefit = Double.Parse(info[4]) / buyPrice - 1;
					isSell = true;
				} else {
					// 損切 日経平均に応じた感じかな？模索する必要はあるな 危険度高 + 終値4％マイナスとかなら損切かしら
					// 利益最大化になるように検証かしら

					// 1:373, 2:48, 3:36, 4:103
					int jScore = 0;
					if (japanScores.ContainsKey(date)) jScore = japanScores[date];
					// 翌日分のも見て高いほうを参照
					if (japanScores.ContainsKey(DateTime.Parse(codeInfo[i + 1][0])) && jScore < japanScores[DateTime.Parse(codeInfo[i + 1][0])]) {
						jScore = japanScores[DateTime.Parse(codeInfo[i + 1][0])];
					}

					// 購入から現在までの損益(-0.01 ～ -0.30)
					//double nowBenefit = Double.Parse(info[3]) / buyPrice - 1;
					// 前日からの減少値(-0.01 ～ -0.30)
					double beforeBenefit = Double.Parse(info[3]) / Double.Parse(codeInfo[i - 1][4]) - 1;
					// 購入から現在(安値)までの損益(-0.01 ～ -0.30)
					double yasuneBenefit = Double.Parse(info[3]) / buyPrice - 1;

					double now0 = 6; double now1 = 3.5; double now2 = 3; double now3 = 2; double now4 = 0.5;
					double before0 = 3.5; double before1 = 1.5; double before2 = 1; double before3 = 0.5; double before4 = 0;
					if (isHalfDay) {
						now0 = 5; now1 = 2.5; now2 = 2; now3 = 1; now4 = 0;
						before0 = 2.5; before1 = 1; before2 = 0.5; before3 = 0; before4 = 0;
					}

					// ni:0-9=>2--8
					//double setNowBenefit = (double)3 - nowIdx;
					//double setBeforeBenefit = (double)3 - beforeIdx;
					if (jScore == 0) {
						if (yasuneBenefit <= -0.01 * now0 || beforeBenefit <= -0.01 * before0) isSell = true;
						//if (nowBenefit <= 0.01 * setNowBenefit || beforeBenefit <= 0.01 * setBeforeBenefit) isSell = true;
					} else if (jScore == 1) {
						if (yasuneBenefit <= -0.01 * now1 || beforeBenefit <= -0.01 * before1) isSell = true;
						//if (nowBenefit <= 0.01 * setNowBenefit || beforeBenefit <= 0.01 * setBeforeBenefit) isSell = true;
					} else if (jScore == 2) {
						if (yasuneBenefit <= -0.01 * now2 || beforeBenefit <= -0.01 * before2) isSell = true;
						//if (nowBenefit <= 0.01 * setNowBenefit || beforeBenefit <= 0.01 * setBeforeBenefit) isSell = true;
					} else if (jScore == 3) {
						if (yasuneBenefit <= -0.01 * now3 || beforeBenefit <= -0.01 * before3) isSell = true;
						//if (nowBenefit <= 0.01 * setNowBenefit || beforeBenefit <= 0.01 * setBeforeBenefit) isSell = true;
					} else if (jScore == 4) {
						if (yasuneBenefit <= -0.01 * now4 || beforeBenefit <= -0.01 * before4) isSell = true;
						//if (nowBenefit <= 0.01 * setNowBenefit || beforeBenefit <= 0.01 * setBeforeBenefit) isSell = true;
					}

					if (isSell) benefit = Double.Parse(info[4]) / buyPrice - 1;
				}
				if (isSell) {
					int jRatio = 5 - buyJScore; // 購入時JSCORE時によって調整
					bool isHalf = buyDate.Month % 3 == 0 && buyDate.Day >= 14;
					int dateRatio = isHalf ? 2 : 1;// 購入時期によって調整
					havePeriodSum += havePeriod * jRatio / dateRatio;
					benefitSum += benefit * jRatio / dateRatio;

					buyPrice = 0;
					havePeriod = 0;
				}
			}

			return new double[3] { benefitSum, havePeriodSum, buyInfo.Count };
		}



		public static readonly int[][] japanScore5 = new int[4][] {
			new int[] {3359,3486,4019},
			new int[] {2375,2924,4094},
			new int[] {3526,1877},
			new int[] {1767},
		};
		public static readonly int[][] japanScore4 = new int[4][] {
			new int[] {3359,3486},
			new int[] {3562,2915,2375,1396,2924,4094},
			new int[] {3526,1877,1928},
			new int[] {1767,1822},
		};
		public static readonly int[][] japanScore3 = new int[4][] {
			new int[] {3359,3486,189},
			new int[] {3501,3562,2915,2375},
			new int[] {3526,1877},
			new int[] {1767,1822},
		};
		public static readonly int[][] japanScore2 = new int[4][] {
			new int[] {3359,3486},
			new int[] {3501,3562,2915,2375},
			new int[] {3526,1877,1928},
			new int[] {1767,1822},
		};
		public static readonly int[][] japanScore1 = new int[4][] {
			new int[] {3359,3486},
			new int[] {3501,3562,1843,2915,2375},
			new int[] {3526,1928,2368,2941,1350},
			new int[] {1767,1822},
		};
		// 各日付について複数セットの条件を満たすかのチェック 厳しめのチェックから順番にやっていく
		private static Dictionary<DateTime, int> GetTrueJScoreList()
		{
			Dictionary<DateTime, int> res = new Dictionary<DateTime, int>();
			foreach (int[][] japanScoreConds in new int[5][][] { japanScore5, japanScore4, japanScore3, japanScore2, japanScore1 }) {
				Dictionary<DateTime, bool> isOrOks = new Dictionary<DateTime, bool>();
				Dictionary<DateTime, bool> isAndOks = new Dictionary<DateTime, bool>();
				for (int type = 0; type < 4; type++) {
					string isOmote = type % 2 == 0 ? "1" : "0"; //0,2はtrue, 1,3はfalse
					bool isAnd = type < 2; //0,1はAnd, 2,3はOr
					foreach (int idx in japanScoreConds[type]) {
						List<string[]> japanCond = CsvControll.GetJapanCond(idx);
						for (int i = 0; i < japanCond.Count; i++) {
							// この日付に対しての判定
							DateTime date = DateTime.Parse(japanCond[i][0]);
							if (isAnd) {
								if (japanCond[i][1] != isOmote) isAndOks[date] = false;
							} else {
								if (japanCond[i][1] == isOmote) isOrOks[date] = true; // Or条件成功
							}
						}
					}
				}

				List<string[]> japanCond2 = CsvControll.GetJapanCond(189);
				for (int i = 0; i < japanCond2.Count; i++) {
					// この日付に対しての判定
					DateTime date = DateTime.Parse(japanCond2[i][0]);
					if (!isAndOks.ContainsKey(date) && isOrOks.ContainsKey(date)) {
						if (!res.ContainsKey(date)) res[date] = 0;
						res[date]++;
					}
				}
			}

			Dictionary<DateTime, int> trueRes = new Dictionary<DateTime, int>();
			List<string[]> japanCond3 = CsvControll.GetJapanCond(189);
			for (int i = 2; i < japanCond3.Count; i++) {
				int[] jScoreRaws = new int[3];
				for (int j = 0; j < 3; j++) {
					DateTime date = DateTime.Parse(japanCond3[i - j][0]);
					jScoreRaws[j] = res.ContainsKey(date) ? res[date] : 0;
				}
				if (i == 2258 || i == 2259) jScoreRaws[0] /= 2;
				trueRes[DateTime.Parse(japanCond3[i][0])] = ConvertTrueJScore(jScoreRaws[0], jScoreRaws[1], jScoreRaws[2]);
			}
			return trueRes;
		}

		private static readonly int[][] japanScoreInfo = new int[5][] {
			// {1日前がこれ以上なら+1, 2日前がこれ以上なら+1, 1日前がこれ以下なら-1, 2日前がこれ以下なら-1}
			new int[] {3,3, -10,-10}, // 元が0 -1しない
			new int[] {3,3, 0,0}, // 元が1
			new int[] {4,3, 0,1}, // 元が2
			new int[] {5,3, 1,1}, // 元が3
			new int[] {10,10, 2,3}, // 元が4 +1しない
		};
		/** ベースJScoreを前日・前々日のスコアによってトゥルースコアに変換 */
		public static int ConvertTrueJScore(int baseJScore, int baseJScore1, int baseJScore2)
		{
			foreach (int score in new int[3] { baseJScore, baseJScore1, baseJScore2 }) {
				if (score < 0 || score > 5) CsvControll.ErrorLog("ConvertTrueJScore", baseJScore.ToString(), baseJScore1.ToString(), baseJScore2.ToString());
			}
			if (baseJScore == 5) return 4;
			int[] infos = japanScoreInfo[baseJScore];
			if (infos[0] <= baseJScore1 && infos[1] <= baseJScore2) return baseJScore + 1;
			if (infos[2] >= baseJScore1 && infos[3] >= baseJScore2) return baseJScore - 1;
			return baseJScore;
		}



		// 手順的には一日分のjapanCond4226(いや流石に必要分100くらいだけでええか)通りを追記保存=>それを元に指定idx達でスコア0-4を取得(これも保存？)
		// 指定日の前日までのcodeInfoはあらかじめ作っておく
		// 当日の場合はあらかじめ各数値でシミュレーションを行い、どの値であればスコアがいくつになるか逆算値をセットしておく
		public static void SaveJapanBaseScoreOneDay(DateTime setDate)
		{
			Dictionary<int, bool> updateIdxs = new Dictionary<int, bool>();
			foreach (int[][] japanScoreConds in new int[5][][] { japanScore5, japanScore4, japanScore3, japanScore2, japanScore1 }) {
				for (int type = 0; type < 4; type++) {
					foreach (int idx in japanScoreConds[type]) updateIdxs[idx] = true;
				}
			}
			// ここにはあらかじめ前日データまでいれとかねばならない
			List<string[]> japanInfo = CsvControll.GetJapanInfo();
			// 指定idx・dateの更新　JapanCondに追記する
			foreach (KeyValuePair<int, bool> pair in updateIdxs) SaveJapanCondOne(japanInfo, setDate, pair.Key);

			int score = 0;
			foreach (int[][] japanScoreConds in new int[5][][] { japanScore5, japanScore4, japanScore3, japanScore2, japanScore1 }) {
				bool isOrOk = false;
				bool isAndOk = true;
				for (int type = 0; type < 4; type++) {
					string isOmote = type % 2 == 0 ? "1" : "0"; //0,2はtrue, 1,3はfalse
					bool isAnd = type < 2; //0,1はAnd, 2,3はOr
					foreach (int idx in japanScoreConds[type]) {
						List<string[]> japanCond = CsvControll.GetJapanCond(idx);
						bool isExistData = false;
						for (int i = japanCond.Count - 1; i >= 0; i--) {
							// この日付に対しての判定
							if (Common.SameD(setDate, DateTime.Parse(japanCond[i][0]))) {
								if (isAnd) {
									if (japanCond[i][1] != isOmote) isAndOk = false;
								} else {
									if (japanCond[i][1] == isOmote) isOrOk = true; // Or条件成功
								}
								isExistData = true;
								break;
							}
						}
						if (!isExistData) {
							CsvControll.ErrorLog("SaveJapanBaseScoreOneDay", setDate.ToString(), "NoExist", "");
							return;
						}
					}
				}

				if (isAndOk && isOrOk) score++;
			}

			// date,スコアをセーブする　存在したらエラー？
			if (CsvControll.GetBaseJScore(setDate) != -99) {
				CsvControll.ErrorLog("SaveJapanScoreOneDay", setDate.ToString(), "DataExist", score.ToString());
				return;
			}

			CsvControll.SaveBaseJScores(new List<string[]>() { new string[2] { setDate.ToString(CsvControll.DFORM), score.ToString() } }, true);
		}

		// 指定した日付(基本最新日付)の日経平均について、設定した各条件(かぶりなし)を満たしているかどうかを判定してJapanCondに追記保存
		private static void SaveJapanCondOne(List<string[]> japanInfo, DateTime date, int idx)
		{
			// 保存前に当日データが既に存在してないかチェックかな
			foreach (string[] info in CsvControll.GetJapanCond(idx)) {
				if (Common.SameD(date, DateTime.Parse(info[0]))) {
					Common.DebugInfo("sjcEr3", idx, info[0]);
					return;
				}
			}

			int p = idx % periodCntList.GetLength(0);
			int diffDay = diffDayList[idx / (periodCntList.GetLength(0) * ratioList.Length)];
			double ratio = ratioList[(idx / periodCntList.GetLength(0)) % ratioList.Length];
			List<string[]> datas = new List<string[]>() {new string[2] {
				date.ToString(CsvControll.DFORM),
				Is51Cond(japanInfo, date, periodCntList[p, 0], diffDay, periodCntList[p, 1], ratio) ? "1" : "0",
			}};
			CsvControll.SaveJapanCond(idx, datas, true);
		}

		// 指定日前日データを使って指定日のスコア作成後、指定日の偽データ入れて指定日翌日の暫定スコアを200通り作成
		public static void SaveTrueJScoreIkichis(DateTime setDate)
		{
			List<string[]> japanInfo = CsvControll.GetJapanInfo();

			int lastEnd = (int)Double.Parse(japanInfo[japanInfo.Count - 1][4]);

			bool isExist = false;
			int japanInfoIdx = japanInfo.Count;
			for (int i = 0; i < japanInfo.Count; i++) {
				string[] info = japanInfo[i];
				if (Common.SameD(setDate, DateTime.Parse(info[0]))) {
					isExist = true;
					lastEnd = (int)Double.Parse(info[4]);
					japanInfoIdx = i;
					break;
				}
			}
			if (!isExist) {
				string[] last = japanInfo[japanInfo.Count - 1];
				// 最新の日付に翌日分のを暫定でいれる(これを200通りで変更させる)
				japanInfo.Add(new string[] { setDate.ToString(CsvControll.DFORM), last[1], last[2], last[3], last[4] });
			}


			DateTime nextDate = Common.GetDateByIdx(Common.GetDateIdx(setDate) + 1);

			// 直前に作ったやつとその前日分
			int baseJScore1 = CsvControll.GetBaseJScore(setDate);
			int baseJScore2 = CsvControll.GetBaseJScore(Common.GetDateByIdx(Common.GetDateIdx(setDate) - 1));

			List<string[]> scoreIkichis = new List<string[]>();
			for (int s = 0; s < 4000; s += 20) {
				//for (int s = 1100; s < 1500; s += 1) {
				// 200通りの値段でシミュレーション
				japanInfo[japanInfoIdx][4] = (lastEnd + s - 2000).ToString();

				int baseJScore = 0;
				int debug = 0;
				foreach (int[][] japanScoreConds in new int[5][][] { japanScore5, japanScore4, japanScore3, japanScore2, japanScore1 }) {
					bool isOrOk = false;
					bool isAndOk = true;
					for (int type = 0; type < 4; type++) {
						bool isOmote = type % 2 == 0; //0,2はtrue, 1,3はfalse
						bool isAnd = type < 2; //0,1はAnd, 2,3はOr
						foreach (int idx in japanScoreConds[type]) {
							int p = idx % periodCntList.GetLength(0);
							int diffDay = diffDayList[idx / (periodCntList.GetLength(0) * ratioList.Length)];
							double ratio = ratioList[(idx / periodCntList.GetLength(0)) % ratioList.Length];
							bool idCond = Is51Cond(japanInfo, nextDate, periodCntList[p, 0], diffDay, periodCntList[p, 1], ratio);
							if (isAnd) {
								if (idCond != isOmote) {
									isAndOk = false;
									//Common.DebugInfo("isAndOkFalse:{0}:{1}:{2}: {3},{4},{5},{6},{7} :EndR\n", s, debug, idx, nextDate, periodCntList[p, 0], diffDay, periodCntList[p, 1], ratio);
								}
							} else {
								if (idCond == isOmote) {
									isOrOk = true; // Or条件成功
												   //Common.DebugInfo("isOrOkTrue:{0}:{1}:{2}: {3},{4},{5},{6},{7} :EndR\n", s, debug, idx, nextDate, periodCntList[p, 0], diffDay, periodCntList[p, 1], ratio);
								}
							}
						}
					}

					if (isAndOk && isOrOk) baseJScore++;

					debug++;
					//if (isAndOk) Common.DebugInfo("baseJScore:{0}:{1}:{2}:EndR\n", s, debug, baseJScore);
					//if (isOrOk) Common.DebugInfo("baseJScore2:{0}:{1}:{2}:EndR\n", s, debug, baseJScore);
				}

				// 生スコア0-5を前日に0-4にする
				int trueScore = ConvertTrueJScore(baseJScore, baseJScore1, baseJScore2);
				// 翌日仮スコアを保存(値段,日経平均スコア)
				scoreIkichis.Add(new string[2] { (lastEnd + s - 2000).ToString(), trueScore.ToString() });
			}

			CsvControll.SaveTrueJScoreIkichis(scoreIkichis);
		}



		public static readonly int[,] periodCntList = new int[38, 2]{
			{1,1},{3,1},{3,2},{3,3},{6,1},{6,3},{6,4},{6,6},{10,1},{10,3},{10,5},{10,7},{10,10},
			{20,1},{20,3},{20,5},{20,7},{20,10},{20,15},{20,20},{30,1},{30,3},{30,6},{30,10},
			{30,15},{30,20},{30,25},{30,30},{50,1},{50,3},{50,6},
			{50,10},{50,15},{50,20},{50,25},{50,30},{50,40},{50,50},
		};
		public static readonly int[] diffDayList = new int[8] { 1, 3, 6, 10, 20, 30, 50, 70 };
		public static readonly double[] ratioList = new double[14] {
			0.65,0.75,0.8,0.85,0.9,0.95,1,1.05,1.1,1.17,1.25,1.35,1.5,1.7
		};


	}


	class CondRes
	{
		public int andIdx, orIdx, andCond, orCond, condIdx = -1, noTrue = 0, skipTrue = 0;
		public double noBenefit = 0, skipBenefit = 0, noPeriod = 0, skipPeriod = 0;
		public double[] scores = new double[4];
		public double subScore, subScore2 = 0;
		public int[] noBenys = new int[6];
		public int[] skipBenys = new int[6];
		public int[] confirmBenys = new int[6];
		private bool isAndCheck;
		public CondRes() { }
		public CondRes(int andIdx, int orIdx, int andCond, int orCond, int condIdx, int[] info, int[] confirmBeny, bool isAndCheck)
		{
			this.andIdx = andIdx; this.orIdx = orIdx; this.andCond = andCond; this.orCond = orCond; this.condIdx = condIdx;

			skipTrue = info[Condtions.IdxTrue];
			skipBenefit = Common.Round((double)info[Condtions.IdxBene] / (double)skipTrue, 4);
			skipPeriod = Common.Round((double)info[Condtions.IdxPeri] / (double)skipTrue, 4);
			noTrue = info[Condtions.IdxTrue + Condtions.IdxMax];
			noBenefit = Common.Round((double)info[Condtions.IdxBene + Condtions.IdxMax] / (double)noTrue, 4);
			noPeriod = Common.Round((double)info[Condtions.IdxPeri + Condtions.IdxMax] / (double)noTrue, 4);
			for (int k = 0; k < 6; k++) {
				skipBenys[k] = info[k];
				noBenys[k] = info[k + Condtions.IdxMax];
			}
			this.confirmBenys = confirmBeny;
			for (int k = 0; k < 4; k++) { SetScore(k); }

			this.isAndCheck = isAndCheck;
		}

		private void SetScore(int i)
		{
			/*
			if (i == 0) {
				if (noBenefit == 0 || noTrue == 0 || noRatio == 0) {
					scores[i] = 0; return;
				}
				scores[i] = -(noBenefit * Math.Pow(noTrue, 0.9) * Math.Pow(noRatio, 2.5));
				//7004, //Score:7193.80390891577, sT:75200, sP:7.715, sB:-0.9481, sR:0.3212, nT:362778, nP:7.9275, nB:-1.6159, nR:0.3708
				return;
			}
			if (i == 1) {
				if (noBenefit == 0 || noTrue == 0 || noRatio == 0) {
					scores[i] = 0; return;
				}
				scores[i] = -(noBenefit * Math.Pow(noTrue, 1.5) * Math.Pow(noRatio, 3.5));
				return;
			}
			*/
			if (i == 3) {
				int confirmSum = confirmBenys.Sum(); int noSum = noBenys.Sum();
				int diffAll = confirmSum - noSum;
				scores[i] = 0; subScore = 0; subScore2 = 0;
				if (isAndCheck && (diffAll <= Condtions.LowDiffAnd || noSum <= Condtions.LowSumAnd)) { scores[i] = -999; return; } // とりあえず300
				if (!isAndCheck && -diffAll <= Condtions.LowCntOr) { scores[i] = -999; return; } // とりあえず300

				for (int beny = 0; beny < 6; beny++) {
					int diff = confirmBenys[beny] - noBenys[beny];
					scores[i] += (double)diff / diffAll * Condtions.BenScore[beny];
					subScore2 += (double)noBenys[beny] / noSum * Condtions.BenScore[beny];
				}
				scores[i] = Common.Round(scores[i], 3);
				subScore = Common.Round((subScore2 * -10000) * Math.Pow(noSum, 0.5) * Math.Pow(Math.Max(skipBenefit, 0.000001), 0.5)) / Math.Pow(skipPeriod, 0.2);
				subScore2 = Common.Round(subScore2 * -10000);
				return;
			}

			double ratio = i == 0 ? 0.8 : i == 1 ? 0.85 : i == 2 ? 0.9 : 0.95;
			scores[i] = Common.Round(Math.Pow(skipTrue, ratio) * skipBenefit / Math.Pow(skipPeriod, Condtions.PeriodPow)
			  + Math.Pow(noTrue, ratio) * noBenefit / Math.Pow(noPeriod, Condtions.PeriodPow) / Condtions.NoSkipRatio, 3);
		}
		public double SortNum()
		{
			return noBenys.Sum() >= 50000 ? subScore : (subScore / 100); // いったん5万以下は排除
																		 //return subScore;
																		 //return Condtions.IsAndCheck ? scores[3] : subScore;
		}

		public void SetNoBeny(int beny, int num, int confirmBeny)
		{
			noBenys[beny] = num; confirmBenys[beny] = confirmBeny;
		}
		public void SetSkipBeny(int beny, int num) { skipBenys[beny] = num; }

		public (bool, int, bool, int) GetChangeIdx()
		{
			// 削除対象がand,orどっちかとidx
			bool isRmAnd = andIdx >= 0;
			// 追加対象がand,orどっちかとidx
			return (
				isRmAnd, isRmAnd ? andCond : orCond,
				isAndCheck, condIdx
			);
		}

		public string DispRes()
		{
			return "\n" + condIdx + ", //Score:" + SortNum() + ", Beny:" + DispBeny() + ", isAndC:" + isAndCheck
				+ ", sT:" + skipTrue + ", sP:" + skipPeriod + ", sB:" + skipBenefit
				+ ", nT:" + noTrue + ", nP:" + noPeriod + ", nB:" + noBenefit + ",";
			/*
				result += "\nAndCond:" + c.andCond + ", OrCond:" + c.orCond + ", Cond:" + c.condIdx + ", 
			 */

		}
		public string DispBeny()
		{
			string res1 = "【Be1】"; string res2 = "【Be2】";
			int confirmSum = confirmBenys.Sum(); int noSum = noBenys.Sum();
			//if (confirmSum == 0) return res1 + ", " + res2;
			int difdAll = confirmSum - noSum;
			res1 += "And:" + andCond + ",Or:" + orCond + ",DAll:" + difdAll + ",Sum:" + noSum + ",Sub:" + subScore + ",Sub2:" + subScore2 + ",SB:" + skipBenefit + ",";
			if (difdAll == 0) return res1 + ", " + res2;
			for (int beny = 0; beny < 6; beny++) {
				//if (confirmBenys[beny] == 0) continue;
				int diff = confirmBenys[beny] - noBenys[beny];
				res1 += beny + ":" + diff + "(" + (Common.Round((double)diff / difdAll, 3)) + "),";
				//res2 += beny + ":" + noBenys[beny] + "/" + confirmBenys[beny] + "/" + skipBenys[beny] + ",";
				res2 += noBenys[beny] + ",";
			}
			return res1 + ", " + res2 + " ";
		}
	}

}
